<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wjy&#39;s blog</title>
  
  <subtitle>行到水穷处，坐看云起时。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://messi1002.top/"/>
  <updated>2020-08-03T03:45:46.748Z</updated>
  <id>http://messi1002.top/</id>
  
  <author>
    <name>围巾一</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在浏览器输入 URL 回车之后发生了什么？</title>
    <link href="http://messi1002.top/2020/08/04/%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BE%93%E5%85%A5-URL-%E5%9B%9E%E8%BD%A6%E4%B9%8B%E5%90%8E%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
    <id>http://messi1002.top/2020/08/04/在浏览器输入-URL-回车之后发生了什么？/</id>
    <published>2020-08-04T03:42:24.000Z</published>
    <updated>2020-08-03T03:45:46.748Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="计算机网络" scheme="http://messi1002.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
      <category term="总结" scheme="http://messi1002.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="计算机网络" scheme="http://messi1002.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络之UDP协议</title>
    <link href="http://messi1002.top/2020/08/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8BUDP%E5%8D%8F%E8%AE%AE/"/>
    <id>http://messi1002.top/2020/08/04/计算机网络之UDP协议/</id>
    <published>2020-08-04T03:42:01.000Z</published>
    <updated>2020-08-03T03:44:40.077Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="计算机网络" scheme="http://messi1002.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
      <category term="协议" scheme="http://messi1002.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%8D%8F%E8%AE%AE/"/>
    
    
      <category term="计算机网络" scheme="http://messi1002.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络之TCP协议</title>
    <link href="http://messi1002.top/2020/08/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8BTCP%E5%8D%8F%E8%AE%AE/"/>
    <id>http://messi1002.top/2020/08/03/计算机网络之TCP协议/</id>
    <published>2020-08-03T03:41:53.000Z</published>
    <updated>2020-08-03T03:43:38.642Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="计算机网络" scheme="http://messi1002.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
      <category term="协议" scheme="http://messi1002.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%8D%8F%E8%AE%AE/"/>
    
    
      <category term="计算机网络" scheme="http://messi1002.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络之HTTPS协议</title>
    <link href="http://messi1002.top/2020/08/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8BHTTPS%E5%8D%8F%E8%AE%AE/"/>
    <id>http://messi1002.top/2020/08/02/计算机网络之HTTPS协议/</id>
    <published>2020-08-02T03:41:44.000Z</published>
    <updated>2020-08-03T03:45:17.872Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="计算机网络" scheme="http://messi1002.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
      <category term="协议" scheme="http://messi1002.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%8D%8F%E8%AE%AE/"/>
    
    
      <category term="计算机网络" scheme="http://messi1002.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络之HTTP协议</title>
    <link href="http://messi1002.top/2020/08/01/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8BHTTP%E5%8D%8F%E8%AE%AE/"/>
    <id>http://messi1002.top/2020/08/01/计算机网络之HTTP协议/</id>
    <published>2020-08-01T05:58:11.000Z</published>
    <updated>2020-08-03T03:45:25.254Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="计算机网络" scheme="http://messi1002.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
      <category term="协议" scheme="http://messi1002.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%8D%8F%E8%AE%AE/"/>
    
    
      <category term="计算机网络" scheme="http://messi1002.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>操作系统之Linux面经</title>
    <link href="http://messi1002.top/2020/07/25/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B9%8BLinux%E9%9D%A2%E7%BB%8F/"/>
    <id>http://messi1002.top/2020/07/25/操作系统之Linux面经/</id>
    <published>2020-07-25T03:11:36.000Z</published>
    <updated>2020-07-25T03:11:36.298Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>操作系统之进程和线程面经</title>
    <link href="http://messi1002.top/2020/07/22/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B9%8B%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E9%9D%A2%E7%BB%8F/"/>
    <id>http://messi1002.top/2020/07/22/操作系统之进程和线程面经/</id>
    <published>2020-07-22T13:04:14.000Z</published>
    <updated>2020-07-24T13:20:08.798Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="操作系统" scheme="http://messi1002.top/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="基础概念" scheme="http://messi1002.top/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/"/>
    
    
      <category term="操作系统" scheme="http://messi1002.top/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统之基础概念面经</title>
    <link href="http://messi1002.top/2020/07/20/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B9%8B%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E9%9D%A2%E7%BB%8F/"/>
    <id>http://messi1002.top/2020/07/20/操作系统之基础概念面经/</id>
    <published>2020-07-20T13:04:29.000Z</published>
    <updated>2020-07-24T13:19:37.843Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="操作系统" scheme="http://messi1002.top/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="基础概念" scheme="http://messi1002.top/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/"/>
    
    
      <category term="操作系统" scheme="http://messi1002.top/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>理解equals和hashCode方法</title>
    <link href="http://messi1002.top/2020/07/19/%E7%90%86%E8%A7%A3equals%E5%92%8ChashCode%E6%96%B9%E6%B3%95/"/>
    <id>http://messi1002.top/2020/07/19/理解equals和hashCode方法/</id>
    <published>2020-07-19T04:08:19.000Z</published>
    <updated>2020-07-19T04:08:19.630Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>我的2020秋招</title>
    <link href="http://messi1002.top/2020/07/08/%E6%88%91%E7%9A%842020%E7%A7%8B%E6%8B%9B/"/>
    <id>http://messi1002.top/2020/07/08/我的2020秋招/</id>
    <published>2020-07-08T07:46:12.000Z</published>
    <updated>2020-08-08T14:24:14.048Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="423a676434d38347386b833ee4e1cc9e3d969652b18dee6538379a3033f85ab2"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
    
      <category term="2020秋招" scheme="http://messi1002.top/categories/2020%E7%A7%8B%E6%8B%9B/"/>
    
      <category term="面经" scheme="http://messi1002.top/categories/2020%E7%A7%8B%E6%8B%9B/%E9%9D%A2%E7%BB%8F/"/>
    
    
      <category term="面经" scheme="http://messi1002.top/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>Java基础复习之String类</title>
    <link href="http://messi1002.top/2020/07/06/Java%E5%9F%BA%E7%A1%80%E5%A4%8D%E4%B9%A0%E4%B9%8BString%E7%B1%BB/"/>
    <id>http://messi1002.top/2020/07/06/Java基础复习之String类/</id>
    <published>2020-07-06T15:05:35.000Z</published>
    <updated>2020-08-08T14:25:11.563Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>具体见 <strong><a href="https://github.com/LingCoder/OnJava8/blob/master/docs/book/18-Strings.md" target="_blank" rel="noopener">《OnJava8》之字符串</a></strong></p></blockquote><h3 id="1-基础"><a href="#1-基础" class="headerlink" title="1.基础"></a>1.基础</h3><h4 id="①字符串的不可变"><a href="#①字符串的不可变" class="headerlink" title="①字符串的不可变"></a>①字符串的不可变</h4><ul><li>String 对象是不可变的。String 类中每一个看起来会修改 String 值的方法，实际上都是创建了一个全新的 String 对象，以包含修改后的字符串内容，而最初的 String 对象则丝毫未动。</li></ul><p><img src="./1594906565967.png" alt="Alt text"></p><ul><li>每当把 String 对象作为方法的参数时，都会复制一份引用，而该引用所指向的对象其实一直待在单一的物理位置上，从未动过。</li><li>代码演示如下：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> string;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2019/9/21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 字符串的不可变</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InvariableString</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">upperCase</span><span class="params">(String s3)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"s3.hashCode(): "</span> + s3.hashCode());</span><br><span class="line">        String s4 = s3.toUpperCase();</span><br><span class="line">        System.out.println(<span class="string">"s4.hashCode(): "</span> + s4.hashCode());</span><br><span class="line">        <span class="keyword">return</span> s4;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        String s1 = <span class="string">"wjy"</span>;</span><br><span class="line">        <span class="comment">// 当把s1传递给upperCase()方法时，实际传递的是其引用的一个拷贝。</span></span><br><span class="line">        <span class="comment">// 其实，每当把String对象作为方法的参数时，都会复制一份引用，而该引用所指向的对象其实一直待在单一的物理位置上，从未动过。</span></span><br><span class="line">        <span class="comment">// 只有upperCase()方法运行的时候，局部引用s3才存在。</span></span><br><span class="line">        <span class="comment">// 一旦upperCase()方法运行结束，s3就消失了。</span></span><br><span class="line">        <span class="comment">// 而upperCase()方法的返回值，其实是最终结果的引用。</span></span><br><span class="line">        <span class="comment">// 这足以说明，upperCase()方法返回的引用已经指向了一个新的对象，而s1仍然在原来的位置。</span></span><br><span class="line">        String s2 = upperCase(s1);</span><br><span class="line">        System.out.println(<span class="string">"s1: "</span> + s1);</span><br><span class="line">        System.out.println(<span class="string">"s2: "</span> + s2);</span><br><span class="line">        System.out.println(<span class="string">"s1.hashCode(): "</span> + s1.hashCode());</span><br><span class="line">        System.out.println(<span class="string">"s2.hashCode(): "</span> + s2.hashCode());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="./1594905034723.png" alt="Alt text"></p><h4 id="②-的重载"><a href="#②-的重载" class="headerlink" title="②+ 的重载"></a>②+ 的重载</h4><ul><li>String 对象是不可变的，可以给一个 String 对象添加任意多的别名。因为 String 是只读的，所以指向它的任何引用都不可能修改它的值，因此，也就不会影响到其他引用。</li><li>不可变性会带来一定的效率问题。为 String 对象重载的 + 操作符就是一个例子。</li><li>如下代码演示了操作符 + 可以用来连接 String：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> string;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Concatenation</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String mango = <span class="string">"mango"</span>;</span><br><span class="line">        String s = <span class="string">"abc"</span> + mango + <span class="string">"def"</span> + <span class="number">47</span>;</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="./1595061667175.png" alt="Alt text"></p><ul><li>让我们用 JDK 自带的 javap 工具来反编译以上代码，看看以上代码是如何工作的。</li></ul><p><img src="./1595063786496.png" alt="Alt text"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">string</span>.<span class="title">Concatenation</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> string.Concatenation();</span><br><span class="line">    Code:</span><br><span class="line">       <span class="number">0</span>: aload_0</span><br><span class="line">       1: invokespecial #1                  // Method java/lang/Object."&lt;init&gt;":()V</span><br><span class="line">       <span class="number">4</span>: <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(java.lang.String[])</span></span>;</span><br><span class="line">    Code:</span><br><span class="line">       0: ldc           #2                  // String mango</span><br><span class="line">       <span class="number">2</span>: astore_1</span><br><span class="line">       3: new           #3                  // class java/lang/StringBuilder</span><br><span class="line">       <span class="number">6</span>: dup</span><br><span class="line">       7: invokespecial #4                  // Method java/lang/StringBuilder."&lt;init&gt;":()V</span><br><span class="line">      10: ldc           #5                  // String abc</span><br><span class="line">      12: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span><br><span class="line">      <span class="number">15</span>: aload_1</span><br><span class="line">      16: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span><br><span class="line">      19: ldc           #7                  // String def</span><br><span class="line">      21: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span><br><span class="line">      <span class="number">24</span>: bipush        <span class="number">47</span></span><br><span class="line">      26: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;</span><br><span class="line">      29: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;</span><br><span class="line">      <span class="number">32</span>: astore_2</span><br><span class="line">      33: getstatic     #10                 // Field java/lang/System.out:Ljava/io/PrintStream;</span><br><span class="line">      <span class="number">36</span>: aload_2</span><br><span class="line">      37: invokevirtual #11                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V</span><br><span class="line">      <span class="number">40</span>: <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编译器自动引入了 java.lang.StringBuilder 类。虽然源代码中并没有使用 StringBuilder 类，但是编译器却自作主张地使用了它，就因为它更高效。</li><li>在这里，编译器创建了一个 StringBuilder 对象，用于构建最终的 String，并对每个字符串调用了一次 append() 方法，共计 4 次。最后调用 toString() 生成结果，并存为 s (使用的命令为 astore_2)。</li></ul><hr><h3 id="2-字符串操作"><a href="#2-字符串操作" class="headerlink" title="2.字符串操作"></a>2.字符串操作</h3><h4 id="①常用方法"><a href="#①常用方法" class="headerlink" title="①常用方法"></a>①常用方法</h4><p><img src="./1594048114766.png" alt="Alt text"><br><img src="./1594048125574.png" alt="Alt text"><br><img src="./1594048134975.png" alt="Alt text"></p><ul><li>从上表可知，当需要改变字符串的内容时，String 类的方法都会返回一个新的 String 对象。同时，如果内容不改变，String 方法只会返回原始对象的一个引用，这样可以节约存储空间以及避免额外的开销。</li></ul><h4 id="②代码演示"><a href="#②代码演示" class="headerlink" title="②代码演示"></a>②代码演示</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> string;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2019/9/20</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 字符串操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringManipulation</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"-------创建字符串-------"</span>);</span><br><span class="line">        String s = <span class="string">"messi is so great!"</span>;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="string">"HE IS SO FAT!"</span>);</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[]&#123;<span class="string">'1'</span>, <span class="string">'9'</span>, <span class="string">'9'</span>, <span class="string">'9'</span>&#125;;</span><br><span class="line">        <span class="keyword">char</span>[] c = <span class="keyword">new</span> <span class="keyword">char</span>[]&#123;<span class="string">'1'</span>, <span class="string">'0'</span>, <span class="string">'0'</span>, <span class="string">'2'</span>&#125;;</span><br><span class="line">    </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------打印字符串-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"打印s: "</span> + s);</span><br><span class="line">        System.out.println(<span class="string">"打印sb: "</span> + sb);</span><br><span class="line">        System.out.println(<span class="string">"打印b: "</span> + b);</span><br><span class="line">        System.out.println(<span class="string">"打印c: "</span> + c);</span><br><span class="line">        System.out.println(<span class="string">"s'toString(): "</span> + s.toString());</span><br><span class="line">        System.out.println(<span class="string">"sb'toString(): "</span> + sb.toString());</span><br><span class="line">        System.out.println(<span class="string">"b'toString(): "</span> + b.toString());</span><br><span class="line">        System.out.println(<span class="string">"c'toString(): "</span> + c.toString());</span><br><span class="line">        System.out.println(<span class="string">"解析b: "</span> + String.valueOf(b));</span><br><span class="line">        System.out.println(<span class="string">"解析c: "</span> + String.valueOf(c));</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------打印字符串的长度-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s'length: "</span> + s.length());</span><br><span class="line">        System.out.println(<span class="string">"sb'length: "</span> + sb.length());</span><br><span class="line">        System.out.println(<span class="string">"b'length: "</span> + b.length);</span><br><span class="line">        System.out.println(<span class="string">"c'length: "</span> + c.length);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------获取字符串中索引位置上的字符-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s的第一个字符: "</span> + s.charAt(<span class="number">0</span>));</span><br><span class="line">        System.out.println(<span class="string">"sb的第一个字符: "</span> + sb.charAt(<span class="number">0</span>));</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------生成一个char[]，包含字符串中的所有字符。-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s.toCharArray(): "</span> + s.toCharArray());</span><br><span class="line">        System.out.println(<span class="string">"解析s.toCharArray(): "</span> + String.valueOf(s.toCharArray()));</span><br><span class="line">        System.out.println(<span class="string">"sb.toString().toCharArray(): "</span> + sb.toString().toCharArray());</span><br><span class="line">        System.out.println(<span class="string">"解析sb.toString().toCharArray(): "</span> + String.valueOf(sb.toString().toCharArray()));</span><br><span class="line">    </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------比较两个字符串的内容是否相同-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s与s比较: "</span> + s.equals(s));</span><br><span class="line">        System.out.println(<span class="string">"s与sb比较: "</span> + s.equals(sb));</span><br><span class="line">        System.out.println(<span class="string">"s与s的全大写(忽略大小写)比较: "</span> + s.equalsIgnoreCase(s.toUpperCase()));</span><br><span class="line">        System.out.println(<span class="string">"sb与sb的全小写(忽略大小写)比较: "</span> + sb.toString().equalsIgnoreCase(sb.toString().toLowerCase()));</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------按词典顺序比较字符串的内容，比较结果为负数、零或正数，大小写不等价。-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s与s比较: "</span> + s.compareTo(s));</span><br><span class="line">        System.out.println(<span class="string">"s与sb比较: "</span> + s.compareTo(sb.toString()));</span><br><span class="line">        System.out.println(<span class="string">"s与s的全大写(忽略大小写)比较: "</span> + s.compareToIgnoreCase(s.toUpperCase()));</span><br><span class="line">        System.out.println(<span class="string">"sb与sb的全小写(忽略大小写)比较: "</span> + sb.toString().compareToIgnoreCase(sb.toString().toLowerCase()));</span><br><span class="line">    </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------如果该字符串包含参数的内容，则返回true。-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s中是否包含messi: "</span> + s.contains(<span class="string">"messi"</span>));</span><br><span class="line">        System.out.println(<span class="string">"sb中是否包含messi: "</span> + sb.toString().contains(<span class="string">"messi"</span>));</span><br><span class="line">        System.out.println(<span class="string">"-------如果该字符串与参数的内容完全一致，则返回true。-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s是否与messi一致: "</span> + s.contentEquals(<span class="string">"messi"</span>));</span><br><span class="line">        System.out.println(<span class="string">"sb是否与sb一致: "</span> + sb.toString().contentEquals(sb));</span><br><span class="line">    </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------返回boolean结果，以表明字符串的长度是否为0。-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s的长度是否为0: "</span> + s.isEmpty());</span><br><span class="line">        System.out.println(<span class="string">"空字符串的长度是否为0: "</span> + <span class="keyword">new</span> String().isEmpty());</span><br><span class="line">    </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------返回boolean结果，以表明所比较区域是否相等。-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s从头开始与messi比较(默认不忽略大小写): "</span> + s.regionMatches(<span class="number">0</span>, <span class="string">"messi"</span>, <span class="number">0</span>, <span class="number">5</span>));</span><br><span class="line">        System.out.println(<span class="string">"s从头开始与MESSI IS SO GREAT!比较(忽略大小写): "</span> + s.regionMatches(<span class="keyword">true</span>, <span class="number">0</span>, <span class="string">"MESSI IS SO GREAT!"</span>, <span class="number">0</span>, s.length()));</span><br><span class="line">        System.out.println(<span class="string">"s从头开始与MESSI IS SO GREAT!比较(不忽略大小写): "</span> + s.regionMatches(<span class="keyword">false</span>, <span class="number">0</span>, <span class="string">"MESSI IS SO GREAT!"</span>, <span class="number">0</span>, s.length()));</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------返回boolean结果，以表明该字符串是否以传入参数开始。-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s是否以messi开头: "</span> + s.startsWith(<span class="string">"messi"</span>));</span><br><span class="line">        System.out.println(<span class="string">"sb是否以messi开头: "</span> + sb.toString().startsWith(<span class="string">"messi"</span>));</span><br><span class="line">        System.out.println(<span class="string">"s的第五位是否以空格开头: "</span> + s.startsWith(<span class="string">" "</span>, <span class="number">5</span>));</span><br><span class="line">        System.out.println(<span class="string">"-------返回boolean结果，以表明该字符串是否以传入参数结尾。-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s是否以!结尾: "</span> + s.endsWith(<span class="string">"!"</span>));</span><br><span class="line">        System.out.println(<span class="string">"sb是否以!结尾: "</span> + sb.toString().endsWith(<span class="string">"!"</span>));</span><br><span class="line">    </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------如果该字符串并不包含此参数，就返回-1，否则返回此参数在字符串中的起始索引。-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s中是否包含!: "</span> + s.indexOf(<span class="string">'!'</span>));</span><br><span class="line">        System.out.println(<span class="string">"s中是否包含essi(第一位开始找): "</span> + s.indexOf(<span class="string">"essi"</span>, <span class="number">1</span>));</span><br><span class="line">        System.out.println(<span class="string">"sb中是否包含!: "</span> + sb.indexOf(<span class="string">"!"</span>));</span><br><span class="line">        System.out.println(<span class="string">"sb中是否包含messi: "</span> + sb.indexOf(<span class="string">"messi"</span>));</span><br><span class="line">        System.out.println(<span class="string">"-------lastIndexOf()是从后往前搜索-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s中是否包含t(倒数第二位开始找): "</span> + s.lastIndexOf(<span class="string">'t'</span>, s.length() - <span class="number">2</span>));</span><br><span class="line">        System.out.println(<span class="string">"s中是否包含messi: "</span> + s.lastIndexOf(<span class="string">"messi"</span>));</span><br><span class="line">        System.out.println(<span class="string">"sb中是否包含!: "</span> + sb.lastIndexOf(<span class="string">"!"</span>));</span><br><span class="line">        System.out.println(<span class="string">"sb中是否包含messi: "</span> + sb.indexOf(<span class="string">"messi"</span>));</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------返回一个新的字符串，以包含参数指定的子串。-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s的5-length-1位: "</span> + s.substring(<span class="number">5</span>));</span><br><span class="line">        System.out.println(<span class="string">"s的5-length-2位: "</span> + s.substring(<span class="number">5</span>, s.length() - <span class="number">1</span>));</span><br><span class="line">        System.out.println(<span class="string">"s的0-length-5位: "</span> + s.subSequence(<span class="number">0</span>, s.length() - <span class="number">4</span>));</span><br><span class="line">        System.out.println(<span class="string">"sb的5-length-1位: "</span> + sb.substring(<span class="number">5</span>));</span><br><span class="line">        System.out.println(<span class="string">"sb的5-length-2位: "</span> + sb.substring(<span class="number">5</span>, sb.length() - <span class="number">1</span>));</span><br><span class="line">        System.out.println(<span class="string">"sb的0-length-5位: "</span> + sb.subSequence(<span class="number">0</span>, sb.length() - <span class="number">4</span>));</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------返回一个新的字符串，内容为原始字符串连接上参数字符串。-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"拼接s、 And 和sb: "</span> + s.concat(<span class="string">" And "</span>).concat(sb.toString()));</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------返回替换字符后的新字符串，如果没有发生替换，则返回原始的字符串。-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"把messi替换为MESSI: "</span> + s.replace(<span class="string">"messi"</span>, <span class="string">"MESSI"</span>));</span><br><span class="line">        System.out.println(<span class="string">"把HE替换为he: "</span> + sb.replace(<span class="number">0</span>, <span class="number">2</span>, <span class="string">"he"</span>));</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------将字符串中字符的大小写改变后，返回一个新的字符串。如果没有任何改变，则返回原始的字符串。-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s内容转换为大写: "</span> + s.toUpperCase());</span><br><span class="line">        System.out.println(<span class="string">"sb内容转换为小写: "</span> + sb.toString().toLowerCase());</span><br><span class="line">    </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------将字符串两端的空白符删除后，返回一个新的字符串。如果没有任何改变，则返回原始的字符串。-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s: "</span> + s.trim());</span><br><span class="line">        System.out.println(<span class="string">" 1 : "</span> + <span class="keyword">new</span> String(<span class="string">" 1 "</span>).trim());</span><br><span class="line">        System.out.println(<span class="string">" 2: "</span> + <span class="keyword">new</span> String(<span class="string">" 2"</span>).trim());</span><br><span class="line">    </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------返回一个表示参数内容的字符串-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"char[]: "</span> + String.valueOf(<span class="keyword">new</span> <span class="keyword">char</span>[]&#123;<span class="string">'w'</span>, <span class="string">'j'</span>, <span class="string">'y'</span>&#125;));</span><br><span class="line">        System.out.println(<span class="string">"boolean: "</span> + String.valueOf(<span class="keyword">true</span>));</span><br><span class="line">        System.out.println(<span class="string">"char: "</span> + String.valueOf(<span class="string">','</span>));</span><br><span class="line">        System.out.println(<span class="string">"int: "</span> + String.valueOf(<span class="number">10</span>));</span><br><span class="line">        System.out.println(<span class="string">"long: "</span> + String.valueOf(<span class="number">10L</span>));</span><br><span class="line">        System.out.println(<span class="string">"float: "</span> + String.valueOf(<span class="number">10.0f</span>));</span><br><span class="line">        System.out.println(<span class="string">"double: "</span> + String.valueOf(<span class="number">10.0</span>d));</span><br><span class="line">    </span><br><span class="line">        System.out.println(<span class="string">"\n"</span> + <span class="string">"-------按照正则表达式拆分字符串，返回一个结果数组。-------"</span>);</span><br><span class="line">        String position = <span class="string">"山东省济南市博文区"</span> + <span class="string">"哈哈哈"</span>;</span><br><span class="line">        String province = position.split(<span class="string">"省"</span>)[<span class="number">0</span>];</span><br><span class="line">        position = position.split(<span class="string">"省"</span>)[<span class="number">1</span>];</span><br><span class="line">        String city = position.split(<span class="string">"市"</span>)[<span class="number">0</span>];</span><br><span class="line">        position = position.split(<span class="string">"市"</span>)[<span class="number">1</span>];</span><br><span class="line">        String region = position.split(<span class="string">"区"</span>)[<span class="number">0</span>];</span><br><span class="line">        position = position.split(<span class="string">"区"</span>)[<span class="number">1</span>];</span><br><span class="line">        System.out.println(<span class="string">"省: "</span> + province);</span><br><span class="line">        System.out.println(<span class="string">"市: "</span> + city);</span><br><span class="line">        System.out.println(<span class="string">"区: "</span> + region);</span><br><span class="line">        System.out.println(<span class="string">"其余部分: "</span> + position);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="./1594906276289.png" alt="Alt text"><br><img src="./1594906303238.png" alt="Alt text"><br><img src="./1594906336052.png" alt="Alt text"><br><img src="./1594906363345.png" alt="Alt text"><br><img src="./1594906387312.png" alt="Alt text"></p><hr><h3 id="3-格式化输出"><a href="#3-格式化输出" class="headerlink" title="3.格式化输出"></a>3.格式化输出</h3><h4 id="①printf-风格"><a href="#①printf-风格" class="headerlink" title="①printf() 风格"></a>①printf() 风格</h4><ul><li>C 语言的 <code>printf()</code> 并不像 Java 那样连接字符串，它使用一个简单的格式化字符串，加上要插入其中的值，然后将其格式化输出。<code>printf()</code> 并不使用重载的 + 操作符（C 语言没有重载）来连接引号内的字符串或字符串变量，而是使用特殊的占位符来表示数据将来的位置，并且它还将插入格式化字符串的参数，以逗号分隔，排成一行。例如：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.printf(<span class="string">"Row 1: [%d %f]%n"</span>, x, y);</span><br></pre></td></tr></table></figure><ul><li>Java SE5 引入了 format() 方法，可用于 PrintStream 或者 PrintWriter 对象，其中也包括 System.out 对象。format() 方法模仿了 C 语言的 printf()。Java 中 format() 和 printf() 是等价的，都模仿了 C 语言中 <code>printf()</code> 风格的格式化输出，使得控制输出的代码更加简单，也给予了 Java 开发者对于输出格式与排列更加大的控制能力 。</li><li>另外，String 类也有一个 static format() 方法，可以格式化字符串。</li><li>Java 中的占位符如下图所示：</li></ul><p><img src="./1594047284578.png" alt="Alt text"></p><ul><li>代码演示如下：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> string;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2019/9/21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 格式化输出</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FormattedOutput</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"-------System.out.println-------"</span>);</span><br><span class="line">        System.out.println(<span class="string">'a'</span> + <span class="string">", "</span> + <span class="keyword">true</span>);</span><br><span class="line">        System.out.println(<span class="string">"1 + 1"</span> + <span class="string">" = "</span> + <span class="number">2</span>);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"-------System.out.printf()-------"</span>);</span><br><span class="line">        System.out.printf(<span class="string">"%c, %b%n"</span>, <span class="string">'a'</span>, <span class="keyword">true</span>);</span><br><span class="line">        System.out.printf(<span class="string">"%s = %d%n"</span>, <span class="string">"1 + 1"</span>, <span class="number">2</span>);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"-------System.out.format()-------"</span>);</span><br><span class="line">        System.out.format(<span class="string">"%c, %b%n"</span>, <span class="string">'a'</span>, <span class="keyword">true</span>);</span><br><span class="line">        System.out.format(<span class="string">"%s = %d%n"</span>, <span class="string">"1 + 1"</span>, <span class="number">2</span>);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"-------String.format()-------"</span>);</span><br><span class="line">        System.out.println(String.format(<span class="string">"%c, %b"</span>, <span class="string">'a'</span>, <span class="keyword">true</span>));</span><br><span class="line">        System.out.println(String.format(<span class="string">"%s = %d"</span>, <span class="string">"1 + 1"</span>, <span class="number">2</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="./1594905396782.png" alt="Alt text"></p><h4 id="②Formatter-类"><a href="#②Formatter-类" class="headerlink" title="②Formatter 类"></a>②Formatter 类</h4><h4 id="③格式化修饰符"><a href="#③格式化修饰符" class="headerlink" title="③格式化修饰符"></a>③格式化修饰符</h4><h4 id="④Formatter-转换"><a href="#④Formatter-转换" class="headerlink" title="④Formatter 转换"></a>④Formatter 转换</h4><hr><h3 id="4-正则表达式"><a href="#4-正则表达式" class="headerlink" title="4.正则表达式"></a>4.正则表达式</h3><hr><h3 id="5-扫描输入"><a href="#5-扫描输入" class="headerlink" title="5.扫描输入"></a>5.扫描输入</h3><h4 id="①读取数据"><a href="#①读取数据" class="headerlink" title="①读取数据"></a>①读取数据</h4><h4 id="②Scanner类"><a href="#②Scanner类" class="headerlink" title="②Scanner类"></a>②Scanner类</h4><h4 id="③用正则表达式扫描"><a href="#③用正则表达式扫描" class="headerlink" title="③用正则表达式扫描"></a>③用正则表达式扫描</h4><h4 id="④StringTokenizer类"><a href="#④StringTokenizer类" class="headerlink" title="④StringTokenizer类"></a>④StringTokenizer类</h4><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#119;&#x6a;&#x79;&#109;&#x65;&#x73;&#115;&#105;&#x40;&#x31;&#x36;&#51;&#46;&#x63;&#111;&#109;" target="_blank" rel="noopener">&#119;&#x6a;&#x79;&#109;&#x65;&#x73;&#115;&#105;&#x40;&#x31;&#x36;&#51;&#46;&#x63;&#111;&#109;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;具体见 &lt;strong&gt;&lt;a href=&quot;https://github.com/LingCoder/OnJava8/blob/master/docs/book/18-Strings.md&quot; target=&quot;_blank&quot; rel=&quot;noopener
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>忘掉失去的，珍惜拥有的。</title>
    <link href="http://messi1002.top/2020/07/05/%E5%BF%98%E6%8E%89%E5%A4%B1%E5%8E%BB%E7%9A%84%EF%BC%8C%E7%8F%8D%E6%83%9C%E6%8B%A5%E6%9C%89%E7%9A%84%E3%80%82/"/>
    <id>http://messi1002.top/2020/07/05/忘掉失去的，珍惜拥有的。/</id>
    <published>2020-07-05T13:45:27.000Z</published>
    <updated>2020-07-05T14:18:20.032Z</updated>
    
    <content type="html"><![CDATA[<h4 id="小动物们"><a href="#小动物们" class="headerlink" title="小动物们"></a>小动物们</h4><p><img src="./1593955933569.png" alt="Alt text"><br><img src="./1593955978818.png" alt="Alt text"></p><hr><h4 id="沙雕西西"><a href="#沙雕西西" class="headerlink" title="沙雕西西"></a>沙雕西西</h4><p><img src="./1593956011826.png" alt="Alt text"></p><hr><h4 id="夜景很美"><a href="#夜景很美" class="headerlink" title="夜景很美"></a>夜景很美</h4><p><img src="./1593956028911.png" alt="Alt text"></p><hr><h4 id="毕业季"><a href="#毕业季" class="headerlink" title="毕业季"></a>毕业季</h4><p><img src="./1593956074349.png" alt="Alt text"></p><hr><h4 id="哥哥"><a href="#哥哥" class="headerlink" title="哥哥"></a>哥哥</h4><p><img src="./1593956068907.png" alt="Alt text"><br><img src="./1593956806314.png" alt="Alt text"></p><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#x77;&#x6a;&#x79;&#109;&#x65;&#115;&#x73;&#x69;&#64;&#x31;&#54;&#x33;&#46;&#99;&#x6f;&#x6d;" target="_blank" rel="noopener">&#x77;&#x6a;&#x79;&#109;&#x65;&#115;&#x73;&#x69;&#64;&#x31;&#54;&#x33;&#46;&#99;&#x6f;&#x6d;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;小动物们&quot;&gt;&lt;a href=&quot;#小动物们&quot; class=&quot;headerlink&quot; title=&quot;小动物们&quot;&gt;&lt;/a&gt;小动物们&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;./1593955933569.png&quot; alt=&quot;Alt text&quot;&gt;&lt;br&gt;&lt;img src=&quot;./
      
    
    </summary>
    
    
      <category term="随笔" scheme="http://messi1002.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="原创" scheme="http://messi1002.top/categories/%E9%9A%8F%E7%AC%94/%E5%8E%9F%E5%88%9B/"/>
    
    
      <category term="随笔" scheme="http://messi1002.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>三种限流算法</title>
    <link href="http://messi1002.top/2020/07/03/%E4%B8%89%E7%A7%8D%E9%99%90%E6%B5%81%E7%AE%97%E6%B3%95/"/>
    <id>http://messi1002.top/2020/07/03/三种限流算法/</id>
    <published>2020-07-03T13:05:27.000Z</published>
    <updated>2020-07-05T14:22:03.294Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Java" scheme="http://messi1002.top/categories/Java/"/>
    
      <category term="并发编程" scheme="http://messi1002.top/categories/Java/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java并发编程" scheme="http://messi1002.top/tags/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Java后台常见面试问题整理</title>
    <link href="http://messi1002.top/2020/07/02/Java%E5%90%8E%E5%8F%B0%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86/"/>
    <id>http://messi1002.top/2020/07/02/Java后台常见面试问题整理/</id>
    <published>2020-07-02T07:15:49.000Z</published>
    <updated>2020-07-19T00:50:52.675Z</updated>
    
    <content type="html"><![CDATA[<h4 id="⑥异常"><a href="#⑥异常" class="headerlink" title="⑥异常"></a>⑥异常</h4><blockquote><p>具体见 <strong><a href="https://messi1002.top/2018/09/25/Java%E5%BC%82%E5%B8%B8%E4%BD%93%E7%B3%BB/">Java异常体系</a></strong></p></blockquote><hr><h3 id="2-Java-并发编程"><a href="#2-Java-并发编程" class="headerlink" title="2.Java 并发编程"></a>2.Java 并发编程</h3><h4 id="①线程基础"><a href="#①线程基础" class="headerlink" title="①线程基础"></a>①线程基础</h4><h4 id="②synchronized-关键字"><a href="#②synchronized-关键字" class="headerlink" title="②synchronized 关键字"></a>②synchronized 关键字</h4><h4 id="③线程八大核心基础"><a href="#③线程八大核心基础" class="headerlink" title="③线程八大核心基础"></a>③线程八大核心基础</h4><h4 id="④Java-内存模型"><a href="#④Java-内存模型" class="headerlink" title="④Java 内存模型"></a>④Java 内存模型</h4><h4 id="⑤volatile-关键字"><a href="#⑤volatile-关键字" class="headerlink" title="⑤volatile 关键字"></a>⑤volatile 关键字</h4><h4 id="⑥finnal-关键字"><a href="#⑥finnal-关键字" class="headerlink" title="⑥finnal 关键字"></a>⑥finnal 关键字</h4><h4 id="⑦死锁、活锁、饥饿"><a href="#⑦死锁、活锁、饥饿" class="headerlink" title="⑦死锁、活锁、饥饿"></a>⑦死锁、活锁、饥饿</h4><blockquote><p>具体见 <strong><a href="https://messi1002.top/2020/04/03/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%AD%BB%E9%94%81%E7%9A%84%E5%89%8D%E7%94%9F%E4%BB%8A%E4%B8%96/">Java并发编程之死锁的前生今世</a></strong>、<strong><a href="https://messi1002.top/2020/06/16/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%B4%BB%E8%B7%83%E6%80%A7%E9%97%AE%E9%A2%98/">Java并发编程之活跃性问题</a></strong></p></blockquote><ul><li>问：什么是死锁？<ul><li>答： 两个（或多个）线程（或进程）相互持有对方所需要的资源，又不主动释放，导致大家都无法继续前进，程序陷入无尽的阻塞，这就是死锁。具体见   <strong><a href="https://messi1002.top/2020/04/03/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%AD%BB%E9%94%81%E7%9A%84%E5%89%8D%E7%94%9F%E4%BB%8A%E4%B8%96/">Java并发编程之死锁的前生今世</a></strong> — 1.死锁是什么？有什么危害？</li></ul></li><li>问：死锁形成的原因？<ul><li>因为系统资源不足：如果系统资源充足，进程的资源请求都能够得到满足，死锁出现的可能性就很低，否则<br>就会因争夺有限的资源而陷入死锁。</li><li>进程运行推进的顺序不合适：如两个线程互相占有彼此需要的资源，同时请求对方占有的资源，往往是程序设计不合理。注意：信号量使用不当就会造成死锁。</li><li>资源分配不当（面试时不答这一条）。</li></ul></li><li>问：发生死锁的四个必要条件？<ul><li>答：互斥条件、请求与保持条件、不剥夺条件、循环等待条件。具体见   <strong><a href="https://messi1002.top/2020/04/03/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%AD%BB%E9%94%81%E7%9A%84%E5%89%8D%E7%94%9F%E4%BB%8A%E4%B8%96/">Java并发编程之死锁的前生今世</a></strong> — 3.死锁的 4 个必要条件</li></ul></li><li>问：死锁、活锁、饥饿和死循环的区别？<ul><li>答：具体见 <strong><a href="https://messi1002.top/2020/06/16/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%B4%BB%E8%B7%83%E6%80%A7%E9%97%AE%E9%A2%98/">Java并发编程之活跃性问题</a></strong></li><li>相同点：一般将死锁、活锁和饥饿统称为活跃性问题（也称为活性故障），它们都会导致程序无法顺利执行。</li><li>不同点：如下表所示。<table><thead><tr><th align="left">区别</th><th align="left">概念</th><th align="left">不同处</th></tr></thead><tbody><tr><td align="left">死锁</td><td align="left">两个（或多个）线程（或进程）相互持有对方所需要的资源，又不主动释放，导致大家都无法继续前进，程序陷入无尽的阻塞。(争来争去 谁也得不到)</td><td align="left">1.一定是循环等待对方手里的资源导致的<br>2.至少有 2 个或 2 个以上的进程同时发生<br>3.进程处于阻塞态<br>4.操作系统分配资源的策略不合理导致<br>5.是管理者（操作系统）的问题</td></tr><tr><td align="left">活锁</td><td align="left">（用两个线程举例）是指线程 1 可以使用资源，但它很礼貌，让线程 2 先使用资源。线程 2 也可以使用资源，但它很绅士，让线程 1 先使用资源。这样你让我，我让你，最后两个线程都无法使用资源。（让来让去 谁都不拥有）</td><td align="left">1.所谓的 “活”，指处于活锁的实体是在不断的改变状态， 而处于死锁的实体表现为等待。<br>2.活锁有可能自行解开，死锁则不能。</td></tr><tr><td align="left">饥饿</td><td align="left">线程需要某些资源（通常指 CPU），但是却始终得不到。（排多久 都轮不到自己）</td><td align="left">1.只能由一个进程发生饥饿<br>2.可能在阻塞态，也可能在就绪态。<br>3.操作系统分配资源的策略不合理导致<br>4.是管理者（操作系统）的问题<br></td></tr><tr><td align="left">死循环</td><td align="left">程序的控制流程一直在重复运行某一段代码，无法结束。其原因可能是程序中的循环没有设结束循环的条件，或是结束循环的条件不可能成立等。</td><td align="left">1.可能只有一个<br>2.进程可以是运行态<br>3.由代码逻辑错误导致的<br>4.是被管理者（程序员）的问题</td></tr></tbody></table></li></ul></li><li>问：如何判断死锁和死循环？<ul><li>通过 <code>jstack pid</code> 命令，对程序进行堆栈分析。</li><li>使用 <code>TOP</code> 命令查看 CPU 使用率：如果 CPU 使用率高，那就是死循环；如果 CPU 使用率正常且内存占用正常，那就是死锁。</li></ul></li><li>问：死锁代码 demo<ul><li>答：具体见   <strong><a href="https://messi1002.top/2020/04/03/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%AD%BB%E9%94%81%E7%9A%84%E5%89%8D%E7%94%9F%E4%BB%8A%E4%B8%96/">Java并发编程之死锁的前生今世</a></strong> — 2.发生死锁的例子</li></ul></li><li>问：如何预防死锁？<ul><li>答：具体见   <strong><a href="https://messi1002.top/2020/04/03/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%AD%BB%E9%94%81%E7%9A%84%E5%89%8D%E7%94%9F%E4%BB%8A%E4%B8%96/">Java并发编程之死锁的前生今世</a></strong> — 6.实际工程中如何避免死锁？</li></ul></li><li>问：如何检测死锁？<ul><li>答： 具体见   <strong><a href="https://messi1002.top/2020/04/03/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%AD%BB%E9%94%81%E7%9A%84%E5%89%8D%E7%94%9F%E4%BB%8A%E4%B8%96/">Java并发编程之死锁的前生今世</a></strong> — 4.如何定位死锁？</li></ul></li><li>问：如果解决死锁？<ul><li>答： 具体见   <strong><a href="https://messi1002.top/2020/04/03/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%AD%BB%E9%94%81%E7%9A%84%E5%89%8D%E7%94%9F%E4%BB%8A%E4%B8%96/">Java并发编程之死锁的前生今世</a></strong> — 5.修复死锁的策略</li></ul></li><li>问：如果有个需求要求不能死锁，应该怎么设计（即预防死锁）？<ul><li>破坏互斥条件：即在系统里取消互斥。若资源不被一个进程独占使用，那么死锁是肯定不会发生的。一般来说在这四个条件中，互斥条件是无法破坏的。</li><li>破坏请求与保持条件：即阻止进程在持有资源的同时申请其他资源。</li><li>破坏不剥夺条件：即允许对资源实行抢夺。</li><li>破坏循环等待条件：如将系统中的所有资源统一编号，进程可在任何时刻提出资源申请，但所有申请必须按照资源的编号顺序（升序）提出。这样做就能保证系统不出现死锁。</li></ul></li></ul><h4 id="⑧线程池"><a href="#⑧线程池" class="headerlink" title="⑧线程池"></a>⑧线程池</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;⑥异常&quot;&gt;&lt;a href=&quot;#⑥异常&quot; class=&quot;headerlink&quot; title=&quot;⑥异常&quot;&gt;&lt;/a&gt;⑥异常&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;具体见 &lt;strong&gt;&lt;a href=&quot;https://messi1002.top/2018/09/25
      
    
    </summary>
    
    
      <category term="2020秋招" scheme="http://messi1002.top/categories/2020%E7%A7%8B%E6%8B%9B/"/>
    
      <category term="知识点总结" scheme="http://messi1002.top/categories/2020%E7%A7%8B%E6%8B%9B/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="知识点总结" scheme="http://messi1002.top/tags/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程之AQS</title>
    <link href="http://messi1002.top/2020/06/28/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8BAQS/"/>
    <id>http://messi1002.top/2020/06/28/Java并发编程之AQS/</id>
    <published>2020-06-28T04:42:55.000Z</published>
    <updated>2020-06-27T08:38:47.558Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Java" scheme="http://messi1002.top/categories/Java/"/>
    
      <category term="并发编程" scheme="http://messi1002.top/categories/Java/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java并发编程" scheme="http://messi1002.top/tags/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程之控制并发流程</title>
    <link href="http://messi1002.top/2020/06/27/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%8E%A7%E5%88%B6%E5%B9%B6%E5%8F%91%E6%B5%81%E7%A8%8B/"/>
    <id>http://messi1002.top/2020/06/27/Java并发编程之控制并发流程/</id>
    <published>2020-06-27T04:43:56.000Z</published>
    <updated>2020-06-27T06:53:25.685Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Java" scheme="http://messi1002.top/categories/Java/"/>
    
      <category term="并发编程" scheme="http://messi1002.top/categories/Java/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java并发编程" scheme="http://messi1002.top/tags/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程之并发集合</title>
    <link href="http://messi1002.top/2020/06/26/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%B9%B6%E5%8F%91%E9%9B%86%E5%90%88/"/>
    <id>http://messi1002.top/2020/06/26/Java并发编程之并发集合/</id>
    <published>2020-06-26T04:43:43.000Z</published>
    <updated>2020-06-27T08:38:30.258Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Java" scheme="http://messi1002.top/categories/Java/"/>
    
      <category term="并发编程" scheme="http://messi1002.top/categories/Java/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java并发编程" scheme="http://messi1002.top/tags/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>关于LeetCode刷题</title>
    <link href="http://messi1002.top/2020/06/26/%E5%85%B3%E4%BA%8ELeetCode%E5%88%B7%E9%A2%98/"/>
    <id>http://messi1002.top/2020/06/26/关于LeetCode刷题/</id>
    <published>2020-06-26T03:21:52.000Z</published>
    <updated>2020-07-05T14:17:27.320Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一些小感悟"><a href="#一些小感悟" class="headerlink" title="一些小感悟"></a>一些小感悟</h4><p>从 2019 年 1 月到 2020 年 7 月，整整一年半的时间里，断断续续的刷了这些题。从最开始的不习惯和无法理解，到现在的得心应手，真的付出了很多时间和精力。<br>但愿秋招能有个好结果，继续冲吧！</p><p><img src="./1593954715301.png" alt="Alt text"><br><img src="./1593954792818.png" alt="Alt text"></p><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#x77;&#106;&#x79;&#x6d;&#101;&#x73;&#115;&#105;&#x40;&#49;&#54;&#51;&#46;&#99;&#x6f;&#x6d;" target="_blank" rel="noopener">&#x77;&#106;&#x79;&#x6d;&#101;&#x73;&#115;&#105;&#x40;&#49;&#54;&#51;&#46;&#99;&#x6f;&#x6d;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一些小感悟&quot;&gt;&lt;a href=&quot;#一些小感悟&quot; class=&quot;headerlink&quot; title=&quot;一些小感悟&quot;&gt;&lt;/a&gt;一些小感悟&lt;/h4&gt;&lt;p&gt;从 2019 年 1 月到 2020 年 7 月，整整一年半的时间里，断断续续的刷了这些题。从最开始的不习惯和无法理
      
    
    </summary>
    
    
      <category term="随笔" scheme="http://messi1002.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="原创" scheme="http://messi1002.top/categories/%E9%9A%8F%E7%AC%94/%E5%8E%9F%E5%88%9B/"/>
    
    
      <category term="随笔" scheme="http://messi1002.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程之阻塞队列</title>
    <link href="http://messi1002.top/2020/06/25/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97/"/>
    <id>http://messi1002.top/2020/06/25/Java并发编程之阻塞队列/</id>
    <published>2020-06-25T06:45:19.000Z</published>
    <updated>2020-07-09T06:52:37.936Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Java" scheme="http://messi1002.top/categories/Java/"/>
    
      <category term="并发编程" scheme="http://messi1002.top/categories/Java/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java并发编程" scheme="http://messi1002.top/tags/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>finnal关键字</title>
    <link href="http://messi1002.top/2020/06/24/finnal%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    <id>http://messi1002.top/2020/06/24/finnal关键字/</id>
    <published>2020-06-24T13:58:14.000Z</published>
    <updated>2020-06-27T08:37:57.617Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Java" scheme="http://messi1002.top/categories/Java/"/>
    
      <category term="并发编程" scheme="http://messi1002.top/categories/Java/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java并发编程" scheme="http://messi1002.top/tags/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
</feed>
