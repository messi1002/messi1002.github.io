<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wjy&#39;s blog</title>
  
  <subtitle>行到水穷处，坐看云起时。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://messi1002.top/"/>
  <updated>2019-09-07T03:33:48.936Z</updated>
  <id>http://messi1002.top/</id>
  
  <author>
    <name>围巾一</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在命令行中使用SSH免密登录服务器</title>
    <link href="http://messi1002.top/2019/05/25/%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%AD%E4%BD%BF%E7%94%A8SSH%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://messi1002.top/2019/05/25/在命令行中使用SSH免密登录服务器/</id>
    <published>2019-05-25T07:44:31.000Z</published>
    <updated>2019-09-07T03:33:48.936Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-生成公钥和私钥"><a href="#1-生成公钥和私钥" class="headerlink" title="1.生成公钥和私钥"></a>1.生成公钥和私钥</h3><ul><li>打开命令行 输入 <strong>ssh-keygen -t rsa</strong></li><li>然后连续按三个回车(第一个回车表示不重命名文件 第二、三个回车表示不设置密码)</li></ul><p><img src="./1558759109193.png" alt="Alt text"></p><ul><li>最后在 C 盘找到生成的公钥和私钥</li></ul><p><img src="./1558759476823.png" alt="Alt text"></p><hr><h3 id="2-将公钥写入服务器"><a href="#2-将公钥写入服务器" class="headerlink" title="2.将公钥写入服务器"></a>2.将公钥写入服务器</h3><blockquote><p><strong>ps：需要服务器的防火墙放行 22 端口。</strong></p></blockquote><ul><li>在命令行使用密码登录服务器</li></ul><p><img src="./1558757036170.png" alt="Alt text"></p><ul><li>将生成的公匙内容粘贴到 <strong>authorized_keys</strong> 文件中</li></ul><p><img src="./1558768523032.png" alt="Alt text"><br><img src="./1558705596214.png" alt="Alt text"></p><ul><li>退出服务器</li><li>重新连接时 不用输入密码即可登录！</li></ul><p><img src="./1558758414242.png" alt="Alt text"></p><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#119;&#106;&#x79;&#x6d;&#x65;&#115;&#x73;&#x69;&#64;&#49;&#x36;&#51;&#46;&#x63;&#111;&#109;" target="_blank" rel="noopener">&#119;&#106;&#x79;&#x6d;&#x65;&#115;&#x73;&#x69;&#64;&#49;&#x36;&#51;&#46;&#x63;&#111;&#109;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-生成公钥和私钥&quot;&gt;&lt;a href=&quot;#1-生成公钥和私钥&quot; class=&quot;headerlink&quot; title=&quot;1.生成公钥和私钥&quot;&gt;&lt;/a&gt;1.生成公钥和私钥&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;打开命令行 输入 &lt;strong&gt;ssh-keygen -t rsa&lt;/
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://messi1002.top/categories/Linux/"/>
    
      <category term="阿里云服务器" scheme="http://messi1002.top/categories/Linux/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="CentOS7" scheme="http://messi1002.top/tags/CentOS7/"/>
    
      <category term="SSH" scheme="http://messi1002.top/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>项目管理利器-maven</title>
    <link href="http://messi1002.top/2019/05/16/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%88%A9%E5%99%A8-maven/"/>
    <id>http://messi1002.top/2019/05/16/项目管理利器-maven/</id>
    <published>2019-05-15T17:02:53.000Z</published>
    <updated>2019-09-07T03:36:50.136Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>maven 是 Apache 下的一个纯 Java 开发的开源项目。</strong><br>基于项目对象模型(POM)的概念，它可以从一个中心资料片管理项目构建、报告和文件。<br>它也是一套强大的自动化构建工具，覆盖了编译、测试、运行、清理、打包和部署等整个项目构建的周期。<br>并且它提供了一个仓库的概念，可以统一地管理项目所依赖的第三方 jar 包。</p></blockquote><hr><h3 id="1-安装-maven"><a href="#1-安装-maven" class="headerlink" title="1.安装 maven"></a>1.安装 maven</h3><h4 id="①下载-maven"><a href="#①下载-maven" class="headerlink" title="①下载 maven"></a>①下载 maven</h4><ul><li>下载地址：<a href="https://maven.apache.org/download.cgi" target="_blank" rel="noopener">https://maven.apache.org/download.cgi</a></li></ul><p><img src="./1555411972602.png" alt="Alt text"></p><ul><li>然后解压压缩包</li></ul><h4 id="②安装目录介绍"><a href="#②安装目录介绍" class="headerlink" title="②安装目录介绍"></a>②安装目录介绍</h4><p><img src="./1555412239139.png" alt="Alt text"></p><h4 id="③配置环境变量"><a href="#③配置环境变量" class="headerlink" title="③配置环境变量"></a>③配置环境变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">M2_HOME: D:\apache-maven-3.5.4(安装目录)</span><br><span class="line">path: %M2_HOME%\bin</span><br></pre></td></tr></table></figure><p><img src="./1555412766079.png" alt="Alt text"><br><img src="./1555412915871.png" alt="Alt text"></p><blockquote><p><strong>注意：<code>%环境变量%</code> 相当于引用这个环境变量的路径。</strong><br> <strong>配置完 path 环境变量后，需要重启命令行(重新加载环境变量)。</strong></p></blockquote><h4 id="④验证配置"><a href="#④验证配置" class="headerlink" title="④验证配置"></a>④验证配置</h4><ul><li><strong>mvn -v</strong> 命令：查看 maven 版本</li></ul><p><img src="./1555412597017.png" alt="Alt text"></p><ul><li>如果出现上图文字 说明安装成功</li></ul><hr><h3 id="2-第一个-maven-项目"><a href="#2-第一个-maven-项目" class="headerlink" title="2.第一个 maven 项目"></a>2.第一个 maven 项目</h3><h4 id="①目录结构"><a href="#①目录结构" class="headerlink" title="①目录结构"></a>①目录结构</h4><ul><li>使用 maven 管理的 Java 项目都有着相同的项目结构(强制)</li></ul><p><img src="./1556028747733.png" alt="Alt text"></p><h4 id="②编写代码"><a href="#②编写代码" class="headerlink" title="②编写代码"></a>②编写代码</h4><ul><li>编写 “Hello Maven!” 类：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloMaven</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">say</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello Maven!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编写测试类：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.junit.Assert.*;</span><br><span class="line"><span class="keyword">import</span> org.junit.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloMavenTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 表明该方法为测试方法。</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 检验new HelloMaven().say()的返回值是否为"Hello Maven!"。</span></span><br><span class="line">        Assert.assertEquals(<span class="string">"Hello Maven!"</span>, <span class="keyword">new</span> HelloMaven().say());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>目录结构如下：</li></ul><p><img src="./1556028804253.png" alt="Alt text"><br><img src="./1556028856246.png" alt="Alt text"></p><h4 id="③新建-pom-xml-文件"><a href="#③新建-pom-xml-文件" class="headerlink" title="③新建 pom.xml 文件"></a>③新建 pom.xml 文件</h4><blockquote><p><strong>pom.xml：用于管理项目依赖和构建过程(维护当前项目的 jar 包)。</strong></p></blockquote><ul><li>写完代码后 还需要 pom.xml 文件管理项目的依赖</li><li>新建 pom.xml 文件 并将之移至项目根目录</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 以下文字:</span></span><br><span class="line"><span class="comment">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line"><span class="comment">  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;</span></span><br><span class="line"><span class="comment">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    &lt;!-- 组织名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wjy-maven1<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!-- 模块名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven1-model<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 导入junit依赖(测试框架) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 增加jdk的设置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span>    </span><br><span class="line"> !--&gt;</span><br></pre></td></tr></table></figure><h4 id="④编译运行-进入项目根目录"><a href="#④编译运行-进入项目根目录" class="headerlink" title="④编译运行(进入项目根目录)"></a>④编译运行(进入项目根目录)</h4><ul><li><strong>mvn compile</strong>：编译项目</li><li><strong>mvn test</strong>：测试运行项目</li></ul><p><img src="./1555421650119.png" alt="Alt text"><br><img src="./1555421666849.png" alt="Alt text"></p><blockquote><p>编译运行后，项目根目录会自动生成一个 target 目录，里面存放着测试报告、编译生成的 class 文件等。</p></blockquote><hr><h3 id="3-核心知识"><a href="#3-核心知识" class="headerlink" title="3.核心知识"></a>3.核心知识</h3><h4 id="①常用构建命令"><a href="#①常用构建命令" class="headerlink" title="①常用构建命令"></a>①常用构建命令</h4><ul><li><strong>mvn -v</strong>：查看 maven 版本</li><li><strong>mvn clean</strong>：清理上一次构建生成的所有文件</li><li><strong>mvn compile</strong>：编译</li><li><strong>mvn test</strong>：测试运行</li><li><strong>mvn package</strong>：将项目打包</li><li><strong>mvn install</strong>：安装 jar 包到本地仓库</li></ul><blockquote><p><strong>若要在 a 包的类中导入 b 包类，一般需要把包含 b 包类的 jar 包加入到 classpath 路径中。而 maven 为我们提供了更方便的方法：在 b 包的根目录下，我们使用 mvn install 命令将包含其所有类的 jar 文件发布到本地仓库中，然后在 a 包的 pom.xml 文件中添加 b 包的坐标，之后 maven 会自动帮我们进行依赖管理操作。</strong><br><strong>原理：在编译源代码时，若程序用到了其他的包，maven 会在 pom.xml 文件中查找程序是否引入了该包的坐标。若是已经引入，maven 会在本地仓库中查找其对应的 jar 包并添加到 classpath 路径中，若是没有找到 jar 包，maven 会上网在中央仓库中下载 jar 包并放入本地仓库。若是没有引入，则返回异常信息。</strong></p></blockquote><h4 id="②自动创建目录结构"><a href="#②自动创建目录结构" class="headerlink" title="②自动创建目录结构"></a>②自动创建目录结构</h4><ul><li><strong>archetype 插件：用于自动创建符合 maven 规定的目录结构</strong><br>| 目录结构详情见 2-①</li><li>创建目录结构的两种方式：</li><li>1.输入 <strong>mvn archetype:generate -DarchetypeCatalog=internal</strong> 后按照命令行提示进行创建：</li></ul><p><img src="./1556026650584.png" alt="Alt text"><br><img src="./1556031831727.png" alt="Alt text"><br><img src="./1556027003507.png" alt="Alt text"></p><ul><li>2.一次性写入以下代码：        </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mvn archetype:generate -DarchetypeCatalog=internal -DgroupId=wjy-maven02 -DartifactId=maven02-model -Dversion=1.0-SNAPSHOT -Dpackage=maven02.model</span><br><span class="line"># groupId: 组织名，一般为公司网址的反写-项目名。</span><br><span class="line"># artifactId: 一般为项目名-模块名，它是maven项目在组织中的唯一标识。</span><br><span class="line"># package: 代码所存在的包名，应该和groupId名、artifactId名相吻合。</span><br></pre></td></tr></table></figure><p><img src="./1556031963727.png" alt="Alt text"><br><img src="./1556027200877.png" alt="Alt text"></p><h4 id="③坐标"><a href="#③坐标" class="headerlink" title="③坐标"></a>③坐标</h4><blockquote><p>在 maven 中，任何一个依赖、插件、项目构件的输出都可被称为构件。<br>所有构件都通过坐标作为其唯一标识。<br><strong><code>&lt;groupId&gt;</code>、<code>&lt;artifactId&gt;</code>、<code>&lt;version&gt;</code> 组成了 maven 的基本坐标。</strong></p></blockquote><h4 id="④仓库"><a href="#④仓库" class="headerlink" title="④仓库"></a>④仓库</h4><blockquote><p>仓库：用来管理<strong>项目的依赖</strong>。</p></blockquote><h5 id="a-本地仓库"><a href="#a-本地仓库" class="headerlink" title="a.本地仓库"></a>a.本地仓库</h5><ul><li>在本地仓库中找不到项目所需要的构件时 会自动到远程仓库中查找并下载</li></ul><h5 id="b-远程仓库"><a href="#b-远程仓库" class="headerlink" title="b.远程仓库"></a>b.远程仓库</h5><ul><li>远程仓库：即全球中央仓库 地址为 <a href="https://repo.maven.apache.org/maven2" target="_blank" rel="noopener">https://repo.maven.apache.org/maven2</a></li><li>远程仓库中包含了绝大多数开源的 Java 项目</li><li>但访问速度较慢(访问量大、且在国外)</li></ul><h5 id="c-镜像仓库"><a href="#c-镜像仓库" class="headerlink" title="c.镜像仓库"></a>c.镜像仓库</h5><ul><li>镜像仓库：与全球中央仓库的功能相同</li><li>可以将默认的远程仓库改为国内的镜像仓库(访问速度更快、更稳定)</li><li>修改方法(将下列内容添加到 settings.xml 文件中)：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--设置镜像仓库为阿里云--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 为中央仓库配置镜像。 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="./1556085425566.png" alt="Alt text"><br><img src="./1556090137995.png" alt="Alt text"></p><ul><li>修改后 访问远程仓库的操作会转为访问镜像仓库</li></ul><h5 id="d-更改仓库默认位置"><a href="#d-更改仓库默认位置" class="headerlink" title="d.更改仓库默认位置"></a>d.更改仓库默认位置</h5><ul><li>maven 的本地仓库默认存放在 C 盘中(占用 C 盘内存！)</li></ul><p><img src="./1556090215718.png" alt="Alt text"></p><ul><li>修改上文的 settings.xml 文件 可以更改本地仓库的位置</li></ul><p><img src="./1556089304067.png" alt="Alt text"></p><ul><li>然后在 maven 项目下执行 <strong>mvn clean compile</strong> 命令 会更新本地仓库的位置                </li></ul><p><img src="./1556090478122.png" alt="Alt text"></p><ul><li>最后将 setting.xml 文件放入新仓库中 防止 maven 升级后需要重新配置此文件 </li></ul><p><img src="./1556089242908.png" alt="Alt text"></p><hr><h3 id="4-项目构建过程"><a href="#4-项目构建过程" class="headerlink" title="4.项目构建过程"></a>4.项目构建过程</h3><h4 id="①项目构建与插件"><a href="#①项目构建与插件" class="headerlink" title="①项目构建与插件"></a>①项目构建与插件</h4><blockquote><p>完整的项目构建过程包括：<strong>清理(clean)、编译(compile)、测试(test)、打包(package)、集成测试、验证、部署(deploy)等。</strong><br><strong>maven 和插件是密不可分的，maven 抽象出一套项目构建的生命周期，而插件是对 maven 抽象的具体实现，即 maven 中的所有命令都是调用插件实现的。</strong><br>在 maven 官网中，提供了很多插件。<br>插件地址：<a href="https://mvnrepository.com/open-source/maven-plugins" target="_blank" rel="noopener">https://mvnrepository.com/open-source/maven-plugins</a></p></blockquote><h4 id="②生命周期"><a href="#②生命周期" class="headerlink" title="②生命周期"></a>②生命周期</h4><blockquote><p>maven 定义了三套相互独立的生命周期(<strong>clean、default、site</strong>)，每套生命周期包含一些有顺序的阶段，后面的阶段依赖于前面的阶段。<br><strong>即执行某个阶段时，其之前同一周期的阶段会顺序执行，如执行 package 命令时，complie、test 命令会自动顺序执行。</strong></p></blockquote><ul><li>在 IDEA 中 pom.xml 文件会自动导入与生命周期有关的插件</li></ul><p><img src="./1556587573175.png" alt="Alt text"></p><h5 id="a-clean—清理项目"><a href="#a-clean—清理项目" class="headerlink" title="a.clean—清理项目"></a>a.clean—清理项目</h5><ul><li>pre-clean：执行清理前的工作</li><li>clean：清理上一次构建生成的所有文件</li><li>post-clean：执行清理后的工作</li></ul><h5 id="b-default-最核心-—构建项目"><a href="#b-default-最核心-—构建项目" class="headerlink" title="b.default(最核心)—构建项目"></a>b.default(最核心)—构建项目</h5><ul><li>compile：编译</li><li>test：测试</li><li>package：打包</li><li>install：安装 jar 包到本地仓库</li></ul><h5 id="c-site—生成项目站点"><a href="#c-site—生成项目站点" class="headerlink" title="c.site—生成项目站点"></a>c.site—生成项目站点</h5><ul><li>pre-site：在生成项目站点之前要完成的工作</li><li>site：生成项目的站点文档</li><li>post-site：在生成项目站点之后要完成的工作</li><li>site-deploy：将生成的站点发布到服务器上</li></ul><hr><h3 id="5-pom-xml-详解"><a href="#5-pom-xml-详解" class="headerlink" title="5.pom.xml 详解"></a>5.pom.xml 详解</h3><h4 id="①pom"><a href="#①pom" class="headerlink" title="①pom"></a>①pom</h4><blockquote><p><strong>pom 是 maven 项目的核心管理文件，用于项目描述、组织管理、依赖管理和构建信息的管理。</strong><br>方便的第三方框架的管理和便捷的项目构建过程，大大提高了工作效率。</p></blockquote><h4 id="②pom-常用元素"><a href="#②pom-常用元素" class="headerlink" title="②pom 常用元素"></a>②pom 常用元素</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- project是pom.xml文件的根元素，包含了一些约束信息。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- modelVersion为必须元素，指定了当前文件的版本。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span><span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 坐标信息: --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- maven项目与实际项目不同，maven项目体现了模块化的概念，一个实际项目往往被划分为多个模块。 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- groupId为主项目标识，一般为反写的公司网址+项目名。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- artifactId为实际项目中的一个模块，一般为项目名+模块名。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span><span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        version为当前项目的版本号。</span></span><br><span class="line"><span class="comment">        第一个0是大版本号，第二个0是分支版本号，第三个0是小版本号，如0.0.1。      </span></span><br><span class="line"><span class="comment">        napshot: 快照版、alpha: 内测版、beta: 公测版、Release: 稳定版、GA: 正式版。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- package为maven项目的打包方式，默认打包为war，也可以是jar、zip、pom等。 --&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span><span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- name为项目的描述名，产生项目文档时才会使用。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- url为项目地址。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span><span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- description为项目描述。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- developers为开发人员列表。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developers</span>&gt;</span><span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- licenses为许可证信息。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">licenses</span>&gt;</span><span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- organization为组织信息。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">organization</span>&gt;</span><span class="tag">&lt;/<span class="name">organization</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- dependencies为依赖列表，其下包含多个依赖项(dependency)，一个坐标唯一标识一个依赖项。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span><span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span><span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- optional设置该依赖是否可选，默认为false。若为true，项目必须显式引入该依赖，若为false，项目默认继承该依赖。 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span><span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 依赖范围。 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span><span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- exclusions是排除依赖传递的列表。 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span><span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- dependencyManagement为依赖的管理，主要定义在父模块中，供子模块继承。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 对构建行为提供一个支持。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 插件列表: --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 一个坐标唯一标识一个插件。 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span><span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 用于子模块中，是对父模块的一个继承。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 用来聚合多个maven项目，使多个maven模块可以一起编译并运行。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="6-依赖"><a href="#6-依赖" class="headerlink" title="6.依赖"></a>6.依赖</h3><h4 id="①依赖范围"><a href="#①依赖范围" class="headerlink" title="①依赖范围"></a>①依赖范围</h4><ul><li>关于 <code>&lt;scope&gt;&lt;/scope&gt;</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- </span><br><span class="line">    平时开发时，若使用某一框架，就要将该框架的jar包引入到项目的classpath路径中，这样项目就可以使用该框架为我们封装好的一些方法。而maven为我们提供了三种classpath，分别为编译、测试、运行(时有效)，依赖的范围就是用来控制依赖与三种classpath的关系的。</span><br><span class="line">    scope标签的值有六种，分别为: </span><br><span class="line">        compile(测试、编译和运行时都有效，默认选项)、</span><br><span class="line">        provided(测试、编译时有效，适用于一些web容器中已经包含的jar(运行时不需要再引入)，如servlet)、</span><br><span class="line">        runtime(测试、运行时有效，适用于JDBC驱动，项目主代码的编译只需要jdk提供的JDBC的API，只有测试或运行时才需要具体驱动的API)、</span><br><span class="line">        test(测试时有效，如junit测试框架)、</span><br><span class="line">        system(测试、编译时有效，但具有不可移植性，需要与本地系统相关联)、</span><br><span class="line">        import(导入，它只使用在dependencyManagement标签中，表示从其它的pom中继承过来的依赖)。</span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure><ul><li>将 A 中的依赖导入到 B 中</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>WJY-Test<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Test-B<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>B<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>WJY-Test<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Test-A<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="②排除依赖传递"><a href="#②排除依赖传递" class="headerlink" title="②排除依赖传递"></a>②排除依赖传递</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    exclusions是排除依赖传递的列表。</span></span><br><span class="line"><span class="comment">    若模块C依赖模块B的jar，模块B依赖模块A的jar，模块A对模块C来说就是传递依赖，默认模块C也会依赖模块A的jar。</span></span><br><span class="line"><span class="comment">    若模块C不想依赖模块A的jar，可以使用这个标签，在模块C的pom.xml文件中添加以下内容便可排除模块A的依赖。</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- 此时模块C只依赖模块B的jar。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>WJY-Maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Mavan-B<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 排除依赖。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>WJY-Maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Maven-A<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            </span><br><span class="line"><span class="comment">&lt;!-- 注意: 先要将模块A的jar发布到本地仓库中，模块B才能通过坐标在本地仓库中找到模块A的jar，再将模块B的jar发布到本地仓库中，模块C才能通过坐标在本地仓库中找到模块B的jar。 --&gt;</span></span><br></pre></td></tr></table></figure><h4 id="③依赖冲突"><a href="#③依赖冲突" class="headerlink" title="③依赖冲突"></a>③依赖冲突</h4><blockquote><p><strong>如果 A 和 B 分别有不同版本的相同构件，而 C 同时依赖于 A 和 B，此时会发生依赖冲突。</strong></p></blockquote><ul><li>解决依赖冲突的两个原则：</li><li>1.短路优先—优先解析路径短(依赖级数少)的版本</li><li>2.如果路径相同 则看依赖的先后(先声明依赖哪个 就选择哪个依赖的版本)</li></ul><h4 id="④聚合"><a href="#④聚合" class="headerlink" title="④聚合"></a>④聚合</h4><blockquote><p><strong>聚合：在 maven 中，将多个项目(模块)放在一起运行。</strong><br>聚合时，需要新建一个 maven 项目(父模块)，新建项目的 pom 将作为其他 pom 的容器。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 作为其他pom的容器。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>WJY-Maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Maven-0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 此pom项目里不执行任何代码，只是为了聚合或传递依赖。--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 用来聚合多个maven项目，使多个maven模块可以一起编译并运行。 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 聚合后，还需要引入这些maven项目的依赖！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>../Maven-1<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>../Maven-2<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>../Maven-3<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="⑤继承"><a href="#⑤继承" class="headerlink" title="⑤继承"></a>⑤继承</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">    dependencyManagement为依赖的管理，可以声明依赖列表，但不会被引入到实际依赖中。主要定义在父模块中，供子模块继承(继承版本号等信息)。</span><br><span class="line">    即若多个模块都包括同一个依赖，可以抽象出来一个父模块，在父模块中对其进行一个定义，其他子模块只需要继承即可。</span><br><span class="line">    注意: 子模块还是需要显式地声明依赖。</span><br><span class="line">    优点: 如果有多个子模块都需要引用同样的依赖，则此标签可以避免在每个子模块中重复声明版本号等信息，便于整体修改。如果某个子模块需要其他版本，只需要单独声明version。</span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure><ul><li>父 pom.xml 中：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>WJY-Maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Maven-1<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">junit.version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">junit.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">peoperties</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 要被继承的依赖:  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junit.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>子 pom.xml 中：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 父坐标: --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>WJY-Maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Maven-1<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="7-IDEA-中使用-maven-构建-web-项目"><a href="#7-IDEA-中使用-maven-构建-web-项目" class="headerlink" title="7.IDEA 中使用 maven 构建 web 项目"></a>7.IDEA 中使用 maven 构建 web 项目</h3><h4 id="①新建工程"><a href="#①新建工程" class="headerlink" title="①新建工程"></a>①新建工程</h4><p><img src="./1556469580356.png" alt="Alt text"><br><img src="./1556469690745.png" alt="Alt text"><br><img src="./1556469799697.png" alt="Alt text"><br><img src="./1556501717314.png" alt="Alt text"><br><img src="./1556501467363.png" alt="Alt text"></p><blockquote><p>注意：模板 <strong>maven-archetype-quickstart</strong> 的目录结构如下图所示，应该根据需要选择合适的模板。</p></blockquote><p><img src="./1556501671702.png" alt="Alt text"></p><h4 id="②创建目录结构"><a href="#②创建目录结构" class="headerlink" title="②创建目录结构"></a>②创建目录结构</h4><ul><li>在 <strong>src/main</strong> 目录下新建 <strong>java</strong> 目录</li><li>将 <strong>java</strong> 目录作为 <strong>Sources Root</strong></li></ul><p><img src="./1556502571969.png" alt="Alt text"></p><ul><li>在 <strong>src/main</strong> 目录下新建 <strong>resources</strong> 目录 </li><li>将 <strong>resources</strong> 目录作为 <strong>Resources Root</strong></li></ul><p><img src="./1556549788899.png" alt="Alt text"></p><ul><li>在 <strong>src/test</strong> 目录下新建 <strong>java</strong> 目录</li><li>将 <strong>java</strong> 目录作为 <strong>Test Sources Root</strong></li></ul><p><img src="./1556549658404.png" alt="Alt text"></p><ul><li>在 <strong>src/test</strong> 目录下新建 <strong>resources</strong> 目录 </li><li>将 <strong>resources</strong> 目录作为 <strong>Test Resources Root</strong></li></ul><p><img src="./1556549714155.png" alt="Alt text"></p><ul><li>目录结构如下：</li></ul><p><img src="./1556549497797.png" alt="Alt text"></p><h4 id="③配置-tomcat"><a href="#③配置-tomcat" class="headerlink" title="③配置 tomcat"></a>③配置 tomcat</h4><ul><li>新建 tomcat：</li></ul><p><img src="./1556504833034.png" alt="Alt text"><br><img src="./1556513581604.png" alt="Alt text"></p><ul><li>tomcat 热部署：</li></ul><p><img src="./1556504958610.png" alt="Alt text"><br><img src="./1556513711235.png" alt="Alt text"><br><img src="./1556513755173.png" alt="Alt text"><br><img src="./1556513797728.png" alt="Alt text"></p><h4 id="④运行-tomcat"><a href="#④运行-tomcat" class="headerlink" title="④运行 tomcat"></a>④运行 tomcat</h4><p><img src="./1556513361205.png" alt="Alt text"><br><img src="./1556513330189.png" alt="Alt text"></p><ul><li>如果出现上图内容 说明配置成功</li></ul><h4 id="⑤IDEA-中管理-maven-的生命周期"><a href="#⑤IDEA-中管理-maven-的生命周期" class="headerlink" title="⑤IDEA 中管理 maven 的生命周期"></a>⑤IDEA 中管理 maven 的生命周期</h4><p><img src="./1556513258780.png" alt="Alt text"></p><ul><li>修改以下部分 并新增工程入口类</li></ul><p><img src="./1556551889365.png" alt="Alt text"><br><img src="./1556553539090.png" alt="Alt text"></p><ul><li>使用 <strong>package</strong> 命令 可以将工程打包</li></ul><p><img src="./1556550160208.png" alt="Alt text"><br><img src="./1556553215349.png" alt="Alt text"></p><h4 id="⑥运行-jar-包"><a href="#⑥运行-jar-包" class="headerlink" title="⑥运行 jar 包"></a>⑥运行 jar 包</h4><ul><li>用 <code>360压缩</code> 打开 jar 包</li><li>编辑 <strong>MANIFEST.MF</strong> 文件</li></ul><p><img src="./1556553116224.png" alt="Alt text"></p><ul><li>添加划线部分</li></ul><p><img src="./1556553384959.png" alt="Alt text"></p><ul><li>保存并退出</li><li>在命令行运行 jar 包</li></ul><p><img src="./1556553442250.png" alt="Alt text"></p><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#x77;&#x6a;&#x79;&#x6d;&#x65;&#x73;&#x73;&#105;&#x40;&#x31;&#x36;&#51;&#x2e;&#x63;&#111;&#109;" target="_blank" rel="noopener">&#x77;&#x6a;&#x79;&#x6d;&#x65;&#x73;&#x73;&#105;&#x40;&#x31;&#x36;&#51;&#x2e;&#x63;&#111;&#109;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;maven 是 Apache 下的一个纯 Java 开发的开源项目。&lt;/strong&gt;&lt;br&gt;基于项目对象模型(POM)的概念，它可以从一个中心资料片管理项目构建、报告和文件。&lt;br&gt;它也是一套强大的自动化构建工具，覆盖了编译、测试
      
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://messi1002.top/categories/JavaWeb/"/>
    
    
      <category term="maven" scheme="http://messi1002.top/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>域名解析到服务器</title>
    <link href="http://messi1002.top/2019/05/14/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://messi1002.top/2019/05/14/域名解析到服务器/</id>
    <published>2019-05-14T13:51:08.000Z</published>
    <updated>2019-09-07T03:29:03.786Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-域名与服务器"><a href="#1-域名与服务器" class="headerlink" title="1.域名与服务器"></a>1.域名与服务器</h3><blockquote><p><strong>域名是网站的入口，是 IP 的别名，便于记忆而存在，域名最终会通过 DNS 解析成 IP 地址。</strong><br><strong>所以将域名解析到服务器后，域名 == 服务器 IP(一样的作用)！</strong></p></blockquote><hr><h3 id="2-域名解析到服务器"><a href="#2-域名解析到服务器" class="headerlink" title="2.域名解析到服务器"></a>2.域名解析到服务器</h3><h4 id="①域名解析"><a href="#①域名解析" class="headerlink" title="①域名解析"></a>①域名解析</h4><ul><li>登录阿里云 打开 <code>控制台-域名</code></li><li>选择域名 点击 <code>解析</code></li></ul><p><img src="./1557549623861.png" alt="Alt text"></p><ul><li>点击 <code>添加记录</code></li><li>解析类型为 <strong>A-将域名解析到服务器</strong></li></ul><p><img src="./1557549924064.png" alt="Alt text"><br><img src="./1557840235962.png" alt="Alt text"></p><h4 id="②验证解析"><a href="#②验证解析" class="headerlink" title="②验证解析"></a>②验证解析</h4><ul><li>验证网址：<a href="http://www.17ce.com/site/http/?spm=a2c4g.11186623.2.32.68664c35MlZcKe" target="_blank" rel="noopener">17CE</a></li><li>选择 <code>Dns</code> 并输入域名</li></ul><p><img src="./1557549204166.png" alt="Alt text"></p><ul><li>如果画圈处的 IP 地址正确 说明解析成功</li></ul><blockquote><p>ps：解析成功后，使用 <strong>www.域名/域名</strong> 均可代替服务器 IP。</p></blockquote><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#119;&#x6a;&#121;&#109;&#101;&#115;&#x73;&#x69;&#64;&#49;&#x36;&#51;&#x2e;&#x63;&#111;&#x6d;" target="_blank" rel="noopener">&#119;&#x6a;&#121;&#109;&#101;&#115;&#x73;&#x69;&#64;&#49;&#x36;&#51;&#x2e;&#x63;&#111;&#x6d;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-域名与服务器&quot;&gt;&lt;a href=&quot;#1-域名与服务器&quot; class=&quot;headerlink&quot; title=&quot;1.域名与服务器&quot;&gt;&lt;/a&gt;1.域名与服务器&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;域名是网站的入口，是 IP 的别名，便于记忆而存在
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://messi1002.top/categories/Linux/"/>
    
      <category term="阿里云服务器" scheme="http://messi1002.top/categories/Linux/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="CentOS7" scheme="http://messi1002.top/tags/CentOS7/"/>
    
      <category term="域名" scheme="http://messi1002.top/tags/%E5%9F%9F%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>阿里云CentOS7安装Nginx</title>
    <link href="http://messi1002.top/2019/05/07/%E9%98%BF%E9%87%8C%E4%BA%91CentOS7%E5%AE%89%E8%A3%85Nginx/"/>
    <id>http://messi1002.top/2019/05/07/阿里云CentOS7安装Nginx/</id>
    <published>2019-05-07T02:36:30.000Z</published>
    <updated>2019-09-07T03:34:43.739Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1.准备工作"></a>1.准备工作</h3><h4 id="①添加安全组规则"><a href="#①添加安全组规则" class="headerlink" title="①添加安全组规则"></a>①添加安全组规则</h4><blockquote><p><strong>服务器的安全组默认未设置任何自定义放行规则，这将会导致无法访问实例端口，若需访问需要添加安全组规则放行对应的端口。</strong></p></blockquote><ul><li>放行 8079 端口 <strong>(之后会将 Nginx 的默认端口修改为 8079)</strong>：</li></ul><p><img src="./1556956754365.png" alt="Alt text"></p><h4 id="②设置防火墙"><a href="#②设置防火墙" class="headerlink" title="②设置防火墙"></a>②设置防火墙</h4><blockquote><p>防火墙是系统的第一道防线，其作用是防止非法用户的进入。<br><strong>服务器的防火墙默认未设置任何自定义放行规则，这将会导致无法访问实例端口，若需访问需要防火墙放行对应的端口。</strong><br>注意：CentOS7 默认使用 firewalld 作为防火墙。<br> firewalld 默认是关闭 http 服务的。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state # 查看防火墙状态</span><br><span class="line">systemctl start firewalld.service # 开启防火墙</span><br><span class="line">systemctl stop firewalld.service # 关闭防火墙</span><br><span class="line">systemctl enable firewalld.service # 打开防火墙的开机自启</span><br><span class="line">systemctl disable firewalld.service # 关闭防火墙的开机自启</span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=8079/tcp # 让防火墙永久开放8079端口</span><br><span class="line">firewall-cmd --reload # 加载配置 使得修改有效</span><br><span class="line">firewall-cmd --permanent --zone=public --list-ports # 查看开放的端口号</span><br><span class="line">firewall-cmd --permanent --zone=public --add-service=http # 让防火墙永久打开http服务</span><br><span class="line">firewall-cmd --reload # 加载配置 使得修改有效</span><br><span class="line">firewall-cmd --permanent --zone=public --list-service # 查看开放的服务</span><br></pre></td></tr></table></figure><p><img src="./1556957763093.png" alt="Alt text"><br><img src="./1557156936010.png" alt="Alt text"></p><hr><h3 id="2-安装-Nginx"><a href="#2-安装-Nginx" class="headerlink" title="2.安装 Nginx"></a>2.安装 Nginx</h3><blockquote><p><strong>Nginx 是一个高性能的 HTTP 和反向代理服务器。</strong></p></blockquote><h4 id="①下载和安装"><a href="#①下载和安装" class="headerlink" title="①下载和安装"></a>①下载和安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm # 将nginx添加到yum源的repo中</span><br><span class="line">yum repolist # 查看yum源的repo</span><br><span class="line">yum install nginx # yum源安装nginx</span><br></pre></td></tr></table></figure><p><img src="./1556956234366.png" alt="Alt text"></p><h4 id="②启动"><a href="#②启动" class="headerlink" title="②启动"></a>②启动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx # 设置开机启动</span><br><span class="line">systemctl start nginx # 启动nginx</span><br><span class="line">systemctl reload nginx # 重新加载nginx</span><br><span class="line">systemctl status nginx # 查看nginx启动状态</span><br></pre></td></tr></table></figure><p><img src="./1557158155111.png" alt="Alt text"></p><h4 id="③修改默认端口"><a href="#③修改默认端口" class="headerlink" title="③修改默认端口"></a>③修改默认端口</h4><ul><li>使用 <code>vim</code> 命令打开文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd etc</span><br><span class="line">cd nginx</span><br><span class="line">cd conf.d</span><br><span class="line">vim default.conf</span><br></pre></td></tr></table></figure><ul><li>然后按 <code>i</code> 进入编辑模式 将下图画圈处修改为 <strong>8079</strong></li><li>最后按 <code>Esc</code> 并输入 <code>:wq</code> 回车退出</li></ul><p><img src="./1557194159064.png" alt="Alt text"></p><h4 id="④验证配置"><a href="#④验证配置" class="headerlink" title="④验证配置"></a>④验证配置</h4><ul><li>重启 Nginx：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop nginx # 关闭nginx</span><br><span class="line">systemctl start nginx # 启动nginx</span><br><span class="line">systemctl reload nginx # 重新加载nginx</span><br></pre></td></tr></table></figure><ul><li>访问 <strong>公网ip:8079</strong></li></ul><p><img src="./1557197327108.png" alt="Alt text"></p><ul><li>如果出现上图内容 说明配置成功</li></ul><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#119;&#106;&#x79;&#x6d;&#x65;&#x73;&#115;&#105;&#64;&#x31;&#54;&#x33;&#46;&#x63;&#x6f;&#109;" target="_blank" rel="noopener">&#119;&#106;&#x79;&#x6d;&#x65;&#x73;&#115;&#105;&#64;&#x31;&#54;&#x33;&#46;&#x63;&#x6f;&#109;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-准备工作&quot;&gt;&lt;a href=&quot;#1-准备工作&quot; class=&quot;headerlink&quot; title=&quot;1.准备工作&quot;&gt;&lt;/a&gt;1.准备工作&lt;/h3&gt;&lt;h4 id=&quot;①添加安全组规则&quot;&gt;&lt;a href=&quot;#①添加安全组规则&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://messi1002.top/categories/Linux/"/>
    
      <category term="阿里云服务器" scheme="http://messi1002.top/categories/Linux/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="CentOS7" scheme="http://messi1002.top/tags/CentOS7/"/>
    
      <category term="Nginx" scheme="http://messi1002.top/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>记录GitHub+Hexo搭建博客过程</title>
    <link href="http://messi1002.top/2019/05/04/%E8%AE%B0%E5%BD%95GitHub-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B/"/>
    <id>http://messi1002.top/2019/05/04/记录GitHub-Hexo搭建博客过程/</id>
    <published>2019-05-04T03:40:04.000Z</published>
    <updated>2019-09-07T03:30:13.898Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-next-主题使用文档"><a href="#1-next-主题使用文档" class="headerlink" title="1.next 主题使用文档"></a>1.next 主题使用文档</h3><ul><li><a href="https://theme-next.iissnan.com/" target="_blank" rel="noopener">官方文档</a></li></ul><hr><h3 id="2-搭建博客教程"><a href="#2-搭建博客教程" class="headerlink" title="2.搭建博客教程"></a>2.搭建博客教程</h3><ul><li><a href="https://blog.csdn.net/qq_41979043/article/details/93597863" target="_blank" rel="noopener">CSDN —— 使用GitHub+Hexo搭建博客</a></li></ul><hr><h3 id="3-一台电脑生成两个ssh-key教程"><a href="#3-一台电脑生成两个ssh-key教程" class="headerlink" title="3.一台电脑生成两个ssh key教程"></a>3.一台电脑生成两个ssh key教程</h3><ul><li><a href="https://blog.csdn.net/qq_41979043/article/details/93593610" target="_blank" rel="noopener">CSDN —— 配置两个ssh key</a></li></ul><hr><h3 id="4-使用基础"><a href="#4-使用基础" class="headerlink" title="4.使用基础"></a>4.使用基础</h3><h4 id="①常用技巧"><a href="#①常用技巧" class="headerlink" title="①常用技巧"></a>①常用技巧</h4><ul><li><strong>hexo 命令</strong> 出错时 可使用 <strong>hexo –debug</strong> 查看错误</li><li>安装插件命令是 <strong>install</strong> 卸载插件命令是 <strong>uninstall</strong>    </li><li><strong>hexo clean</strong>：清除缓存文件和已生成的静态文件(public)</li><li>每次更新修改：<br>| <strong>hexo g</strong>：重新生成缓存和静态文件。<br>| <strong>hexo d/deploy</strong>：重新部署到服务器。      </li><li>在博客文章中插入图片：<a href="https://blog.csdn.net/qq_40265501/article/details/80019774" target="_blank" rel="noopener">点击查看</a><br>| 注意：对于 next 主题，引入图片时使用 <code>![图片代替名](图片名.jpg)</code> 的格式。</li></ul><h4 id="②修改根目录下的-config-yml-文件"><a href="#②修改根目录下的-config-yml-文件" class="headerlink" title="②修改根目录下的 _config.yml 文件"></a>②修改根目录下的 _config.yml 文件</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="comment"># 你的标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="comment"># 副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="comment"># 网站描述，便于搜索引擎用关键词检索。</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">wjy</span> <span class="comment"># 作者</span></span><br><span class="line"><span class="attr">language:</span> <span class="comment"># 语言</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure><h4 id="③添加-about-等页面"><a href="#③添加-about-等页面" class="headerlink" title="③添加 about 等页面"></a>③添加 about 等页面</h4><ul><li>使用此命令：<strong>hexo new page about</strong><br>| 会看到在 source 文件夹中生成了一个 about 文件夹，里面包含一个 index.md 文件。<br>| 在这个 markdown 文件内，我们可以编写一些 about 页面的信息。</li><li>然后修改主题目录下的 _config.yml 文件 在 menu 中添加 about 页面的链接</li></ul><blockquote><p>添加其他页面同理，下列文字是为 next 主题配置页面链接。</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line"><span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line"><span class="string">最爱:</span> <span class="string">/love/</span> <span class="string">||</span> <span class="string">soccer-ball-o</span></span><br><span class="line"><span class="string">电影:</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">film</span></span><br><span class="line"><span class="string">书籍:</span> <span class="string">/books/</span> <span class="string">||</span> <span class="string">book</span></span><br><span class="line"><span class="string">旅行:</span> <span class="string">/photos/</span> <span class="string">||</span> <span class="string">camera-retro</span> </span><br><span class="line"><span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br></pre></td></tr></table></figure><ul><li>配置后会在页面菜单中生成一个关于 about 页面的链接 点击 <code>about</code> 就可跳转到 about 页面</li></ul><h4 id="④写文章时添加分类、标签格式"><a href="#④写文章时添加分类、标签格式" class="headerlink" title="④写文章时添加分类、标签格式"></a>④写文章时添加分类、标签格式</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span> <span class="string">categories</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">分类1</span> </span><br><span class="line"><span class="bullet">-</span> <span class="string">分类2</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">tags</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">标签1</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">标签2</span></span><br></pre></td></tr></table></figure><hr><h3 id="5-我的博客配置"><a href="#5-我的博客配置" class="headerlink" title="5.我的博客配置"></a>5.我的博客配置</h3><ul><li>我的博客：<a href="http://messi1002.top">http://messi1002.top</a>                      </li><li>语言：<strong>zh-Hans(中文) √</strong>     </li></ul><h4 id="①侧边栏"><a href="#①侧边栏" class="headerlink" title="①侧边栏"></a>①侧边栏</h4><ul><li>侧边栏排版(签名)及头像 √            </li><li>侧边栏作者头像旋转 √             </li><li>配置侧边栏中的社交账号及其图标 √            </li><li>侧边栏推荐阅读 √            </li><li><strong>DaoVoice 在线联系功能 √</strong>  </li><li><strong>添加 RSS 订阅 √</strong>                    </li></ul><h4 id="②网站主页"><a href="#②网站主页" class="headerlink" title="②网站主页"></a>②网站主页</h4><ul><li>菜单栏优化及签名 √            </li><li>添加顶部加载条 √            </li><li>修改网页 icon √           </li><li>首页不显示全文 √            </li><li>添加 fork me on github √            </li><li>增加动态线段背景 √           </li><li><strong>爆炸效果图 √</strong>            </li><li><strong>增加宠物 √</strong>            </li><li>隐藏网页底部的 … By Hexo √            </li><li>文章添加阴影效果(好看) √            </li><li>修改网页底部的星星 √           </li><li><strong>网站底部访问量统计 √</strong>            </li><li><strong>网站底部字数统计 √</strong>           </li><li>博文置顶 √    </li><li>修改内容宽度 √</li><li>添加博客背景 √</li><li>设置站点图标 √</li></ul><h4 id="③网站功能"><a href="#③网站功能" class="headerlink" title="③网站功能"></a>③网站功能</h4><ul><li>添加本地搜索 √           </li><li><strong>添加评论功能(来必力) √</strong>          </li><li>添加打赏功能 √       </li><li>添加 <code>README.md</code> 文件 √           </li><li><strong>引入豆瓣电影和读书 √</strong>            </li><li><strong>引入相册功能(两个) √</strong><br>| <strong>最爱页—使用 GitHub 存放图片(简单)</strong><br>| <strong>旅行页—使用阿里云存放图片(速度)</strong></li></ul><h4 id="④文章细节"><a href="#④文章细节" class="headerlink" title="④文章细节"></a>④文章细节</h4><ul><li>文章内容统计功能  √            </li><li>在文章底部增加版权信息 √           </li><li>修改文章内链接文本样式 √            </li><li>修改文章底部的带 # 号的标签 √          </li><li>添加热度 √            </li><li>代码高亮 √            </li><li><strong>文章加密访问 √</strong></li></ul><p>配置教程参考：<a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">Next主题配置博客</a></p><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#x77;&#x6a;&#121;&#x6d;&#101;&#115;&#115;&#x69;&#64;&#x31;&#x36;&#x33;&#x2e;&#x63;&#x6f;&#x6d;" target="_blank" rel="noopener">&#x77;&#x6a;&#121;&#x6d;&#101;&#115;&#115;&#x69;&#64;&#x31;&#x36;&#x33;&#x2e;&#x63;&#x6f;&#x6d;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-next-主题使用文档&quot;&gt;&lt;a href=&quot;#1-next-主题使用文档&quot; class=&quot;headerlink&quot; title=&quot;1.next 主题使用文档&quot;&gt;&lt;/a&gt;1.next 主题使用文档&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://the
      
    
    </summary>
    
    
      <category term="博客相关" scheme="http://messi1002.top/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>阿里云CentOS7安装 jdk8+tomcat8+maven+MySQL5.7+redis5</title>
    <link href="http://messi1002.top/2019/04/27/%E9%98%BF%E9%87%8C%E4%BA%91CentOS7%E5%AE%89%E8%A3%85-jdk8-tomcat8-maven-MySQL5-7-redis5/"/>
    <id>http://messi1002.top/2019/04/27/阿里云CentOS7安装-jdk8-tomcat8-maven-MySQL5-7-redis5/</id>
    <published>2019-04-27T15:16:52.000Z</published>
    <updated>2019-09-07T03:30:40.488Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-我的服务器配置"><a href="#1-我的服务器配置" class="headerlink" title="1.我的服务器配置"></a>1.我的服务器配置</h3><p><img src="./1555501515372.png" alt="Alt text"></p><hr><h3 id="2-准备工作"><a href="#2-准备工作" class="headerlink" title="2.准备工作"></a>2.准备工作</h3><h4 id="①下载压缩包"><a href="#①下载压缩包" class="headerlink" title="①下载压缩包"></a>①下载压缩包</h4><ul><li>下载 jdk8：<br><a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></li></ul><p><img src="./1555509568952.png" alt="Alt text"></p><ul><li>下载 tomcat8：<a href="https://tomcat.apache.org/download-80.cgi" target="_blank" rel="noopener">https://tomcat.apache.org/download-80.cgi</a></li></ul><p><img src="./1555499380048.png" alt="Alt text"></p><ul><li>下载 maven：<a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">http://maven.apache.org/download.cgi</a></li></ul><p><img src="./1555499477093.png" alt="Alt text"></p><ul><li>下载 redis5：<a href="https://redis.io/download" target="_blank" rel="noopener">https://redis.io/download</a></li></ul><p><img src="./1556126332339.png" alt="Alt text"></p><h4 id="②下载-Xftp6"><a href="#②下载-Xftp6" class="headerlink" title="②下载 Xftp6"></a>②下载 Xftp6</h4><blockquote><p>Xftp6 是一款功能强大，主要用于 SFTP、FTP 文件传输的软件，能够帮助用户安全地在 UNIX/Linux 和 Windows PC 之间传输文件。<br>我们需要使用此软件，将压缩包上传至阿里云服务器。</p></blockquote><ul><li>请自行搜索安装包 下载并安装</li></ul><h4 id="③添加安全组规则"><a href="#③添加安全组规则" class="headerlink" title="③添加安全组规则"></a>③添加安全组规则</h4><blockquote><p><strong>服务器的安全组默认未设置任何自定义放行规则，这将会导致无法访问实例端口，若需访问需要添加安全组规则放行对应的端口。</strong></p></blockquote><ul><li>我们需要放行常用的端口号：8080、3306、22、6379 等</li><li>添加安全组规则：</li></ul><p><img src="./1556163040141.png" alt="Alt text"></p><h4 id="④上传压缩包至服务器"><a href="#④上传压缩包至服务器" class="headerlink" title="④上传压缩包至服务器"></a>④上传压缩包至服务器</h4><ul><li>打开 Xftp6 工具 点击 <code>文件</code> – <code>新建</code></li><li>按下图填写信息并连接服务器</li></ul><p><img src="./1555510618187.png" alt="Alt text"></p><ul><li>然后在 <strong>/usr/local/</strong> 目录下新建 <strong>javaweb</strong> 文件夹 将压缩包上传到此文件夹中</li></ul><p><img src="./1555510748101.png" alt="Alt text"><br><img src="./1556127271110.png" alt="Alt text"><br><img src="./1556127095711.png" alt="Alt text"></p><h4 id="⑤设置防火墙"><a href="#⑤设置防火墙" class="headerlink" title="⑤设置防火墙"></a>⑤设置防火墙</h4><blockquote><p>防火墙是系统的第一道防线，其作用是防止非法用户的进入。<br><strong>服务器的防火墙默认未设置任何自定义放行规则，这将会导致无法访问实例端口，若需访问需要防火墙放行对应的端口。</strong><br><strong>注意：CentOS7 默认使用 firewalld 作为防火墙。</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state # 查看防火墙状态</span><br><span class="line">systemctl start firewalld.service # 开启防火墙</span><br><span class="line">systemctl stop firewalld.service # 关闭防火墙</span><br><span class="line">systemctl enable firewalld.service # 打开防火墙的开机自启</span><br><span class="line">systemctl disable firewalld.service # 关闭防火墙的开机自启</span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=8080/tcp # 让防火墙永久开放8080端口</span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=3306/tcp # 让防火墙永久开放3306端口</span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=22/tcp # 让防火墙永久开放22端口</span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=6379/tcp # 让防火墙永久开放6379端口</span><br><span class="line">firewall-cmd --reload # 加载配置 使得修改有效</span><br><span class="line">firewall-cmd --permanent --zone=public --list-ports # 查看开放的端口号</span><br></pre></td></tr></table></figure><p><img src="./1555818850992.png" alt="Alt text"><br><img src="./1555937690858.png" alt="Alt text"><br><img src="./1556163236560.png" alt="Alt text"></p><hr><h3 id="3-安装-jdk8"><a href="#3-安装-jdk8" class="headerlink" title="3.安装 jdk8"></a>3.安装 jdk8</h3><blockquote><p><strong>注意：若服务器版本是 CentOS7 系列，尽量不要安装系统自带的 openJDK (会有坑)！</strong></p></blockquote><h4 id="①解压安装包"><a href="#①解压安装包" class="headerlink" title="①解压安装包"></a>①解压安装包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/javaweb # 进入该目录</span><br><span class="line">tar -zxvf jdk-8u201-linux-x64.tar.gz # 解压压缩包</span><br><span class="line">mv jdk1.8.0_201 jdk8 # 重命名文件夹</span><br></pre></td></tr></table></figure><p><img src="./1555513033785.png" alt="Alt text"><br><img src="./1555513331221.png" alt="Alt text"></p><h4 id="②配置环境"><a href="#②配置环境" class="headerlink" title="②配置环境"></a>②配置环境</h4><ul><li>使用 <code>vim</code> 命令打开文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile # 配置环境变量</span><br></pre></td></tr></table></figure><ul><li>然后按 <code>i</code> 进入编辑模式 插入以下文字</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/javaweb/jdk8 # jdk所在位置的绝对路径</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure><ul><li>最后按 <code>Esc</code> 并输入 <code>:wq</code> 回车退出</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile # 使脚本文件生效</span><br></pre></td></tr></table></figure><h4 id="③验证配置"><a href="#③验证配置" class="headerlink" title="③验证配置"></a>③验证配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javac</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><p><img src="./1555513524980.png" alt="Alt text"></p><ul><li>如果出现上图内容 说明配置成功</li></ul><hr><h3 id="4-安装-tomcat8"><a href="#4-安装-tomcat8" class="headerlink" title="4.安装 tomcat8"></a>4.安装 tomcat8</h3><h4 id="①解压安装包-1"><a href="#①解压安装包-1" class="headerlink" title="①解压安装包"></a>①解压安装包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/javaweb # 进入该目录</span><br><span class="line">tar -zxvf apache-tomcat-8.5.39.tar.gz # 解压压缩包</span><br><span class="line">mv apache-tomcat-8.5.39 tomcat8 # 重命名文件夹</span><br></pre></td></tr></table></figure><p><img src="./1555817709484.png" alt="Alt text"><br><img src="./1555817877282.png" alt="Alt text"></p><h4 id="②启动-tomcat8"><a href="#②启动-tomcat8" class="headerlink" title="②启动 tomcat8"></a>②启动 tomcat8</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/javaweb/tomcat8/bin # 进入该目录</span><br><span class="line">./startup.sh # 启动tomcat</span><br></pre></td></tr></table></figure><p><img src="./1555818223377.png" alt="Alt text"></p><h4 id="③验证配置-1"><a href="#③验证配置-1" class="headerlink" title="③验证配置"></a>③验证配置</h4><ul><li>访问 <strong>公网ip:8080</strong></li></ul><p><img src="./1555850360919.png" alt="Alt text"></p><ul><li>如果出现上图内容 说明配置成功</li></ul><hr><h3 id="5-安装-maven"><a href="#5-安装-maven" class="headerlink" title="5.安装 maven"></a>5.安装 maven</h3><h4 id="①解压安装包-2"><a href="#①解压安装包-2" class="headerlink" title="①解压安装包"></a>①解压安装包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/javaweb # 进入该目录</span><br><span class="line">tar -zxvf apache-maven-3.6.0-bin.tar.gz # 解压压缩包</span><br><span class="line">mv apache-maven-3.6.0 maven3 # 重命名文件夹</span><br></pre></td></tr></table></figure><p><img src="./1555850811525.png" alt="Alt text"><br><img src="./1555850914381.png" alt="Alt text"></p><h4 id="②配置环境-1"><a href="#②配置环境-1" class="headerlink" title="②配置环境"></a>②配置环境</h4><ul><li>使用 <code>vim</code> 命令打开文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile.d/maven.sh # 配置环境变量</span><br></pre></td></tr></table></figure><ul><li>然后按 <code>i</code> 进入编辑模式 插入以下内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">export M2_HOME=/usr/local/javaweb/maven3 # maven所在位置的绝对路径</span><br><span class="line">export PATH=$PATH:$M2_HOME/bin</span><br></pre></td></tr></table></figure><ul><li>最后按 <code>Esc</code> 并输入 <code>:wq</code> 回车退出</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile.d/maven.sh # 使脚本文件生效</span><br></pre></td></tr></table></figure><h4 id="③验证配置-2"><a href="#③验证配置-2" class="headerlink" title="③验证配置"></a>③验证配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn -v # 查看maven版本</span><br></pre></td></tr></table></figure><p><img src="./1555851345128.png" alt="Alt text"></p><ul><li>如果出现上图内容 说明配置成功</li></ul><hr><h3 id="6-安装-MySQL5-7"><a href="#6-安装-MySQL5-7" class="headerlink" title="6.安装 MySQL5.7"></a>6.安装 MySQL5.7</h3><h4 id="①下载和安装"><a href="#①下载和安装" class="headerlink" title="①下载和安装"></a>①下载和安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm # 下载安装包</span><br><span class="line">yum install -y mysql-server # 安装MySQL</span><br><span class="line">systemctl enable mysqld.service # 设置开机自启动MySQL</span><br><span class="line">systemctl start mysqld.service # 启动MySQL</span><br><span class="line">grep &apos;temporary password&apos; /var/log/mysqld.log # 查看MySQL默认密码</span><br></pre></td></tr></table></figure><p><img src="./1555940671498.png" alt="Alt text"><br><img src="./1555948145147.png" alt="Alt text"></p><h4 id="②登录-MySQL"><a href="#②登录-MySQL" class="headerlink" title="②登录 MySQL"></a>②登录 MySQL</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p # 登录MySQL 然后输入默认密码(系统自动生成)</span><br><span class="line">SET PASSWORD = PASSWORD(&apos;Zxcvbnm10!_&apos;); # 修改默认密码 新密码必须包含大小写字母、数字、下划线和感叹号</span><br><span class="line">eixt # 退出MySQL 用新密码重新登录</span><br></pre></td></tr></table></figure><blockquote><p>ps：如果觉得新密码太复杂，可以修改以下两个字段来降低默认的密码安全级别。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set global validate_password_policy=0; 设置密码安全级别为LOW</span><br><span class="line">set global validate_password_length=6; 设置密码最短长度为6</span><br></pre></td></tr></table></figure><h4 id="③远程连接"><a href="#③远程连接" class="headerlink" title="③远程连接"></a>③远程连接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;新密码&apos; WITH GRANT OPTION; # 开启root用户的远程访问权限</span><br><span class="line">flush privileges; # 使命令执行生效</span><br></pre></td></tr></table></figure><p><img src="./1555995427402.png" alt="Alt text"></p><ul><li>使用 Navicat 远程访问数据库</li></ul><p><img src="./1555993787341.png" alt="Alt text"></p><ul><li>连接后可以通过 Navicat 管理远程数据库</li></ul><p><img src="./1555995490777.png" alt="Alt text"></p><hr><h3 id="7-安装-redis5"><a href="#7-安装-redis5" class="headerlink" title="7.安装 redis5"></a>7.安装 redis5</h3><h4 id="①解压安装包-3"><a href="#①解压安装包-3" class="headerlink" title="①解压安装包"></a>①解压安装包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/javaweb # 进入该目录</span><br><span class="line">tar -zxvf redis-5.0.4.tar.gz # 解压压缩包</span><br><span class="line">mv redis-5.0.4 redis5 # 重命名文件夹</span><br></pre></td></tr></table></figure><h4 id="②配置环境-2"><a href="#②配置环境-2" class="headerlink" title="②配置环境"></a>②配置环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/javaweb/redis5 # 进入解压后的目录</span><br><span class="line">make # 编译</span><br><span class="line">mkdir -p /usr/local/javaweb/redis # 新创建目录存储redis</span><br><span class="line">cp /usr/local/javaweb/redis5/src/redis-server /usr/local/javaweb/redis/ # 复制redis-server到新目录</span><br><span class="line">cp /usr/local/javaweb/redis5/src/redis-cli /usr/local/javaweb/redis/ # 复制redis-cli到新目录</span><br><span class="line">cp /usr/local/javaweb/redis5/redis.conf /usr/local/javaweb/redis/ # 复制redis.conf到新目录</span><br><span class="line">cd /usr/local/javaweb/redis/ # 进入新目录</span><br></pre></td></tr></table></figure><ul><li>使用 <code>vim</code> 命令打开文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/javaweb/redis/redis.conf # 编辑配置文件</span><br></pre></td></tr></table></figure><ul><li>然后按 <code>i</code> 进入编辑模式 编辑以下字段</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bind 127.0.0.1 ——&gt; # bind 127.0.0.1 # 将此行注释掉</span><br><span class="line">protected-mode yes ——&gt; protected-mode no</span><br><span class="line">daemonize no ——&gt; daemonize yes</span><br><span class="line"># requirepass foobared ——&gt; requirepass 123456 # 设置密码为123456</span><br></pre></td></tr></table></figure><ul><li>最后按 <code>Esc</code> 并输入 <code>:wq</code> 回车退出</li><li>使用 <code>vim</code> 命令打开文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/init.d/redis #编辑redis开机启动脚本</span><br></pre></td></tr></table></figure><ul><li>然后按 <code>i</code> 进入编辑模式 插入以下文字</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"> # chkconfig: 2345 80 90</span><br><span class="line"> # description: Start and Stop redis</span><br><span class="line"> #PATH=/usr/local/bin:/sbin:/usr/bin:/bin</span><br><span class="line"> REDISPORT=6379</span><br><span class="line"> EXEC=/usr/local/javaweb/redis/redis-server </span><br><span class="line"> REDIS_CLI=/usr/local/javaweb/redis/redis-cli </span><br><span class="line"> PIDFILE=/var/run/redis_6379.pid</span><br><span class="line"> CONF=&quot;/usr/local/javaweb/redis/redis.conf&quot; </span><br><span class="line"> AUTH=&quot;123456&quot;</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line"> start)</span><br><span class="line"> if [ -f $PIDFILE ]</span><br><span class="line"> then</span><br><span class="line"> echo &quot;$PIDFILE exists, process is already running or crashed&quot;</span><br><span class="line"> else</span><br><span class="line"> echo &quot;Starting Redis server...&quot;</span><br><span class="line"> $EXEC $CONF</span><br><span class="line"> fi</span><br><span class="line"> if [ &quot;$?&quot;=&quot;0&quot; ] </span><br><span class="line"> then </span><br><span class="line"> echo &quot;Redis is running...&quot;</span><br><span class="line"> fi </span><br><span class="line"> ;;</span><br><span class="line"> stop)</span><br><span class="line"> if [ ! -f $PIDFILE ]</span><br><span class="line"> then</span><br><span class="line"> echo &quot;$PIDFILE does not exist, process is not running&quot;</span><br><span class="line"> else</span><br><span class="line"> PID=$(cat $PIDFILE)</span><br><span class="line"> echo &quot;Stopping ...&quot;</span><br><span class="line"> $REDIS_CLI -p $REDISPORT SHUTDOWN</span><br><span class="line"> while [ -x $&#123;PIDFILE&#125; ]</span><br><span class="line"> do</span><br><span class="line"> echo &quot;Waiting for Redis to shutdown ...&quot;</span><br><span class="line"> sleep 1</span><br><span class="line"> done</span><br><span class="line"> echo &quot;Redis stopped&quot;</span><br><span class="line"> fi</span><br><span class="line"> ;;</span><br><span class="line"> restart|force-reload)</span><br><span class="line"> $&#123;0&#125; stop</span><br><span class="line"> $&#123;0&#125; start</span><br><span class="line"> ;;</span><br><span class="line"> *)</span><br><span class="line"> echo &quot;Usage: /etc/init.d/redis &#123;start|stop|restart|force-reload&#125;&quot; &gt;&amp;2</span><br><span class="line"> exit 1</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><ul><li>最后按 <code>Esc</code> 并输入 <code>:wq</code> 回车退出</li><li>使用 <code>vim</code> 命令打开文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.local # 添加开机启动服务</span><br></pre></td></tr></table></figure><ul><li>然后按 <code>i</code> 进入编辑模式 插入以下文字</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service redis start</span><br></pre></td></tr></table></figure><ul><li>最后按 <code>Esc</code> 并输入 <code>:wq</code> 回车退出</li></ul><h4 id="③登录-redis"><a href="#③登录-redis" class="headerlink" title="③登录 redis"></a>③登录 redis</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /etc/init.d/redis # 设置权限</span><br><span class="line">chkconfig --add redis # 注册系统服务</span><br><span class="line">service redis start # 启动redis服务</span><br><span class="line">ps -ef|grep redis # 查看当前状态</span><br><span class="line">ln -s /usr/local/javaweb/redis/redis-cli /usr/bin/redis # 创建redis命令软连接</span><br><span class="line">cd /</span><br><span class="line">redis # 进入redis</span><br><span class="line">auth 123456 # 密码验证</span><br><span class="line">set name wiy # 增加用户</span><br><span class="line">get name</span><br></pre></td></tr></table></figure><p><img src="./1556333897053.png" alt="Alt text"></p><h4 id="④验证配置"><a href="#④验证配置" class="headerlink" title="④验证配置"></a>④验证配置</h4><p><img src="./1556335515784.png" alt="Alt text"><br><img src="./1556335546422.png" alt="Alt text"><br><img src="./1556377155052.png" alt="Alt text"></p><ul><li>如果上图命令没有报错 说明配置成功</li></ul><h4 id="⑤远程连接"><a href="#⑤远程连接" class="headerlink" title="⑤远程连接"></a>⑤远程连接</h4><ul><li>使用 Redis Desktop Manager 远程访问数据库</li></ul><p><img src="./1556340237995.png" alt="Alt text"></p><ul><li>连接后可以通过 Redis Desktop Manager 管理远程数据库</li></ul><p><img src="./1556354237627.png" alt="Alt text"></p><h4 id="⑥参考博客"><a href="#⑥参考博客" class="headerlink" title="⑥参考博客"></a>⑥参考博客</h4><ul><li><a href="https://blog.csdn.net/lc1010078424/article/details/78295482" target="_blank" rel="noopener">https://blog.csdn.net/lc1010078424/article/details/78295482</a></li></ul><hr><h3 id="8-部署-Springboot-项目"><a href="#8-部署-Springboot-项目" class="headerlink" title="8.部署 Springboot 项目"></a>8.部署 Springboot 项目</h3><h4 id="①打包项目"><a href="#①打包项目" class="headerlink" title="①打包项目"></a>①打包项目</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">本地命令行中: </span><br><span class="line">cd 项目根目录 # 进入该目录</span><br><span class="line">mvn package # 将项目打包</span><br></pre></td></tr></table></figure><p><img src="./1555998382204.png" alt="Alt text"><br><img src="./1555998418092.png" alt="Alt text"></p><h4 id="②上传-jar-包"><a href="#②上传-jar-包" class="headerlink" title="②上传 jar 包"></a>②上传 jar 包</h4><ul><li>使用 Xftp6 工具上传 jar 包至服务器</li></ul><p><img src="./1555999045107.png" alt="Alt text"><br><img src="./1555999093377.png" alt="Alt text"></p><h4 id="③运行-jar-包"><a href="#③运行-jar-包" class="headerlink" title="③运行 jar 包"></a>③运行 jar 包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/javaweb/springboot # 进入该目录</span><br><span class="line">java -jar luckymoney-0.0.1-SNAPSHOT.jar # 运行此jar包</span><br></pre></td></tr></table></figure><p><img src="./1555999024413.png" alt="Alt text"></p><h4 id="④验证配置-1"><a href="#④验证配置-1" class="headerlink" title="④验证配置"></a>④验证配置</h4><p><img src="./1555999593053.png" alt="Alt text"><br><img src="./1555999649486.png" alt="Alt text"></p><ul><li>如上图内容 我们成功地访问了这个 springboot 项目 间接说明了配置的正确性！</li><li><strong>Ctrl + v</strong>：停止运行项目</li></ul><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#x77;&#106;&#121;&#x6d;&#101;&#x73;&#x73;&#105;&#64;&#x31;&#x36;&#x33;&#46;&#x63;&#x6f;&#x6d;" target="_blank" rel="noopener">&#x77;&#106;&#121;&#x6d;&#101;&#x73;&#x73;&#105;&#64;&#x31;&#x36;&#x33;&#46;&#x63;&#x6f;&#x6d;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-我的服务器配置&quot;&gt;&lt;a href=&quot;#1-我的服务器配置&quot; class=&quot;headerlink&quot; title=&quot;1.我的服务器配置&quot;&gt;&lt;/a&gt;1.我的服务器配置&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;./1555501515372.png&quot; alt=&quot;Alt te
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://messi1002.top/categories/Linux/"/>
    
      <category term="阿里云服务器" scheme="http://messi1002.top/categories/Linux/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="CentOS7" scheme="http://messi1002.top/tags/CentOS7/"/>
    
  </entry>
  
  <entry>
    <title>Git-版本控制工具</title>
    <link href="http://messi1002.top/2019/04/15/Git-%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7/"/>
    <id>http://messi1002.top/2019/04/15/Git-版本控制工具/</id>
    <published>2019-04-15T09:40:49.000Z</published>
    <updated>2019-09-07T03:37:32.886Z</updated>
    
    <content type="html"><![CDATA[<ul><li>版本控制工具的发展：</li></ul><p><img src="./1555237484782.png" alt="Alt text"></p><blockquote><p><strong>git 是分布式版本控制系统，能记录所有文件的所有版本，并有效地追踪文件的变化，也容易回滚到文件之前的状态。</strong></p></blockquote><hr><h3 id="1-安装与配置"><a href="#1-安装与配置" class="headerlink" title="1.安装与配置"></a>1.安装与配置</h3><h4 id="①下载-git"><a href="#①下载-git" class="headerlink" title="①下载 git"></a>①下载 git</h4><ul><li>下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></li></ul><p><img src="./1556629826249.png" alt="Alt text"></p><ul><li>然后按默认选项安装即可</li></ul><h4 id="②验证安装"><a href="#②验证安装" class="headerlink" title="②验证安装"></a>②验证安装</h4><ul><li>打开命令行 输入 <strong>git</strong></li></ul><p><img src="./1556634283900.png" alt="Alt text"></p><ul><li>如果出现上图内容 说明安装成功        </li></ul><h4 id="③配置用户信息"><a href="#③配置用户信息" class="headerlink" title="③配置用户信息"></a>③配置用户信息</h4><blockquote><p>安装好 git 后，需要配置用户信息(绑定 <strong>GitHub 用户名</strong> 和邮箱)。</p></blockquote><p><img src="./1555156834160.png" alt="Alt text"></p><hr><h3 id="2-Git-仓库"><a href="#2-Git-仓库" class="headerlink" title="2.Git 仓库"></a>2.Git 仓库</h3><ul><li><strong>仓库又名版本库，英文名是 repository，可以将之理解为一个目录，目录中的所有文件都可被 git 管理。每个文件的修改、删除等操作都可以被 git 追踪。</strong></li><li>git 仓库的相关操作：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">pwd: 查看目前位置。</span><br><span class="line">cd 文件夹名: 进入该目录。</span><br><span class="line">cd ..: 进入上级目录。</span><br><span class="line">git init: 初始化版本库。</span><br><span class="line">git add: 添加文件到暂存区。</span><br><span class="line">git commit: 将文件从暂存区提交到仓库。</span><br><span class="line">git status: 查看仓库状态信息。</span><br><span class="line">ll: 展示当前目录的详细信息，等价于ls -l。</span><br><span class="line">ls -a: 展示隐藏和非隐藏文件。</span><br><span class="line">    一般点开头的文件都是隐藏文件。</span><br><span class="line"> </span><br><span class="line">创建仓库详情:</span><br><span class="line">  mkdir test // 创建test目录。</span><br><span class="line">  cd test // 进入test目录。</span><br><span class="line">  git init // 初始化版本库。</span><br><span class="line">  ll // 目录为空。</span><br><span class="line">  ls -a // 展示.git隐藏目录。  </span><br><span class="line">  echo &quot;......&quot; &gt;&gt; test.txt // 将&apos;......&apos;追加到test.txt文件中。</span><br><span class="line">  cat test.txt // 展示当前文件内容。</span><br><span class="line">  git add test.txt // 添加文件到版本库(即本地暂存区)。</span><br><span class="line">  git commit -m &quot;repo first commit&quot; // 提交到仓库中，&quot;repo first commit&quot;为本次提交的描述信息。</span><br><span class="line">  git status // 查看仓库状态。</span><br></pre></td></tr></table></figure><p><img src="./1555164157559.png" alt="Alt text"><br><img src="./1555165348982.png" alt="Alt text"></p><hr><h3 id="3-Git-工作流"><a href="#3-Git-工作流" class="headerlink" title="3.Git 工作流"></a>3.Git 工作流</h3><blockquote><p>原理分析：当工作区使用 git add 命令将修改后的文件提交到暂存区时，暂存区中的文件将会被提交到 object 文件目录中，index 的指针也会指向 object 文件目录中的新文件 id。执行 git commit 命令后，master 分支更新，其中的指针也会指向 object 文件目录中的新文件 id。</p></blockquote><p><img src="./1555165784665.png" alt="Alt text"></p><h4 id="①暂存区到工作区的回滚"><a href="#①暂存区到工作区的回滚" class="headerlink" title="①暂存区到工作区的回滚"></a>①暂存区到工作区的回滚</h4><ul><li>一般开发完成但还没有测试的文件都会被提交到暂存区</li></ul><p><img src="./1555220507528.png" alt="Alt text"></p><ul><li>如果不想要暂存区的最新版本 可以直接丢弃<br>| <strong>git reset HEAD 文件名(将暂存区的内容还原为最后一次提交的内容)</strong><br>| <strong>git checkout – 文件名(将工作区的内容还原为最后一次提交的内容)</strong></li></ul><p><img src="./1555221379663.png" alt="Alt text"></p><h4 id="②已提交版本的回滚"><a href="#②已提交版本的回滚" class="headerlink" title="②已提交版本的回滚"></a>②已提交版本的回滚</h4><ul><li>要找到以前的提交版本 需要回滚</li><li>我们先创建一次提交：</li></ul><p><img src="./1555220805447.png" alt="Alt text"><br><img src="./1555220827622.png" alt="Alt text"></p><ul><li>现在查看 commit 号：<strong>git log</strong></li><li>此时代码需要回到过去  即将 hard 指针(当前环境的版本指针)修改到某次 commit 上：<strong>git reset –hard commit号</strong></li></ul><p><img src="./1555251554846.png" alt="Alt text"></p><ul><li>回到过去后 使用 <strong>git reflog</strong> 可以查看”未来”的版本号</li></ul><p><img src="./1555251752673.png" alt="Alt text"></p><h4 id="③清空仓库"><a href="#③清空仓库" class="headerlink" title="③清空仓库"></a>③清空仓库</h4><ul><li>清空本地仓库：</li></ul><p><img src="./1555222085240.png" alt="Alt text"></p><ul><li><strong>git rm –cache 文件名</strong>：删除添加到暂存区的文件         </li><li><strong>git rm 文件名</strong>：同时删除工作区和暂存区的文件</li></ul><blockquote><p><strong>注意：以上所有操作只是提交给本地仓库，并不是 Github。</strong></p></blockquote><hr><h3 id="4-远程仓库"><a href="#4-远程仓库" class="headerlink" title="4.远程仓库"></a>4.远程仓库</h3><ul><li>本地仓库：在电脑上的仓库</li><li>远程仓库：在公网服务器上的仓库</li></ul><blockquote><p><strong>通过 git push 提交修改到远程仓库时，需要 ssh 连接(连接后每次提交都不需要重新输入密码)。</strong><br>ssh 连接的具体步骤：<br><a href="https://blog.csdn.net/qq_41979043/article/details/83046278" target="_blank" rel="noopener">https://blog.csdn.net/qq_41979043/article/details/83046278</a> —— 3.安装git</p></blockquote><ul><li>关联远程仓库：</li></ul><p><img src="./1555230397816.png" alt="Alt text"><br><img src="./1555230025650.png" alt="Alt text"><br><img src="./1555230608479.png" alt="Alt text"></p><ul><li>每次可以使用 <strong>git push</strong> 命令 将本地仓库的 master 分支同步到远程仓库的 master 分支</li></ul><hr><h3 id="5-克隆仓库"><a href="#5-克隆仓库" class="headerlink" title="5.克隆仓库"></a>5.克隆仓库</h3><ul><li>将远程仓库克隆到本地：</li><li>1.Clone with SSH：<strong>git clone <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:messi1002/test.git</strong></li></ul><p><img src="./1555233188467.png" alt="Alt text"></p><ul><li>2.Clone with HTTPS：<strong>git clone <a href="https://github.com/messi1002/test.git" target="_blank" rel="noopener">https://github.com/messi1002/test.git</a></strong></li></ul><p><img src="./1555238783907.png" alt="Alt text"></p><ul><li>将远程仓库的文件更新到本地仓库：<strong>git pull origin master</strong></li></ul><p><img src="./1555233719113.png" alt="Alt text"><br><img src="./1555233679608.png" alt="Alt text"></p><hr><h3 id="6-标签管理"><a href="#6-标签管理" class="headerlink" title="6.标签管理"></a>6.标签管理</h3><blockquote><p>当需要发布新的版本时，需要在版本库中打一个标签(确定该标签对应的版本时刻)。<br>以后想要回滚到某个版本时，可以直接通过标签(版本号)回滚。</p></blockquote><p><img src="./1555234026263.png" alt="Alt text"><br><img src="./1555234747014.png" alt="Alt text"></p><ul><li>新建标签并指定提交信息：<strong>git tag -a name -m “comment”</strong></li><li>删除标签：<strong>git tag -d  name</strong></li></ul><hr><h3 id="7-分支管理"><a href="#7-分支管理" class="headerlink" title="7.分支管理"></a>7.分支管理</h3><blockquote><p><strong>当我们需要修改正在更新的项目的 bug 时，可以新建一个分支，以已经发布的项目代码为基础，修改 bug 后重新发布代码，最后再将此分支合并到正在开发的分支上。</strong></p></blockquote><p><img src="./1555236623886.png" alt="Alt text"><br><img src="./1555236766440.png" alt="Alt text"></p><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#119;&#x6a;&#x79;&#109;&#101;&#x73;&#115;&#105;&#64;&#x31;&#54;&#51;&#46;&#x63;&#111;&#109;" target="_blank" rel="noopener">&#119;&#x6a;&#x79;&#109;&#101;&#x73;&#115;&#105;&#64;&#x31;&#54;&#51;&#46;&#x63;&#111;&#109;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;版本控制工具的发展：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;./1555237484782.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;git 是分布式版本控制系统，能记录所有文件的所有版本，并有效
      
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://messi1002.top/categories/JavaWeb/"/>
    
    
      <category term="Git" scheme="http://messi1002.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>JSON快速入门(JAVA版)</title>
    <link href="http://messi1002.top/2019/04/11/JSON%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-JAVA%E7%89%88/"/>
    <id>http://messi1002.top/2019/04/11/JSON快速入门-JAVA版/</id>
    <published>2019-04-11T15:20:10.000Z</published>
    <updated>2019-09-07T03:37:42.267Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>org.json、gson 等 jar 包的下载：<br>链接：<a href="https://pan.baidu.com/s/1sjMDVajQgR-ihFvAZ54ymg" target="_blank" rel="noopener">https://pan.baidu.com/s/1sjMDVajQgR-ihFvAZ54ymg</a><br>提取码：dt84</p></blockquote><h3 id="1-了解-JSON"><a href="#1-了解-JSON" class="headerlink" title="1.了解 JSON"></a>1.了解 JSON</h3><blockquote><p>它的全称为 <strong>JavaScript Object Notation</strong>。            </p></blockquote><h4 id="①优点"><a href="#①优点" class="headerlink" title="①优点"></a>①优点</h4><ul><li><strong>JSON 是一种与开发语言无关的、轻量级的数据交换格式。</strong><br>| 它采用完全独立于编程语言的文本格式来存储和表示数据。<br>| 最初来自 JS，后来几乎每种常用语言都有处理 JSON 的 API，它支持多种服务器端语言，便于服务器端的解析。</li><li><strong>JSON 是行业内使用最为广泛的数据传输格式。</strong><br>| 调用服务端 API 时会使用 JSON 作为返回格式。</li><li><strong>JSON 是数据存储的一种格式，格式简单、易于读写、占用带宽小。</strong><br>| 它易于易于程序的解析和生成，并能有效的提升网络传输效率。</li></ul><h4 id="②缺点"><a href="#②缺点" class="headerlink" title="②缺点"></a>②缺点</h4><ul><li>要求字符集必须是 Unicode，受约束性强。</li></ul><h4 id="③实例"><a href="#③实例" class="headerlink" title="③实例"></a>③实例</h4><ul><li><strong>{ }：标识一个 JSON 对象(即结构体)。</strong><br>| { } 中包含键值对结构，key 必须是 String 类型，value 为任何基本类型、对象或数组，多个键值对之间用逗号分隔。            </li><li><strong>[]：数组 Array，用逗号分隔元素。</strong><br>| 在 Java 中，可用集合、string[] 等定义。</li><li><strong>元素基本类型：String、number、true、false、null。</strong><br>| <strong>JSON 中的数字没有浮点数、整数 … 之分。但在 Java 中，JSONObject 的 put 方法会自动区分不同的数字格式。这是一种 JSON 原生数据格式到 Java 数据格式的映射关系。</strong><br>| 标准 JSON 中不支持任何形式的注释。<br>| JSON 中没有日期 / 时间数据格式。</li></ul><p><img src="1.jpg" alt="Alt text"></p><hr><h3 id="2-org-json-包的使用"><a href="#2-org-json-包的使用" class="headerlink" title="2.org.json 包的使用"></a>2.org.json 包的使用</h3><h4 id="①使用-JSONObject-构建-JSON-对象"><a href="#①使用-JSONObject-构建-JSON-对象" class="headerlink" title="①使用 JSONObject 构建 JSON 对象"></a>①使用 JSONObject 构建 JSON 对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> json;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.json.JSONException;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/4/10 16:34</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 使用JSONObject构建JSON对象。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">jsonTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JSONObject messi = <span class="keyword">new</span> JSONObject();</span><br><span class="line">        Object null1 = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            messi.put(<span class="string">"name"</span>, <span class="string">"messi"</span>);</span><br><span class="line">            <span class="comment">// put方法具有替代性，第二次赋值会代替第一次赋值。</span></span><br><span class="line">            messi.put(<span class="string">"name"</span>, <span class="string">"梅西"</span>);</span><br><span class="line">            messi.put(<span class="string">"age"</span>, <span class="number">31.8</span>);</span><br><span class="line">            <span class="comment">// JSON中用String类型代替日期类型。</span></span><br><span class="line">            messi.put(<span class="string">"birthday"</span>, <span class="string">"1987-06-24"</span>);</span><br><span class="line">            messi.put(<span class="string">"home"</span>, <span class="string">"Barcelona"</span>);</span><br><span class="line">            <span class="comment">// 可用集合、string[]等定义JSON数组。</span></span><br><span class="line">            messi.put(<span class="string">"major"</span>, <span class="keyword">new</span> String[]&#123;<span class="string">"player"</span>, <span class="string">"star"</span>&#125;);</span><br><span class="line">            messi.put(<span class="string">"car"</span>, <span class="keyword">true</span>);</span><br><span class="line">            messi.put(<span class="string">"house"</span>, <span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">// 直接使用null会产生二义性。</span></span><br><span class="line">            messi.put(<span class="string">"daughter"</span>, null1);</span><br><span class="line">            messi.put(<span class="string">"girlfriend"</span>, <span class="string">"安东内拉"</span>);</span><br><span class="line">            <span class="comment">// 此键值作为JSON数据的注释。</span></span><br><span class="line">            messi.put(<span class="string">"comment"</span>, <span class="string">"love him!!"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 打印JSON格式的数据。</span></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * 自动去除空格 —— 压缩数据。</span></span><br><span class="line"><span class="comment">             * 与键值的插入顺序不同。</span></span><br><span class="line"><span class="comment">             * &#123;"birthday":"1987-06-24","girlfriend":"安东内拉","major":["player","star"],"car":true,"name":"梅西","comment":"love him!!","house":true,"age":31.8,"home":"Barcelona"&#125;</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            System.out.println(messi.toString());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JSONException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="②使用-Map-构建-JSON-对象"><a href="#②使用-Map-构建-JSON-对象" class="headerlink" title="②使用 Map 构建 JSON 对象"></a>②使用 Map 构建 JSON 对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> json;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/4/10 16:34</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 使用Map构建JSON对象。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">jsonTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashMap&lt;String, Object&gt; messi = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">        Object null1 = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        messi.put(<span class="string">"name"</span>, <span class="string">"messi"</span>);</span><br><span class="line">        <span class="comment">// put方法具有替代性，第二次赋值会代替第一次赋值。</span></span><br><span class="line">        messi.put(<span class="string">"name"</span>, <span class="string">"梅西"</span>);</span><br><span class="line">        messi.put(<span class="string">"age"</span>, <span class="number">31.8</span>);</span><br><span class="line">        <span class="comment">// JSON中用String类型代替日期类型。</span></span><br><span class="line">        messi.put(<span class="string">"birthday"</span>, <span class="string">"1987-06-24"</span>);</span><br><span class="line">        messi.put(<span class="string">"home"</span>, <span class="string">"Barcelona"</span>);</span><br><span class="line">        <span class="comment">// 可用集合、string[]等定义JSON数组。</span></span><br><span class="line">        messi.put(<span class="string">"major"</span>, <span class="keyword">new</span> String[]&#123;<span class="string">"player"</span>, <span class="string">"star"</span>&#125;);</span><br><span class="line">        messi.put(<span class="string">"car"</span>, <span class="keyword">true</span>);</span><br><span class="line">        messi.put(<span class="string">"house"</span>, <span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 直接使用null会产生二义性。</span></span><br><span class="line">        messi.put(<span class="string">"daughter"</span>, null1);</span><br><span class="line">        messi.put(<span class="string">"girlfriend"</span>, <span class="string">"安东内拉"</span>);</span><br><span class="line">        <span class="comment">// 此键值作为JSON数据的注释。</span></span><br><span class="line">        messi.put(<span class="string">"comment"</span>, <span class="string">"love him!!"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 打印JSON格式的数据。</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 通过JSONObject的构造函数传入Map对象,来构建一个JSON对象。</span></span><br><span class="line"><span class="comment">         * 自动去除空格 —— 压缩数据。</span></span><br><span class="line"><span class="comment">         * 与键值的插入顺序不同。</span></span><br><span class="line"><span class="comment">         * &#123;"birthday":"1987-06-24","girlfriend":"安东内拉","major":["player","star"],"car":true,"name":"梅西","comment":"love him!!","house":true,"age":31.8,"home":"Barcelona"&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="keyword">new</span> JSONObject(messi).toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="③使用-Javabean-构建-JSON-对象-推荐使用"><a href="#③使用-Javabean-构建-JSON-对象-推荐使用" class="headerlink" title="③使用 Javabean 构建 JSON 对象(推荐使用)"></a>③使用 Javabean 构建 JSON 对象(推荐使用)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> json;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/4/10 17:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 封装数据的Javabean。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">lover</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> age;</span><br><span class="line">    <span class="comment">// 日期类型需要用字符串类型代替。</span></span><br><span class="line">    <span class="keyword">private</span> String birthday;</span><br><span class="line">    <span class="keyword">private</span> String home;</span><br><span class="line">    <span class="keyword">private</span> String[] major;</span><br><span class="line">    <span class="keyword">private</span> Boolean car;</span><br><span class="line">    <span class="keyword">private</span> Boolean house;</span><br><span class="line">    <span class="keyword">private</span> String girlfriend;</span><br><span class="line">    <span class="keyword">private</span> Object daugter;</span><br><span class="line">    <span class="keyword">private</span> String comment;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">lover</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">double</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getBirthday</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> birthday;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirthday</span><span class="params">(String birthday)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHome</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> home;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHome</span><span class="params">(String school)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.home = home;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String[] getMajor() &#123;</span><br><span class="line">        <span class="keyword">return</span> major;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMajor</span><span class="params">(String[] major)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.major = major;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">getCar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> car;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCar</span><span class="params">(<span class="keyword">boolean</span> car)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.car = car;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">getHouse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> house;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHouse</span><span class="params">(<span class="keyword">boolean</span> house)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.house = house;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getGirlfriend</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> girlfriend;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGirlfriend</span><span class="params">(String girlfriend)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.girlfriend = girlfriend;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getDaughter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> daugter;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDaughter</span><span class="params">(Object daugter)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.daugter = daugter;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getComment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> comment;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setComment</span><span class="params">(String comment)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.comment = comment;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> json;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/4/10 16:34</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 使用Javabean构建JSON对象。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">jsonTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 声明一个bean的实例。</span></span><br><span class="line">        lover messi = <span class="keyword">new</span> lover();</span><br><span class="line">        Object null1 = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给bean的属性赋值。</span></span><br><span class="line">        messi.setName(<span class="string">"梅西"</span>);</span><br><span class="line">        messi.setAge(<span class="number">31.8</span>);</span><br><span class="line">        messi.setBirthday(<span class="string">"1987-06-24"</span>);</span><br><span class="line">        messi.setHome(<span class="string">"Barcelona"</span>);</span><br><span class="line">        messi.setMajor(<span class="keyword">new</span> String[]&#123;<span class="string">"player"</span>, <span class="string">"star"</span>&#125;);</span><br><span class="line">        messi.setCar(<span class="keyword">true</span>);</span><br><span class="line">        messi.setHouse(<span class="keyword">true</span>);</span><br><span class="line">        messi.setDaughter(null1);</span><br><span class="line">        messi.setGirlfriend(<span class="string">"安东内拉"</span>);</span><br><span class="line">        messi.setComment(<span class="string">"love him!!"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 通过JSONObject的构造函数传入Javabean实例，来构建一个JSON对象。</span></span><br><span class="line"><span class="comment">         * 并不是直接对JSONObject进行操作，没有将属性直接put到JSONObject中。而是先创建一个Javabean对象，给此对象的属性赋值，便于重用Javabean。</span></span><br><span class="line"><span class="comment">         * &#123;"birthday":"1987-06-24","girlfriend":"安东内拉","major":["player","star"],"car":true,"name":"梅西","comment":"love him!!","daughter":null,"house":true,"age":31.8,"home":null&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="keyword">new</span> JSONObject(messi).toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="④从文件中读取-JSON"><a href="#④从文件中读取-JSON" class="headerlink" title="④从文件中读取 JSON"></a>④从文件中读取 JSON</h4><blockquote><p><strong>需要将此 JSON 文件放在工程根目录下</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> json;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONArray;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONException;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/4/10 18:31</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 从文件中读取JSON数据。</span></span><br><span class="line"><span class="comment"> * 注意: JSONObject不支持将JSON数据反解析为Javabean。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">readJsonTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, JSONException </span>&#123;</span><br><span class="line">        <span class="comment">// 获取文件。</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(readJsonTest.class.getResource(<span class="string">"../messi.json"</span>).getFile());</span><br><span class="line">        <span class="comment">// 读取文件内容。</span></span><br><span class="line">        String content = FileUtils.readFileToString(file);</span><br><span class="line">        <span class="comment">// 将文件内容转换为JSON对象。</span></span><br><span class="line">        JSONObject json = <span class="keyword">new</span> JSONObject(content);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 增加程序的健壮性。</span></span><br><span class="line">        <span class="keyword">if</span> (!json.isNull(<span class="string">"name"</span>))</span><br><span class="line">            System.out.println(<span class="string">"name: "</span> + json.getString(<span class="string">"name"</span>));   </span><br><span class="line">        <span class="comment">// 解析JSON格式的数据。</span></span><br><span class="line">        System.out.println(<span class="string">"age: "</span> + json.getDouble(<span class="string">"age"</span>));</span><br><span class="line">        System.out.println(<span class="string">"birthday: "</span> + json.getString(<span class="string">"birthday"</span>));</span><br><span class="line">        System.out.println(<span class="string">"home: "</span> + json.getString(<span class="string">"home"</span>));</span><br><span class="line">        System.out.println(<span class="string">"car? "</span> + json.getBoolean(<span class="string">"car"</span>));</span><br><span class="line">        System.out.println(<span class="string">"house? "</span> + json.getBoolean(<span class="string">"house"</span>));</span><br><span class="line">        System.out.println(<span class="string">"comment: "</span> + json.getString(<span class="string">"comment"</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// JSONObject对象不能解析JSON格式中的数组，需要JSONArray对象解析。</span></span><br><span class="line">        <span class="comment">// 获取JSON格式中的数组。</span></span><br><span class="line">        JSONArray array = json.getJSONArray(<span class="string">"major"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历获取到的数组。</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 专业-1: player</span></span><br><span class="line"><span class="comment">         * 专业-2: star</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length(); i++)</span><br><span class="line">            System.out.println(<span class="string">"专业-"</span> + (i+<span class="number">1</span>) + <span class="string">": "</span> + array.getString(i));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="3-GSON-的使用"><a href="#3-GSON-的使用" class="headerlink" title="3.GSON 的使用"></a>3.GSON 的使用</h3><blockquote><p><strong>Google 提出的开源项目(第三方工具)，相比于 JSONObject，功能更强大、性能更出色、使用方式更简单。</strong></p></blockquote><h4 id="①使用-Javabean-构建-JSON-对象-推荐使用"><a href="#①使用-Javabean-构建-JSON-对象-推荐使用" class="headerlink" title="①使用 Javabean 构建 JSON 对象(推荐使用)"></a>①使用 Javabean 构建 JSON 对象(推荐使用)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> gson;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/4/11 17:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 封装数据的JavaBean。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">lover1</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> age;</span><br><span class="line">    <span class="keyword">private</span> String birthday;</span><br><span class="line">    <span class="keyword">private</span> String home;</span><br><span class="line">    <span class="keyword">private</span> String[] major;</span><br><span class="line">    <span class="keyword">private</span> Boolean car;</span><br><span class="line">    <span class="keyword">private</span> Boolean house;</span><br><span class="line">    <span class="keyword">private</span> String girlfriend;</span><br><span class="line">    <span class="keyword">private</span> Object daughter;</span><br><span class="line">    <span class="keyword">private</span> String comment;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">lover1</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">double</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getBirthday</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> birthday;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirthday</span><span class="params">(String birthday)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHome</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    <span class="keyword">return</span> home; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHome</span><span class="params">(String home)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">this</span>.home = home; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String[] getMajor() &#123;</span><br><span class="line">        <span class="keyword">return</span> major;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMajor</span><span class="params">(String[] major)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.major = major;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">getCar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> car;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCar</span><span class="params">(<span class="keyword">boolean</span> car)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.car = car;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">getHouse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> house;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHouse</span><span class="params">(<span class="keyword">boolean</span> house)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.house = house;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getGirlfriend</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> girlfriend;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGirlfriend</span><span class="params">(String girlfriend)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.girlfriend = girlfriend;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getDaughter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> daughter;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDaughter</span><span class="params">(Object daugter)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.daughter = daugter;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getComment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> comment;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setComment</span><span class="params">(String comment)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.comment = comment;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/4/11 10:13</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 使用Javabean构建JSON对象。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">gsonTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        lover1 messi = <span class="keyword">new</span> lover1();</span><br><span class="line">        Object null1 = <span class="keyword">null</span>;</span><br><span class="line">        Gson gson = <span class="keyword">new</span> Gson();</span><br><span class="line"></span><br><span class="line">        messi.setName(<span class="string">"messi"</span>);</span><br><span class="line">        messi.setAge(<span class="number">31.8</span>);</span><br><span class="line">        messi.setBirthday(<span class="string">"1987-06-24"</span>);</span><br><span class="line">        messi.setHome(<span class="string">"Barcelona"</span>);</span><br><span class="line">        messi.setMajor(<span class="keyword">new</span> String[]&#123;<span class="string">"player"</span>, <span class="string">"star"</span>&#125;);</span><br><span class="line">        messi.setCar(<span class="keyword">true</span>);</span><br><span class="line">        messi.setHouse(<span class="keyword">true</span>);</span><br><span class="line">        messi.setDaughter(null1);</span><br><span class="line">        messi.setGirlfriend(<span class="string">"安东内拉"</span>);</span><br><span class="line">        messi.setComment(<span class="string">"love him!!"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成JSON格式的数据。</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * &#123;"name":"messi","age":31.8,"birthday":"1987-06-24","home":"Barcelona","major":["player","star"],"car":true,"house":true,"girlfriend":"安东内拉","comment":"love him!!"&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(gson.toJson(messi));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="②个性化定制-JSON"><a href="#②个性化定制-JSON" class="headerlink" title="②个性化定制 JSON"></a>②个性化定制 JSON</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.annotations.SerializedName;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/4/11 17:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 封装数据的JavaBean。</span></span><br><span class="line"><span class="comment"> * GSON有更强的灵活性。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">lover2</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 通过添加注解的方式，标识生成JSON对象的一个key。</span></span><br><span class="line">    <span class="comment">// 将name转换为NAME，相当于解析的时候重新命名key值。</span></span><br><span class="line">    <span class="meta">@SerializedName</span>(<span class="string">"NAME"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> age;</span><br><span class="line">    <span class="comment">// 隐藏某个属性。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">transient</span> String ignore;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">lover2</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">double</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getIgnore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ignore;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIgnore</span><span class="params">(String ignore)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ignore = ignore;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.GsonBuilder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/4/11 10:13</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 使用Javabean构建JSON对象。</span></span><br><span class="line"><span class="comment"> * 个性化构建JSON格式。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">gsonTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        lover2 messi = <span class="keyword">new</span> lover2();</span><br><span class="line">        GsonBuilder gb = <span class="keyword">new</span> GsonBuilder();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过Javabean类中的注解将name变为NAME，即在构建过程中将key个性化，一直有效。</span></span><br><span class="line">        messi.setName(<span class="string">"messi"</span>);</span><br><span class="line">        messi.setAge(<span class="number">31.8</span>);</span><br><span class="line">        <span class="comment">// 通过传入回调参数将age变为AGE，即在构建过程中将key个性化，仅在这个gb对象中有效。</span></span><br><span class="line">        gb.setFieldNamingStrategy(field -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (field.getName().equals(<span class="string">"age"</span>))</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"AGE"</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> field.getName();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成JSON格式的数据。</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * &#123;"NAME":"messi","AGE":31.8&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(gb.create().toJson(messi));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 美化JSON格式。</span></span><br><span class="line">        gb.setPrettyPrinting();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成JSON格式的数据。</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * &#123;</span></span><br><span class="line"><span class="comment">         *   "NAME": "messi",</span></span><br><span class="line"><span class="comment">         *   "AGE": 31.8</span></span><br><span class="line"><span class="comment">         * &#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(gb.create().toJson(messi));</span><br><span class="line"></span><br><span class="line">        Gson gson = <span class="keyword">new</span> Gson();</span><br><span class="line">        <span class="comment">// 在JavaBean中构建JSON对象时隐藏某个属性(private transient String 属性名)。</span></span><br><span class="line">        messi.setIgnore(<span class="string">"I love you!"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成JSON格式的数据。</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 隐藏了ignore属性。</span></span><br><span class="line"><span class="comment">         * &#123;"NAME":"messi","age":31.8&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(gson.toJson(messi));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="③从文件中读取-JSON-将-JSON-数据反解析为-Javabean-对象"><a href="#③从文件中读取-JSON-将-JSON-数据反解析为-Javabean-对象" class="headerlink" title="③从文件中读取 JSON + 将 JSON 数据反解析为 Javabean 对象"></a>③从文件中读取 JSON + 将 JSON 数据反解析为 Javabean 对象</h4><blockquote><p><strong>将 JSON 数据反解析为 Javabean 对象时，GSON 支持将 String 类型的日期转换为日期类型。</strong><br><strong>GSON 会将 JSON 数据中的数组自动转换为 Javabean 对象中的集合类型。</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/4/11 17:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 封装数据的Javabean。</span></span><br><span class="line"><span class="comment"> * 将JSON数据反解析为Javabean对象。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">lover3</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> age;</span><br><span class="line">    <span class="comment">// 日期类型。</span></span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="comment">// 集合类型。</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; major;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">lover3</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">double</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getBirthday</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> birthday;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirthday</span><span class="params">(Date birthday)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getMajor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> major;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMajor</span><span class="params">(List&lt;String&gt; major)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.major = major;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.GsonBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019/4/11 20:00</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 从文件中读取JSON。</span></span><br><span class="line"><span class="comment"> * 将JSON数据反解析为Javabean对象。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">readJsonTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 从文件中读取JSON。</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(readJsonTest.class.getResource(<span class="string">"../messi.json"</span>).getFile());</span><br><span class="line">        String content = FileUtils.readFileToString(file);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用GsonBuilder的setDateFormat("日期模板")方法可以将JSON对象中String类型的日期转换成Date类型。</span></span><br><span class="line">        Gson gson = <span class="keyword">new</span> GsonBuilder().setDateFormat(<span class="string">"yyyy-MM-dd"</span>).create();</span><br><span class="line">        <span class="comment">// JSON对象中的key与Javabean的属性一一对应。</span></span><br><span class="line">        <span class="comment">// 将JSON数据反解析为Javabean对象。</span></span><br><span class="line">        lover3 messi = gson.fromJson(content, lover3.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * Wed Jun 24 00:00:00 CDT 1987</span></span><br><span class="line"><span class="comment">         * 31.8</span></span><br><span class="line"><span class="comment">         * gson.lover3@1e4a7dd4</span></span><br><span class="line"><span class="comment">         * GSON会将JSON数据中的数组自动转换为Javabean对象中的集合类型。</span></span><br><span class="line"><span class="comment">         * [player, star]</span></span><br><span class="line"><span class="comment">         * class java.util.ArrayList</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(messi.getBirthday());</span><br><span class="line">        System.out.println(messi.getAge());</span><br><span class="line">        System.out.println(messi.toString());</span><br><span class="line">        System.out.println(messi.getMajor());</span><br><span class="line">        System.out.println(messi.getMajor().getClass());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>org.json 是 Android SDK 的官方库。</strong><br><strong>GSON 应用于服务端开发，功能更强大。</strong></p></blockquote><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#119;&#106;&#x79;&#x6d;&#x65;&#115;&#x73;&#x69;&#x40;&#49;&#54;&#x33;&#46;&#99;&#111;&#x6d;" target="_blank" rel="noopener">&#119;&#106;&#x79;&#x6d;&#x65;&#115;&#x73;&#x69;&#x40;&#49;&#54;&#x33;&#46;&#99;&#111;&#x6d;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;org.json、gson 等 jar 包的下载：&lt;br&gt;链接：&lt;a href=&quot;https://pan.baidu.com/s/1sjMDVajQgR-ihFvAZ54ymg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;htt
      
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://messi1002.top/categories/JavaWeb/"/>
    
    
      <category term="JSON" scheme="http://messi1002.top/tags/JSON/"/>
    
  </entry>
  
  <entry>
    <title>win10 + Ubuntu 18.04 双系统安装</title>
    <link href="http://messi1002.top/2019/04/06/win10-Ubuntu-18-04-%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/"/>
    <id>http://messi1002.top/2019/04/06/win10-Ubuntu-18-04-双系统安装/</id>
    <published>2019-04-06T11:20:09.000Z</published>
    <updated>2019-09-07T03:31:49.997Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1.准备工作"></a>1.准备工作</h3><h4 id="①下载-Ubuntu-18-04-2-LTS"><a href="#①下载-Ubuntu-18-04-2-LTS" class="headerlink" title="①下载 Ubuntu 18.04.2 LTS"></a>①下载 Ubuntu 18.04.2 LTS</h4><ul><li>官网地址：<br><a href="https://www.ubuntu.com/download/desktop" target="_blank" rel="noopener">https://www.ubuntu.com/download/desktop</a></li></ul><p><img src="1.jpg" alt="Alt text"></p><h4 id="②下载-Rufus"><a href="#②下载-Rufus" class="headerlink" title="②下载 Rufus"></a>②下载 Rufus</h4><ul><li><strong>Rufus 是 Ubuntu 官网推荐的 USB 启动盘制作工具。</strong></li><li>官网地址：<br><a href="https://rufus.ie/" target="_blank" rel="noopener">https://rufus.ie/</a></li></ul><p><img src="2.jpg" alt="Alt text"></p><ul><li>或者我的网盘分享：<br><a href="https://pan.baidu.com/s/1uWUmyNQuupPJIp2YDhKDgg，提取码：fwea。" target="_blank" rel="noopener">https://pan.baidu.com/s/1uWUmyNQuupPJIp2YDhKDgg，提取码：fwea。</a></li></ul><h4 id="③制作-Ubuntu-18-04-U盘启动"><a href="#③制作-Ubuntu-18-04-U盘启动" class="headerlink" title="③制作 Ubuntu 18.04 U盘启动"></a>③制作 Ubuntu 18.04 U盘启动</h4><ul><li>打开下载好的 Rufus 并将空U盘插入电脑，点击 <code>选择</code>，添加 Ubuntu 18.04.2 LTS。</li><li>其他设置如图所示，点击 <code>开始</code> 后，一直选择 <code>OK</code> 即可。</li></ul><p><img src="3.jpg" alt="Alt text"> </p><ul><li><p><strong>按照上图设置后，软件会把 ubuntu-18.04.2-desktop-amd64.iso 文件写入U盘，制作系统启动盘。</strong></p></li><li><p>写入完成，点击 <code>关闭</code>。</p></li><li><p>刻录完成后的U盘内部：</p><p><img src="4.jpg" alt="Alt text"></p></li></ul><h4 id="④关闭-win10-的快速启动"><a href="#④关闭-win10-的快速启动" class="headerlink" title="④关闭 win10 的快速启动"></a>④关闭 win10 的快速启动</h4><ul><li>关闭快速启动：<br><a href="https://jingyan.baidu.com/article/ca00d56c7a40e6e99febcf4f.html#!/article/ca00d56c7a40e6e99febcf4f" target="_blank" rel="noopener">https://jingyan.baidu.com/article/ca00d56c7a40e6e99febcf4f.html#!/article/ca00d56c7a40e6e99febcf4f</a></li></ul><h4 id="⑤磁盘分区"><a href="#⑤磁盘分区" class="headerlink" title="⑤磁盘分区"></a>⑤磁盘分区</h4><ul><li>使用快捷键 <code>win + x + Ctrl + k</code> 打开 win10 的 <code>磁盘管理</code></li><li>选择剩余空间较大的可分配磁盘，点击 <code>右键</code> 并选择 <code>压缩卷</code>，压缩 50~80 G。</li></ul><p><img src="5.jpg" alt="Alt text"></p><ul><li>压缩成功：</li></ul><p><img src="6.jpg" alt="Alt text"></p><hr><h3 id="2-安装过程"><a href="#2-安装过程" class="headerlink" title="2.安装过程"></a>2.安装过程</h3><h4 id="①BIOS-设置"><a href="#①BIOS-设置" class="headerlink" title="①BIOS 设置"></a>①BIOS 设置</h4><ul><li>重启电脑，按 <code>F12</code>。</li><li>进入 BIOS 设置后，如下图操作。</li></ul><p><img src="7.jpg" alt="Alt text"><br><img src="8.jpg" alt="Alt text"><br><img src="9.jpg" alt="Alt text"><br><img src="10.jpg" alt="Alt text"></p><ul><li>然后插入U盘，保存设置并退出，电脑会自动重启。</li><li>继续按 <code>F12</code>，选择如何启动电脑。</li></ul><p><img src="11.jpg" alt="Alt text"><br><img src="12.jpg" alt="Alt text"></p><h4 id="②进入-Ubuntu"><a href="#②进入-Ubuntu" class="headerlink" title="②进入 Ubuntu"></a>②进入 Ubuntu</h4><p><img src="13.jpg" alt="Alt text"><br><img src="14.jpg" alt="Alt text"><br><img src="15.jpg" alt="Alt text"></p><ul><li><strong>每次选择空闲设备中内存最大的设备——用于设置分区(四个分区)。</strong><br>| /：存储系统文件。<br>| swap：交换分区。<br>| /boot：包含系统内核和系统启动文件。<br>| /home：存放文件。</li></ul><p><img src="16.jpg" alt="Alt text"><br><img src="17.jpg" alt="Alt text"><br><img src="18.jpg" alt="Alt text"><br><img src="19.jpg" alt="Alt text"></p><ul><li>然后将剩余空间全部用于创建 home 分区<br>| 类型：逻辑分区。<br>| 用于：Ext4 日志文件系统。<br>| 挂载点：/home。 </li><li>分区效果图：</li></ul><p><img src="20.jpg" alt="Alt text"></p><ul><li>最后设置时区、注册账号、重启电脑，即可完成安装。</li></ul><hr><h3 id="3-问题总结"><a href="#3-问题总结" class="headerlink" title="3.问题总结"></a>3.问题总结</h3><h4 id="①系统时间不同步"><a href="#①系统时间不同步" class="headerlink" title="①系统时间不同步"></a>①系统时间不同步</h4><ul><li>修改 Linux 系统时间：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 安装ntpdate。</span><br><span class="line">sudo apt-get install ntpdate</span><br><span class="line"># 校准时间。</span><br><span class="line">sudo ntpdate time.windows.com</span><br><span class="line"># 将时间更新到硬件上。</span><br><span class="line">sudo hwclock --localtime --systohc</span><br></pre></td></tr></table></figure><ul><li>修改 win 系统时间：<br><a href="https://jingyan.baidu.com/article/60ccbcebbb041b64cab19730.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/60ccbcebbb041b64cab19730.html</a></li></ul><h4 id="②WIFI-无法开启"><a href="#②WIFI-无法开启" class="headerlink" title="②WIFI 无法开启"></a>②WIFI 无法开启</h4><ul><li><strong>如图：优先级较前的 ideapad_wlan 的 Hard blocked 默认为 yes，说明 Ubuntu 默认关闭了硬件 wifi 开关，我们需要将这个模块移除，以便使用序号 3 模块(wifi 开关是打开的)。</strong></li></ul><p><img src="21.jpg" alt="Alt text"></p><blockquote><p><strong>注意：每次重启 Ubuntu 系统都要重新将第一个模块移除。</strong></p></blockquote><h4 id="③Linux-无法关机-重启"><a href="#③Linux-无法关机-重启" class="headerlink" title="③Linux 无法关机/重启"></a>③Linux 无法关机/重启</h4><ul><li>进入 <code>软件和更新</code>，选择 <code>附加驱动</code>，安装 NVDIA 专用驱动即可。</li></ul><p><img src="22.jpg" alt="Alt text"></p><h4 id="④分区详解"><a href="#④分区详解" class="headerlink" title="④分区详解"></a>④分区详解</h4><ul><li><a href="https://blog.csdn.net/cl_cjh/article/details/69396906" target="_blank" rel="noopener">https://blog.csdn.net/cl_cjh/article/details/69396906</a></li></ul><h4 id="⑤误删-win10-引导"><a href="#⑤误删-win10-引导" class="headerlink" title="⑤误删 win10 引导"></a>⑤误删 win10 引导</h4><ul><li>用快启动 pe 修复 win10 系统引导：<br><a href="https://blog.csdn.net/jessical1020/article/details/72933056" target="_blank" rel="noopener">https://blog.csdn.net/jessical1020/article/details/72933056</a></li></ul><hr><h3 id="4-参考博客"><a href="#4-参考博客" class="headerlink" title="4.参考博客"></a>4.参考博客</h3><ul><li>安装教程：<br><a href="https://blog.csdn.net/lipengfei0427/article/details/83116527" target="_blank" rel="noopener">https://blog.csdn.net/lipengfei0427/article/details/83116527</a><br><a href="http://tieba.baidu.com/p/5276785632" target="_blank" rel="noopener">http://tieba.baidu.com/p/5276785632</a></li><li>更改系统时间：<br><a href="https://blog.csdn.net/hansion3333/article/details/60469583" target="_blank" rel="noopener">https://blog.csdn.net/hansion3333/article/details/60469583</a></li><li>WIFI 无法开启：<br><a href="https://www.linuxidc.com/Linux/2015-04/116077.htm" target="_blank" rel="noopener">https://www.linuxidc.com/Linux/2015-04/116077.htm</a></li></ul><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#119;&#x6a;&#121;&#x6d;&#x65;&#115;&#x73;&#x69;&#64;&#x31;&#x36;&#51;&#x2e;&#x63;&#x6f;&#109;" target="_blank" rel="noopener">&#119;&#x6a;&#121;&#x6d;&#x65;&#115;&#x73;&#x69;&#64;&#x31;&#x36;&#51;&#x2e;&#x63;&#x6f;&#109;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-准备工作&quot;&gt;&lt;a href=&quot;#1-准备工作&quot; class=&quot;headerlink&quot; title=&quot;1.准备工作&quot;&gt;&lt;/a&gt;1.准备工作&lt;/h3&gt;&lt;h4 id=&quot;①下载-Ubuntu-18-04-2-LTS&quot;&gt;&lt;a href=&quot;#①下载-Ubuntu-18-0
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://messi1002.top/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="http://messi1002.top/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>初识微信公众号开发</title>
    <link href="http://messi1002.top/2019/03/19/%E5%88%9D%E8%AF%86%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91/"/>
    <id>http://messi1002.top/2019/03/19/初识微信公众号开发/</id>
    <published>2019-03-19T03:12:28.000Z</published>
    <updated>2019-09-07T03:28:17.876Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-了解微信公众号"><a href="#1-了解微信公众号" class="headerlink" title="1.了解微信公众号"></a>1.了解微信公众号</h3><h4 id="①明确概念"><a href="#①明确概念" class="headerlink" title="①明确概念"></a>①明确概念</h4><ul><li>公众号与微信聊天的区别    </li><li>公众号类型介绍<br>| 企业号：消息出现在<strong>好友会话列表首层</strong>、每分钟最多群发 200 条消息、<strong>通讯录关注</strong>、<strong>支持保密消息</strong>。<br>| 服务号：消息出现在<strong>好友会话列表首层</strong>、<strong>每周最多群发一条消息</strong>、查找关注。<br>| 订阅号：<strong>支持个人申请</strong>、<strong>每天最多群发一条消息</strong>、查找关注、不支持高级接口权限。</li></ul><blockquote><p>以下内容，<strong>仅针对订阅号。</strong></p></blockquote><h4 id="②申请公众号"><a href="#②申请公众号" class="headerlink" title="②申请公众号"></a>②申请公众号</h4><ul><li>注册地址：<a href="https://mp.weixin.qq.com" target="_blank" rel="noopener">微信公众平台</a></li></ul><blockquote><p>微信公众平台是腾讯<strong>为了让用户申请和管理微信公众账号而推出的一个 web 平台。</strong> </p></blockquote><ul><li>登记信息</li><li>填写<strong>账号名称</strong>和<strong>功能介绍</strong></li><li>个性化公众号</li></ul><h4 id="③功能模块"><a href="#③功能模块" class="headerlink" title="③功能模块"></a>③功能模块</h4><ul><li>可群发文字、图片、语音、视频或图文消息(每天 1 条)</li><li>自动回复<br>| 被添加自动回复<br>| 固定自动回复(每小时提示一次)<br>| <strong>关键词自动回复(灵活)</strong></li><li>自定义菜单<br>| 最多三个 1 级菜单<br>| 最多五个 2 级菜单</li><li>投票功能(文章中加入)</li><li>…</li></ul><h4 id="④管理模块"><a href="#④管理模块" class="headerlink" title="④管理模块"></a>④管理模块</h4><ul><li>消息管理(回复消息)</li><li>用户管理(管理已关注的用户)</li><li>素材管理(保存公众号的群发内容)    </li></ul><h4 id="⑤编辑模式"><a href="#⑤编辑模式" class="headerlink" title="⑤编辑模式"></a>⑤编辑模式</h4><blockquote><p>微信公众号开发的模式之一——编辑模式。</p></blockquote><ul><li><strong>所谓编辑模式 就是在官网网页上操作基本功能</strong></li><li>添加被关注自动回复        </li></ul><p>&emsp; <img src="1.jpg" alt="Alt text"></p><ul><li>根据服务功能设置关键字回复(关注中英文差异)</li></ul><p>&emsp; <img src="2.jpg" alt="Alt text"></p><ul><li>素材管理<br>| 单图文消息可显示摘要，多图文消息只显示标题。<br>| 如下为多图文消息：</li></ul><p>&emsp; <img src="3.jpg" alt="Alt text"></p><ul><li>自定义菜单<br>| <strong>click 类型(发送消息)</strong><br>| <strong>view 类型(跳转到网页)</strong></li></ul><p>&emsp; <img src="4.jpg" alt="Alt text"><br>&emsp; <img src="5.jpg" alt="Alt text"></p><ul><li>群发消息(每天 1 次)</li></ul><hr><h3 id="2-开发前奏"><a href="#2-开发前奏" class="headerlink" title="2.开发前奏"></a>2.开发前奏</h3><h4 id="①开发准备"><a href="#①开发准备" class="headerlink" title="①开发准备"></a>①开发准备</h4><blockquote><p>开发环境下，要想与微信后台对接，需要在公网上访问本机服务器 URL 地址(只能使用 80 端口 / 443 端口)。因此，需要<strong>用映射工具将本机地址映射到公网上。</strong></p></blockquote><ul><li>一个微信公众号</li><li><strong>外网映射工具(开发调试)</strong></li></ul><h4 id="②映射工具"><a href="#②映射工具" class="headerlink" title="②映射工具"></a>②映射工具</h4><ul><li>ngrok：服务器在国外、访问速度慢、每次映射地址不同(现在国内有很多使用它的方法)。</li><li>tunnel：部署在国内、支持 ngrok 的绝大数功能(现在不可用)。</li><li><strong>正在使用 NATAPP.cn，教程见<a href="https://blog.csdn.net/qq_41979043/article/details/84839368" target="_blank" rel="noopener">用NATAPP进行微信本地开发调试</a>—1</strong>。</li></ul><h4 id="③访问模式"><a href="#③访问模式" class="headerlink" title="③访问模式"></a>③访问模式</h4><blockquote><p>映射成功后，使用以下格式进行公网访问。</p></blockquote><ul><li>本地访问：<a href="http://localhost:8080/Test/index.jsp" target="_blank" rel="noopener">http://localhost:8080/Test/index.jsp</a></li><li>对应的公网访问：<strong>(映射公网)/Test/index.jsp</strong></li></ul><hr><h3 id="3-开发模式"><a href="#3-开发模式" class="headerlink" title="3.开发模式"></a>3.开发模式</h3><blockquote><p><strong>微信公众号开发的模式之一——开发模式。</strong><br><strong>注意：开发模式和编辑模式是互斥关系，两者的设置不共存。</strong><br>只能使用一种模式，选择之后公众号会应用该模式的所有设置。</p></blockquote><h4 id="①数据交互原理"><a href="#①数据交互原理" class="headerlink" title="①数据交互原理"></a>①数据交互原理</h4><ul><li>如下所示：</li></ul><p>&emsp; <img src="6.jpg" alt="Alt text"></p><blockquote><p><strong>其中，微信公众号服务器就是我们在开发模式下需要开发的内容。</strong></p></blockquote><h4 id="②开发模式接入"><a href="#②开发模式接入" class="headerlink" title="②开发模式接入"></a>②开发模式接入</h4><ul><li>具体操作参见：<strong><a href="https://blog.csdn.net/qq_41979043/article/details/84839368" target="_blank" rel="noopener">用NATAPP进行微信本地开发调试</a>—2</strong></li><li>通过之前的操作 我们已经进入了开发模式</li><li><strong>启用了开发模式 编辑模式的设置会自动失效</strong><br>| 此时编辑模式下的自动回复和菜单栏都跑了。</li></ul><p>&emsp; <img src="7.jpg" alt="Alt text"></p><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#x77;&#x6a;&#121;&#109;&#101;&#115;&#115;&#105;&#64;&#x31;&#54;&#51;&#46;&#x63;&#111;&#x6d;" target="_blank" rel="noopener">&#x77;&#x6a;&#121;&#109;&#101;&#115;&#115;&#105;&#64;&#x31;&#54;&#51;&#46;&#x63;&#111;&#x6d;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-了解微信公众号&quot;&gt;&lt;a href=&quot;#1-了解微信公众号&quot; class=&quot;headerlink&quot; title=&quot;1.了解微信公众号&quot;&gt;&lt;/a&gt;1.了解微信公众号&lt;/h3&gt;&lt;h4 id=&quot;①明确概念&quot;&gt;&lt;a href=&quot;#①明确概念&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="微信开发" scheme="http://messi1002.top/categories/%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="微信公众号" scheme="http://messi1002.top/tags/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>用NATAPP进行微信本地开发调试</title>
    <link href="http://messi1002.top/2019/03/11/%E7%94%A8NATAPP%E8%BF%9B%E8%A1%8C%E5%BE%AE%E4%BF%A1%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95/"/>
    <id>http://messi1002.top/2019/03/11/用NATAPP进行微信本地开发调试/</id>
    <published>2019-03-11T06:43:43.000Z</published>
    <updated>2019-09-07T03:28:06.064Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>开发环境下，要想与微信后台对接，需要在公网上访问本机服务器 URL 地址(只能使用 80 端口 / 443 端口)。因此，需要<strong>用映射工具将本机地址映射到公网上。</strong></p></blockquote><h3 id="1-使用NATAPP"><a href="#1-使用NATAPP" class="headerlink" title="1.使用NATAPP"></a>1.使用NATAPP</h3><h4 id="①购买隧道"><a href="#①购买隧道" class="headerlink" title="①购买隧道"></a>①购买隧道</h4><ul><li>地址：<a href="https://natapp.cn/" target="_blank" rel="noopener">https://natapp.cn/</a></li><li>注册之后 点击 <code>登录</code> 然后购买隧道<br>| <strong>注意：免费隧道在每次启动窗口时都会更换映射地址。</strong></li></ul><p>&emsp;&emsp; <img src="1.jpg" alt="Alt text"></p><ul><li>填写 <strong>80</strong> 端口 / <strong>443</strong> 端口<strong>(微信仅支持这两个端口号)</strong></li></ul><p>&emsp;&emsp; <img src="2.jpg" alt="Alt text"></p><ul><li>然后进入刚刚购买的隧道 记住你的 <code>authtoken</code></li></ul><h4 id="②映射"><a href="#②映射" class="headerlink" title="②映射"></a>②映射</h4><ul><li>下载客户端</li></ul><p>&emsp;&emsp; <img src="3.jpg" alt="Alt text"></p><ul><li>新建一个 <code>config.ini</code> 文件 内容如下<br>| 将 <code>authtoken</code> 字段的值修改为刚刚购买的隧道的 <code>authtoken</code>。</li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将本文件放置于natapp同级目录,程序将读取[default]段。</span></span><br><span class="line"><span class="comment">#在命令行参数模式如 natapp -authtoken=xxx 等相同参数将会覆盖掉此配置。</span></span><br><span class="line"><span class="section">[default]</span></span><br><span class="line"><span class="attr">authtoken</span>=你的authtoken      <span class="comment">#对应一条隧道的authtoken。</span></span><br><span class="line"><span class="attr">clienttoken</span>=                <span class="comment">#对应客户端的clienttoken,将会忽略authtoken,若无请留空。</span></span><br><span class="line"><span class="attr">log</span>=none <span class="comment">#log 日志文件,可指定本地文件,none=不做记录,stdout=直接屏幕输出,默认为none。</span></span><br><span class="line"><span class="attr">loglevel</span>=ERROR              <span class="comment">#日志等级DEBUG,INFO,WARNING,ERROR默认为DEBUG。</span></span><br><span class="line"><span class="attr">http_proxy</span>=                 <span class="comment">#代理设置 如 http://10.123.10.10:3128 非代理上网用户,请务必留空。</span></span><br></pre></td></tr></table></figure><ul><li>将客户端程序和 <code>config.ini</code> 文件放入同一个文件夹中</li><li><strong>启动命令行 进入该文件夹 输入 <code>natapp -authtoken=你的authtoken</code> 即可得到如下结果</strong></li></ul><p>&emsp;&emsp; <img src="4.jpg" alt="Alt text"></p><blockquote><p><strong>再注意！！对于免费隧道来说，每次启动 <code>natapp.exe</code> 进行映射时，其外网映射地址都会改变。</strong></p></blockquote><h4 id="③映射测试"><a href="#③映射测试" class="headerlink" title="③映射测试"></a>③映射测试</h4><ul><li><strong>将工程的 <code>Tomcat</code> 端口号改为 80 端口或 443 端口(对应隧道的端口号)</strong><br>| 在 Spring Boot 工程中，按照以下方式修改：</li></ul><p>&emsp;&emsp; <img src="5.jpg" alt="Alt text"></p><p>&emsp;&emsp; | 其他工程的修改方式：</p><p>&emsp;&emsp; <img src="6.jpg" alt="Alt text"></p><blockquote><p><strong>若此时访问 <code>127.0.0.1:80(或localhost:80)</code> 和访问 <code>映射外网:80</code> 是同一个效果，说明映射成功！</strong></p></blockquote><hr><h3 id="2-微信开发者模式接入"><a href="#2-微信开发者模式接入" class="headerlink" title="2.微信开发者模式接入"></a>2.微信开发者模式接入</h3><h4 id="①填写服务器配置"><a href="#①填写服务器配置" class="headerlink" title="①填写服务器配置"></a>①填写服务器配置</h4><ul><li><strong>服务器地址 <code>URL</code>：<code>所映射的外网地址</code> / <code>工程校验代码的访问地址</code></strong>。<br>| 如： <a href="http://qc95we.natappfree.cc/weixinA。" target="_blank" rel="noopener">http://qc95we.natappfree.cc/weixinA。</a></li><li>Token：开发者随意填写 在接入认证时生成一个签名。<br>| 需要在校验代码中定义一个字符串名为 Token，此字符串值对应所填写内容，具体看下文。</li></ul><h4 id="②验证服务器地址的有效性"><a href="#②验证服务器地址的有效性" class="headerlink" title="②验证服务器地址的有效性"></a>②验证服务器地址的有效性</h4><ul><li><strong>开发者提交信息后，微信服务器会发送 GET 请求到填写的服务器地址 URL 上，GET 请求携带以下四个参数。</strong> <table><thead><tr><th>&emsp;&emsp; signature</th><th align="right">微信加密签名</th></tr></thead><tbody><tr><td>&emsp;&emsp; timestamp</td><td align="right">时间戳</td></tr><tr><td>&emsp;&emsp; nonce</td><td align="right">随机数</td></tr><tr><td>&emsp;&emsp; echostr</td><td align="right">随机字符串</td></tr></tbody></table></li><li><strong>需要开发者将 token、timestamp、nonce 这三个参数进行排序，再拼接成字符串并对其进行  sha1 加密，再将加密后的字符串与微信加密签名( signature )进行对比，两个字符串相同时(可标识该 GET 请求来自微信服务器)返回 echostr 参数内容，此时开发者接入成功。</strong></li></ul><h4 id="③具体代码"><a href="#③具体代码" class="headerlink" title="③具体代码"></a>③具体代码</h4><blockquote><p>我在 Spring Boot 工程中配置了 Servlet 校验代码。如果你不想在 Spring Boot 工程中测试，可以在其他 web 应用的 <code>web.xml</code> 文件中自行配置 Servlet。只是配置文件不同，校验代码都相同。</p></blockquote><ul><li>工程目录结构如下：</li></ul><p>&emsp;&emsp; <img src="7.jpg" alt="Alt text"></p><ul><li>附上我的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springbootdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springbootdemo.util.CheckUtil;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2018/12/4 20:56</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 获得参数。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeixinServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        PrintWriter out = response.getWriter();</span><br><span class="line"></span><br><span class="line">        String echostr = request.getParameter(<span class="string">"echostr"</span>);</span><br><span class="line">        String signature = request.getParameter(<span class="string">"signature"</span>);</span><br><span class="line">        String timestamp = request.getParameter(<span class="string">"timestamp"</span>);</span><br><span class="line">        String nonce = request.getParameter(<span class="string">"nonce"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (CheckUtil.check(timestamp, nonce, signature) == <span class="keyword">true</span>)</span><br><span class="line">            out.print(echostr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"><span class="keyword">package</span> com.example.springbootdemo.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2018/12/4 21:57</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 开发者校验。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String token = <span class="string">"weixinAAAA"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 按照微信公众号平台要求校验。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">check</span><span class="params">(String timestamp, String nonce, String signature)</span> </span>&#123;</span><br><span class="line">        String[] string = <span class="keyword">new</span> String[]&#123;timestamp, nonce, token&#125;;</span><br><span class="line">        String s = <span class="keyword">new</span> String();</span><br><span class="line">        String encrypt = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        Arrays.sort(string);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; string.length; i++)</span><br><span class="line">            s += string[i];</span><br><span class="line"></span><br><span class="line">        encrypt = getSha1(s);</span><br><span class="line">        System.out.println(encrypt);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (encrypt.equals(signature))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 加密。 </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getSha1</span><span class="params">(String decript)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(decript == <span class="keyword">null</span> | decript .length() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">      </span><br><span class="line">        <span class="keyword">char</span> hexDigits[] = &#123;<span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>,</span><br><span class="line">                <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>&#125;;</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            MessageDigest mdTemp = MessageDigest.getInstance(<span class="string">"SHA1"</span>);</span><br><span class="line">            mdTemp.update(decript.getBytes(<span class="string">"UTF-8"</span>));</span><br><span class="line">            <span class="keyword">byte</span>[] md = mdTemp.digest();</span><br><span class="line">            <span class="keyword">int</span> j = md.length, k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">char</span> buf[] = <span class="keyword">new</span> <span class="keyword">char</span>[j*<span class="number">2</span>];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; j; i++) &#123;</span><br><span class="line">                <span class="keyword">byte</span> byte0 = md[i];</span><br><span class="line">                buf[k++] = hexDigits[byte0 &gt;&gt;&gt; <span class="number">4</span> &amp; <span class="number">0xf</span>];</span><br><span class="line">                buf[k++] = hexDigits[byte0 &amp; <span class="number">0xf</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> String(buf);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"><span class="keyword">package</span> com.example.springbootdemo.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springbootdemo.config.WeixinServlet;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.ServletRegistrationBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.support.SpringBootServletInitializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: wjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2018/12/4 21:33</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: SpringBoot中的Servlet配置。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletConfig</span> <span class="keyword">extends</span> <span class="title">SpringBootServletInitializer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ServletConfig.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> SpringApplicationBuilder <span class="title">configure</span><span class="params">(SpringApplicationBuilder application)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> application.sources(ServletConfig.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 注册Servlet。</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletRegistrationBean <span class="title">wexinA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ServletRegistrationBean(<span class="keyword">new</span> WeixinServlet(), <span class="string">"/weixinA"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="④映射调试"><a href="#④映射调试" class="headerlink" title="④映射调试"></a>④映射调试</h4><ul><li>此时可通过 <code>映射地址/wenxinA 或 localhost:80/weixinA</code> 访问这个 Servlet<br>| 注意：因为访问此校验代码需要传入四个参数，所以如下直接访问时，控制台报出的空指针异常，不是配置的问题！！</li></ul><p>&emsp;&emsp; <img src="8.jpg" alt="Alt text"><br>&emsp;&emsp; <img src="9.jpg" alt="Alt text"></p><ul><li><strong>将可以访问 Servlet 的 URL 配置到微信公共平台的服务器 URL 一栏</strong></li><li><strong>最后再填写 <code>Token</code> 对应的值</strong><br>| 我的校验代码中，<code>Token</code> 字符串的值为 <strong>wenxinAAAA</strong>。</li></ul><p>&emsp; <img src="10.jpg" alt="Alt text"></p><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#x77;&#106;&#x79;&#109;&#x65;&#115;&#x73;&#105;&#x40;&#x31;&#x36;&#x33;&#46;&#99;&#x6f;&#x6d;" target="_blank" rel="noopener">&#x77;&#106;&#x79;&#109;&#x65;&#115;&#x73;&#105;&#x40;&#x31;&#x36;&#x33;&#46;&#99;&#x6f;&#x6d;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;开发环境下，要想与微信后台对接，需要在公网上访问本机服务器 URL 地址(只能使用 80 端口 / 443 端口)。因此，需要&lt;strong&gt;用映射工具将本机地址映射到公网上。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;
      
    
    </summary>
    
    
      <category term="微信开发" scheme="http://messi1002.top/categories/%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="外网映射——NATAPP" scheme="http://messi1002.top/tags/%E5%A4%96%E7%BD%91%E6%98%A0%E5%B0%84%E2%80%94%E2%80%94NATAPP/"/>
    
  </entry>
  
  <entry>
    <title>C语言常用库函数整理</title>
    <link href="http://messi1002.top/2019/02/20/C%E8%AF%AD%E8%A8%80%E5%B8%B8%E7%94%A8%E5%BA%93%E5%87%BD%E6%95%B0%E6%95%B4%E7%90%86/"/>
    <id>http://messi1002.top/2019/02/20/C语言常用库函数整理/</id>
    <published>2019-02-19T17:12:55.000Z</published>
    <updated>2019-09-07T03:31:05.550Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>PS：<code>include</code> 称为文件包含命令，即它把 <code>&lt; &gt;</code> 或 <code>&quot; &quot;</code> 内指定的文件包含到程序中。被包含的(头)文件通常是由系统提供的，其扩展名为 <code>.h</code>。<br>如下介绍了 stdio.h、stdlib.h、string.h、math.h 等系统提供的文件。</p></blockquote><h3 id="1-stdio-h"><a href="#1-stdio-h" class="headerlink" title="1.stdio.h"></a>1.stdio.h</h3><blockquote><p>标准 I/O 库。</p></blockquote><ul><li>int scanf(char *format, args, …)：按 format 指定的格式将输入数据存入到 args，… 指定的内存中(<strong>读取到空格就停止</strong>)。</li><li>int printf(char *format, args, …)：将 args，… 的值以 format 指定的格式输出。</li><li>char <em>gets(char \</em>str)：从标准输入中读取一行，并把它存储在 str 所指向的字符串中(<strong>读取到换行符或者到达文件末尾时停止，读取到空格不停止</strong>)。</li><li>int getchar(void)：从标准输入中读取下一个字符。<br>| 如果没有错误发生，返回相同的字符，如果碰到文件结尾或者有错误发生，则返回 EOF。</li><li>int putchar(int character)：将字符输出到标准输出中。<br>| 如果没有错误发生，返回相同的字符，如果有错误发生，则返回 EOF。</li><li><strong>int sprintf(char *str, const char *format, …)：格式化输出到 str 所指向的字符串。</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">char</span>* s1 = <span class="string">"abc"</span>;</span><br><span class="line"><span class="keyword">char</span>* s2;</span><br><span class="line"><span class="built_in">sprintf</span>(s2, <span class="string">"%d %s"</span>, a, s1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, s2); <span class="comment">// 123 abc。</span></span><br></pre></td></tr></table></figure><ul><li>宏 <code>EOF</code> 是一个负整数，通常在有函数调用错误或者碰到文件结尾时返回。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断是否到达输入流末尾。</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, %num) != EOF) &#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="2-stdlib-h"><a href="#2-stdlib-h" class="headerlink" title="2.stdlib.h"></a>2.stdlib.h</h3><h4 id="①分配空间"><a href="#①分配空间" class="headerlink" title="①分配空间"></a>①分配空间</h4><ul><li>void *calloc(unsigned n, unsigned size)：分配所需的内存空间，并返回一个指向它的指针。</li><li><strong>void *malloc(unsigned size)：分配所需的内存空间，并返回一个指向它的指针。</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如: 向系统申请分配100个int型的连续内存空间。</span></span><br><span class="line"><span class="comment">// 并返回所分配的内存空间的首地址。</span></span><br><span class="line"><span class="keyword">int</span>* <span class="built_in">array</span> = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*<span class="number">100</span>); </span><br><span class="line"><span class="keyword">int</span>* <span class="built_in">array</span> = <span class="built_in">calloc</span>(<span class="number">100</span>, <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br></pre></td></tr></table></figure><ul><li>void *realloc(void *ptr, unsigned size)：重新调整之前调用 malloc 或 calloc 所分配的内存块的大小(其中 ptr 为指向内存块的指针)。</li><li>void free(void *ptr)：释放调用 calloc、malloc 或 realloc 所分配的内存空间(即释放 ptr 指针所指向的内存空间)。</li></ul><h4 id="②算法相关"><a href="#②算法相关" class="headerlink" title="②算法相关"></a>②算法相关</h4><ul><li><strong>执行快速排序：</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 主函数外声明一个compare函数，决定升序/降序。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* a, <span class="keyword">const</span> <span class="keyword">void</span>* b)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 升序。</span></span><br><span class="line">    <span class="keyword">return</span> (*(待排元素类型*)a) -/&gt; (*(待排元素类型*)b); </span><br><span class="line">    <span class="comment">// 降序。</span></span><br><span class="line">    <span class="keyword">return</span> (*(待排元素类型*)b) -/&gt; (*(待排元素类型*)a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主函数内调用快排函数，进行快速排序。</span></span><br><span class="line">qsort(待排数组首地址, 待排元素总个数, <span class="keyword">sizeof</span>(待排元素类型), compare(函数，决定升序/降序));</span><br></pre></td></tr></table></figure><ul><li><strong>执行二分查找：</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 主函数外声明一个compare函数，决定升序/降序。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* a, <span class="keyword">const</span> <span class="keyword">void</span>* b)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 升序。</span></span><br><span class="line">    <span class="keyword">return</span> (*(待排元素类型*)a) -/&gt; (*(待排元素类型*)b); </span><br><span class="line">    <span class="comment">// 降序。</span></span><br><span class="line">    <span class="keyword">return</span> (*(待排元素类型*)b) -/&gt; (*(待排元素类型*)a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主函数内调用二分查找函数，查找某个元素。</span></span><br><span class="line"><span class="keyword">int</span>* ptr;</span><br><span class="line">ptr = (<span class="keyword">int</span>*)bsearch(指向要查找元素的指针, 待查数组首地址, 待查数组的元素总个数, <span class="keyword">sizeof</span>(待排元素类型),  compare(函数，决定升序/降序));</span><br></pre></td></tr></table></figure><p><strong>如果查找成功，则返回一个指向数组中匹配元素的指针，否则返回空指针。</strong></p><h4 id="③其他"><a href="#③其他" class="headerlink" title="③其他"></a>③其他</h4><ul><li><strong>int rand(void)：返回一个范围在 0 - RAND_MAX(32767) 之间的伪随机数。</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回[0-10)之间的随机数。</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, rand()%<span class="number">10</span>);</span><br><span class="line"><span class="comment">// 返回[20-30)之间的随机数。</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, rand()%<span class="number">10</span>+<span class="number">20</span>);</span><br><span class="line"><span class="comment">// 返回[m,n)范围内的随机数num，可用：</span></span><br><span class="line">prinrf(<span class="string">"%d"</span>, rand()%(n-m)+m);</span><br></pre></td></tr></table></figure><ul><li><strong>int abs(int x)：求整数 x 的绝对值。</strong></li><li><strong>long int labs(long int x)：返回长整型 x 的绝对值。</strong></li><li><strong>int atoi(const char *str)：把参数 str 所指向的字符串转换为一个 int 型整数。</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span>* s = <span class="string">"521 abc"</span>;</span><br><span class="line"><span class="keyword">int</span> a = atoi(s);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, a); <span class="comment">// 521。</span></span><br></pre></td></tr></table></figure><ul><li>double atof(const char *str)：把参数 str 所指向的字符串转换为一个 double 型浮点数。</li><li>long int atol(const char *str)：把参数 str 所指向的字符串转换为一个 long int 型长整数。</li><li>void exit(int status)：使一个程序正常终止(status 为 0)，或非正常终止(status 为 1)。</li><li>void abort(void)：使一个异常程序终止。</li></ul><h4 id="④库宏"><a href="#④库宏" class="headerlink" title="④库宏"></a>④库宏</h4><p><strong>RAND_MAX： rand 函数返回的最大值。</strong><br><strong>NULL：是一个空指针常量的值。</strong></p><blockquote><p><strong>NULL</strong>——<code>stdio.h</code>、<code>string.h</code> 头文件中也有此宏。</p></blockquote><hr><h3 id="3-string-h"><a href="#3-string-h" class="headerlink" title="3.string.h"></a>3.string.h</h3><blockquote><p><code>string.h</code> 头文件定义了各种操作字符数组的函数。</p></blockquote><ul><li>int strcmp(const char *str1, const char *str2)：把 str1 所指向的字符串和 str2 所指向的字符串进行比较。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> strcmp()函数会按照ASCII码顺序比较两个字符串，并由函数返回值返回比较结果。</span></span><br><span class="line"><span class="comment"> 字符串1 ＝ 字符串2，返回值 ＝ 0。 </span></span><br><span class="line"><span class="comment"> 字符串2 &gt; 字符串2，返回值 &gt; 0。</span></span><br><span class="line"><span class="comment"> 字符串1 &lt; 字符串2，返回值 &lt; 0。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">char</span>* s1 = <span class="string">"asd"</span>;</span><br><span class="line"><span class="keyword">char</span>* s2 = <span class="string">"asd"</span>;</span><br><span class="line"><span class="comment">// 两字符串相等，返回1，否则，返回0。</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(s1, s2) == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><ul><li>size_t strlen(const char *str)：计算字符串 str 的长度。</li><li>char *strcpy(char *dest, const char *src)：把 src 所指向的字符串复制到 dest。</li><li>char *strcat(char *dest, const char *src)：把 src 所指向的字符串追加到 dest 所指向的字符串的结尾。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注意: 以下代码会出现错误。</span></span><br><span class="line"><span class="keyword">char</span>* s = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>)*<span class="number">10</span>);</span><br><span class="line"><span class="keyword">char</span> arr[<span class="number">5</span>] = <span class="string">"abcde"</span>;</span><br><span class="line"><span class="built_in">strcat</span>(s, arr);<span class="comment">// ×，必须给s赋初值，再使用此函数。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确操作。</span></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">5</span>] = <span class="string">"aaaaa"</span>;</span><br><span class="line"><span class="keyword">char</span> arr[<span class="number">5</span>] = <span class="string">"bbbbb"</span>;</span><br><span class="line"><span class="built_in">strcat</span>(s, arr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, s);<span class="comment">// aaaaabbbbb。</span></span><br></pre></td></tr></table></figure><ul><li><strong>void *memcpy(void *str1, const void *str2, size_t n)：从存储区 str2 复制 n 个字符到存储区 str1。</strong><br>| 返回一个指向目标存储区 str1 的指针。</li><li>char *strtok(char *str, const char *delim)：分解字符串 str，其中 delim 为分隔符。<br>| str — 要被分解的字符串。<br>| delim — 包含分隔符的 C 字符串。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">15</span>] = <span class="string">"I am so cold"</span>;</span><br><span class="line">    <span class="keyword">char</span>** arr = (<span class="keyword">char</span>**)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>*)*<span class="number">4</span>); </span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    arr[i] = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>)*<span class="number">5</span>);</span><br><span class="line">    arr[i] = strtok(s, <span class="string">" "</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    输出:</span></span><br><span class="line"><span class="comment">    I</span></span><br><span class="line"><span class="comment">    am</span></span><br><span class="line"><span class="comment">    so</span></span><br><span class="line"><span class="comment">    cold </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">while</span> (arr[i] != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, arr[i]);</span><br><span class="line">        i++;</span><br><span class="line">        arr[i] = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>)*<span class="number">5</span>);</span><br><span class="line">        arr[i] = strtok(<span class="literal">NULL</span>, <span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="4-math-h"><a href="#4-math-h" class="headerlink" title="4.math.h"></a>4.math.h</h3><blockquote><p><code>math.h</code> 头文件定义了各种数学函数，此库中所有函数都带有一个 double 类型的参数，且都返回 double 类型的结果。</p></blockquote><h4 id="①普通数字处理"><a href="#①普通数字处理" class="headerlink" title="①普通数字处理"></a>①普通数字处理</h4><ul><li>double fabs(double x)：求浮点数 x 的绝对值。</li><li><strong>double sqrt(double x)：计算 x 的平方根。</strong></li><li><strong>double pow(double x, double y)：计算 x 的 y 次幂。</strong></li><li>double fmod (double x, double y)：返回 x / y 的余数。</li><li>double exp(double x)：求 e 的 x 次幂，e = 2.718281828。</li><li>double log(double x)：计算 x 的自然对数，即 e 为底数，x 的值应大于零。</li><li>double log10(double x)：计算 x 的常用对数，即 10 为底数，x 的值应大于零。 </li><li>double floor(double x)：求不大于 x 的最大整数。<br>| 返回 x 的下限，如 74.12 的下限为 74，-74.12 的下限为 -75，返回值为 double 类型。</li><li>double ceil(double x)：求不小于 x 的最小整数。<br>| 返回 x 的上限，如 74.12 的上限为 75，-74.12 的上限为 -74，返回值为 double 类型。</li></ul><h4 id="②三角函数"><a href="#②三角函数" class="headerlink" title="②三角函数"></a>②三角函数</h4><ul><li>double cos(double x)：求 x (弧度表示)的余弦值。</li><li>double sin(double x)：求 x (弧度表示)的正弦值。 </li><li>double tan(double x)：求 x (弧度表示)的正切值。</li></ul><h4 id="③其他-1"><a href="#③其他-1" class="headerlink" title="③其他"></a>③其他</h4><ul><li>double hypot(double x, double y)：x、y 为直角三角形的两个直角边，返回其斜边的长度。</li><li>double modf(double x, double *ip)：将 x 的整数部分通过指针回传，返回其小数部分，并将整数部分保存在 *ip 中。</li></ul><hr><h3 id="5-ctype-h"><a href="#5-ctype-h" class="headerlink" title="5.ctype.h"></a>5.ctype.h</h3><blockquote><p>如果参数 c 满足函数条件，则如下函数返回非零值(即 true)。如果不满足，则如下函数返回零(即 false)。</p></blockquote><ul><li>int isalnum(int c)：检查所传的字符是否是字母和数字。</li><li>int isalpha(int c)：该函数检查所传的字符是否是字母。</li><li>int islower(int c)：检查所传的字符是否是小写字母。</li><li>int isupper(int c)：检查所传的字符是否是大写字母。</li><li>int isdigit(int c)：检查所传的字符是否是十进制数字。</li><li>int isxdigit(int c)：检查所传的字符是否是十六进制数字。</li><li><strong>int tolower(int c)：把大写字母转换为小写字母。</strong></li><li><strong>int toupper(int c)：把小写字母转换为大写字母。</strong></li></ul><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#119;&#106;&#x79;&#x6d;&#101;&#115;&#x73;&#x69;&#x40;&#x31;&#54;&#51;&#x2e;&#x63;&#111;&#x6d;" target="_blank" rel="noopener">&#119;&#106;&#x79;&#x6d;&#101;&#115;&#x73;&#x69;&#x40;&#x31;&#54;&#51;&#x2e;&#x63;&#111;&#x6d;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;PS：&lt;code&gt;include&lt;/code&gt; 称为文件包含命令，即它把 &lt;code&gt;&amp;lt; &amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;quot; &amp;quot;&lt;/code&gt; 内指定的文件包含到程序中。被包含的(头)文件通常是由系统提供的，其扩展
      
    
    </summary>
    
    
      <category term="C语言" scheme="http://messi1002.top/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C语言库函数" scheme="http://messi1002.top/tags/C%E8%AF%AD%E8%A8%80%E5%BA%93%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>ASC2码</title>
    <link href="http://messi1002.top/2019/02/18/ASC%E2%85%A1%E7%A0%81/"/>
    <id>http://messi1002.top/2019/02/18/ASCⅡ码/</id>
    <published>2019-02-18T12:07:48.000Z</published>
    <updated>2019-09-07T03:30:50.838Z</updated>
    
    <content type="html"><![CDATA[<p>方便用时查看。</p><hr><p><img src="1.jpg" alt="Alt text"><br><img src="2.jpg" alt="Alt text"></p><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#x77;&#106;&#x79;&#109;&#101;&#x73;&#115;&#105;&#64;&#49;&#x36;&#x33;&#x2e;&#x63;&#111;&#x6d;" target="_blank" rel="noopener">&#x77;&#106;&#x79;&#109;&#101;&#x73;&#115;&#105;&#64;&#49;&#x36;&#x33;&#x2e;&#x63;&#111;&#x6d;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;方便用时查看。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;1.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;br&gt;&lt;img src=&quot;2.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;附录&quot;&gt;&lt;a href=&quot;#附录&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="C语言" scheme="http://messi1002.top/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>写给阿根廷</title>
    <link href="http://messi1002.top/2018/11/27/%E5%86%99%E7%BB%99%E9%98%BF%E6%A0%B9%E5%BB%B7/"/>
    <id>http://messi1002.top/2018/11/27/写给阿根廷/</id>
    <published>2018-11-27T15:48:08.000Z</published>
    <updated>2019-09-07T03:17:21.628Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>&emsp;&emsp; 东南 再东南<br>&emsp;&emsp; 穿过太平洋<br>&emsp;&emsp; 五月的太阳<br>&emsp;&emsp; 晴空的蓝 浮云的白</p></blockquote><blockquote><p>&emsp;&emsp; 耶稣山上的圣象<br>&emsp;&emsp; 张开双臂俯视世间万物<br>&emsp;&emsp; …<br>&emsp;&emsp; …</p></blockquote><blockquote><p>&emsp;&emsp; 雄鹰蓦地折断翅膀<br>&emsp;&emsp; 蓝白色海洋陷入死寂<br>&emsp;&emsp; 眼中闪着点点泪光<br>&emsp;&emsp; 蓝白色是不变的信仰</p></blockquote><blockquote><p>&emsp;&emsp; 战车上的残翼<br>&emsp;&emsp; 无法挫伤你的锐气<br>&emsp;&emsp; 潘帕斯雄鹰<br>&emsp;&emsp; 依旧是绿茵场上的传奇<br>&emsp;&emsp;&emsp;&emsp; ——记2014年巴西世界杯 围巾一</p></blockquote><p>&emsp;&emsp; <img src="1.jpg" alt="Alt text"></p><ul><li>重新想起以前写的这首诗，有些片段忘记了，慢慢回忆吧。<br>ps：不管有没有世界杯冠军，你都是当之无愧的球王！</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp; 东南 再东南&lt;br&gt;&amp;emsp;&amp;emsp; 穿过太平洋&lt;br&gt;&amp;emsp;&amp;emsp; 五月的太阳&lt;br&gt;&amp;emsp;&amp;emsp; 晴空的蓝 浮云的白&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
      
    
    </summary>
    
    
      <category term="其他" scheme="http://messi1002.top/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>关于Markdown</title>
    <link href="http://messi1002.top/2018/11/27/%E5%85%B3%E4%BA%8EMarkdown/"/>
    <id>http://messi1002.top/2018/11/27/关于Markdown/</id>
    <published>2018-11-27T14:16:58.000Z</published>
    <updated>2019-09-07T03:30:32.363Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-认识Markdown"><a href="#1-认识Markdown" class="headerlink" title="1.认识Markdown"></a>1.认识Markdown</h3><blockquote><p>Markdown 是一种轻量级标记语言，它允许人们<strong>使用易读易写的纯文本格式编写文档</strong>，然后<strong>转换成格式丰富的 HTML 页面。</strong>   —— <a href="https://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener">维基百科</a></p></blockquote><ul><li>Markdown 的目标是实现<strong>易读易写</strong>。<br>其语法全由一些符号组成，并且符号的作用一目了然。<br>语法目标：成为一种适用于网络的书写语言。<br><strong>它的语法种类很少，只对应于 HTML 标记的一小部分。</strong><br>理念是<strong>能使文档更易读、写和随意更改</strong>。</li><li>一般 Markdown 编译器的左边是编辑区，右边显示的样式是<strong>转换为 HTML 后加上 CSS 样式显示的。</strong></li><li>同理在 Hexo 博客中，Markdown 文章需要解析成 HTML 格式，再输出到网页中。   </li></ul><hr><h3 id="2-Markdown和HTML"><a href="#2-Markdown和HTML" class="headerlink" title="2.Markdown和HTML"></a>2.Markdown和HTML</h3><ul><li>HTML 是一种<strong>发布的格式</strong>。</li><li>Markdown 是<strong>一种书写的格式</strong>，其格式语法<strong>只涵盖纯文本可以涵盖的范围</strong>。</li><li><strong>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里用 HTML 撰写。</strong></li></ul><hr><h3 id="3-特殊字符自动转换"><a href="#3-特殊字符自动转换" class="headerlink" title="3.特殊字符自动转换"></a>3.特殊字符自动转换</h3><h4 id="①HTML中"><a href="#①HTML中" class="headerlink" title="①HTML中"></a>①HTML中</h4><ul><li>在 HTML 文件内，<strong>有些字符需要特殊处理(相当于”转义”)，才能使用。</strong><br>如 <code>&lt;</code> 符号用于起始标签，<code>&amp;</code> 符号用于标记 <code>HTML实体</code> 。<br>要想单纯的显示这两个字符原型，必须要使用实体的形式，即<strong>避免它们被当成标签的一部分。</strong></li><li>字符实体有三部分：一个 <code>&amp;符号</code>、一个 <code>实体名称</code> 或&emsp; <code>#</code>  和 <code>实体编号</code> 、一个 <code>;</code> 。<br>如： <code>&lt;</code>  == <code>&amp;lt;</code> == <code>&amp;#60;</code> || <code>&amp;</code> == <code>&amp;amp;</code> == <code>&amp;#38;</code> 。<br>链接内、网址名中的 <code>&amp;</code>  也是要转换成实体后，再放到 <code>&lt;a&gt;</code> 标签的 <code>herf</code> 属性中去。</li></ul><h4 id="②Markdown中"><a href="#②Markdown中" class="headerlink" title="②Markdown中"></a>②Markdown中</h4><ul><li>而 Markdown 可以让我们自然地书写字符。<br>你只需正常的写，Markdown 编译器会进行判断，然后在<strong>生成 HTML 代码时自动转换</strong>，无须编写者关注。</li><li>即如果使用的 <code>&amp;</code> 是 HTML 字符实体的一部分<strong>(即是标识实体的特殊字符时)</strong>，它会<strong>保留原状</strong>，*<em>否则自动转换成 <code>&amp;amp;</code> *</em>。</li><li>或如果把使用的 <code>&lt;</code> 作为 HTML 标签的定界符使用，它会保留原状，否则自动转换为其实体名。</li></ul><hr><h3 id="4-区块元素"><a href="#4-区块元素" class="headerlink" title="4.区块元素"></a>4.区块元素</h3><h4 id="①段落与换行"><a href="#①段落与换行" class="headerlink" title="①段落与换行"></a>①段落与换行</h4><ul><li>一个 Markdown <strong>段落的前后要有一个以上的空行</strong>(即无文本行)。<br>若一行只包含空格和制表符，则该行会被视为空行。</li><li>与 HTML 的空格和换行设定一样，不管换(空)多少行(格)，只一个符号有效。<br><strong>可以用 HTML 标签实现多个换行与空格功能。</strong></li></ul><p><img src="1.jpg" alt="Alt text"><br><img src="2.jpg" alt="Alt text"></p><h4 id="②标题"><a href="#②标题" class="headerlink" title="②标题"></a>②标题</h4><ul><li>Markdown 支持两种标题的语法，<code>类Setext</code> 和 <code>类atx</code> 形式。<ul><li><code>类setext</code> 形式：用底线的形式，<strong>=表示一级标题，–表示二级标题。</strong></li><li><code>类Atx</code> 形式：<strong>在行首插入1-6个 <code>#</code> ，对应1到6级标题</strong>。            </li></ul></li></ul><p><img src="3.jpg" alt="Alt text"><br><img src="4.jpg" alt="Alt text"></p><ul><li>作为美观,可以在行尾使用 <code>#</code> 闭合 <code>类atx</code> 样式的标题。</li></ul><h4 id="③区块引用"><a href="#③区块引用" class="headerlink" title="③区块引用"></a>③区块引用</h4><ul><li>Markdown 文件中建立一个区块引用，每行的最前面加上 <code>&gt;</code> 。 </li><li><strong>区块引用可以嵌套</strong>(例如：引用内的引用)，只要根据层次加上不同数量的 <code>&gt;</code> 。<br>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等。</li></ul><p><img src="5.jpg" alt="Alt text"><br><img src="6.jpg" alt="Alt text"></p><h4 id="④列表"><a href="#④列表" class="headerlink" title="④列表"></a>④列表</h4><ul><li>Markdown 支持有序列表和无序列表。<ul><li>无序列表使用 <code>*</code> 、<code>+</code> 或 <code>-</code> 接一个 <code>空格</code> 作为列表标记。          </li><li>有序列表则使用 <code>数字</code> 接 <code>.</code> 再接一个 <code>空格</code> 作为列表标记。        </li></ul></li><li>如果要在列表项目内放进引用,那就需要缩进：<br><code>空格</code> + 两个 <code>Tab</code> 为宜。</li></ul><ul><li>1</li></ul><ul><li>2</li></ul><ul><li>3</li></ul><p><img src="7.jpg" alt="Alt text"></p><ol><li>1</li><li>2</li><li>3</li></ol><p><img src="8.jpg" alt="Alt text"></p><h4 id="⑤分隔线"><a href="#⑤分隔线" class="headerlink" title="⑤分隔线"></a>⑤分隔线</h4><ul><li>在一行中用<strong>三个以上的 <code>*</code> 、 <code>-</code> 、 <code>_</code> 可建立一个分隔线</strong>，行内不能有其他东东。<br><strong>也可以在 <code>*</code> 或是 <code>-</code> 中间插入空格。</strong></li><li>ps：使用 <code>---</code> 必须上下行都是空行，防止它作用在文字底部加粗文字。</li></ul><p><img src="9.jpg" alt="Alt text"><br><img src="10.jpg" alt="Alt text"></p><h4 id="⑥表格"><a href="#⑥表格" class="headerlink" title="⑥表格"></a>⑥表格</h4><table><thead><tr><th align="left">Item</th><th align="right">Value</th><th align="center">Qty</th></tr></thead><tbody><tr><td align="left">Computer</td><td align="right">1600 USD</td><td align="center">5</td></tr><tr><td align="left">Phone</td><td align="right">12 USD</td><td align="center">12</td></tr><tr><td align="left">Pipe</td><td align="right">1 USD</td><td align="center">234</td></tr></tbody></table><p><img src="11.jpg" alt="Alt text"></p><hr><h3 id="5-区段元素"><a href="#5-区段元素" class="headerlink" title="5.区段元素"></a>5.区段元素</h3><h4 id="①文字链接"><a href="#①文字链接" class="headerlink" title="①文字链接"></a>①文字链接</h4><ul><li><a href="URL">123</a></li></ul><p><img src="12.jpg" alt="Alt text">      </p><h4 id="②强调"><a href="#②强调" class="headerlink" title="②强调"></a>②强调</h4><ul><li>Markdown使用 <code>*</code> 和下划线 <code>_</code> 作为标记强调文字的符号。<ul><li><strong>斜体</strong>：被一个 <code>*</code> 或 <code>_</code> 包围的文字，会被转成用 <code>&lt;em&gt;</code> 标签包围。</li><li><strong>加粗</strong>：用两个 <code>*</code> 或 <code>_</code> 包围的文字，会被转成用 <code>&lt;strong&gt;</code> 标签包围。    </li><li><strong>加粗斜体</strong>：被三个 <code>*</code> / <code>_</code> 包围。</li><li><strong>删除线</strong>：被<code>~~</code> 包围 / <code>&lt;del&gt;</code> 标签。      </li></ul></li><li>强调也可以直接插在文字中间。<ul><li>但是<strong>如果你的 <code>*</code> 和 <code>_</code> 两边都有空白的话，它们就会被当成普通的符号。</strong></li></ul></li><li><strong>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线。</strong></li></ul><h4 id="③代码"><a href="#③代码" class="headerlink" title="③代码"></a>③代码</h4><ul><li>如果要标记一小段行内代码，你可以用 <code>反引号</code> 把它包起来。</li></ul><p><img src="13.jpg" alt="Alt text"></p><ul><li>如果要标记多行代码：</li></ul><p><img src="14.jpg" alt="Alt text"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**123**</span><br></pre></td></tr></table></figure><blockquote><p>在代码区段内，<code>&amp;</code> 和 <code>&lt;</code> 都会被自动地转成 HTML 实体，这使得插入 HTML 原始代码变得很容易。代码区段中的<strong>Markdown 语法不会被转换，它们只是有高亮的普通文本。</strong>            </p></blockquote><h4 id="④图片"><a href="#④图片" class="headerlink" title="④图片"></a>④图片</h4><p><code>![图片的代替文字](URL)</code></p><blockquote><p>Markdown 没有办法指定图片的宽高。如果需要，可以使用普通的 <code>&lt;img&gt;</code>  标签。</p></blockquote><h4 id="⑤网址-邮箱链接"><a href="#⑤网址-邮箱链接" class="headerlink" title="⑤网址/邮箱链接"></a>⑤网址/邮箱链接</h4><ul><li><strong>用尖括号包起来，Markdown 就会自动把它转成链接。</strong></li><li><code>&lt;http:messi1002.top&gt;</code></li></ul><p><img src="15.jpg" alt="Alt text"></p><h4 id="⑥反斜杠"><a href="#⑥反斜杠" class="headerlink" title="⑥反斜杠"></a>⑥反斜杠</h4><ul><li>Markdown 支持以下符号<strong>前面加上反斜杠来帮助插入普通的符号</strong>：<br>即<strong>反斜杠可以转义 Markdown 中的特殊字符！</strong></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">\：反斜线。</span></span><br><span class="line"><span class="string">`：反引号。</span></span><br><span class="line"><span class="string">*：星号。</span></span><br><span class="line"><span class="string">_：底线。。</span></span><br><span class="line"><span class="string">&#123;&#125;：花括号。</span></span><br><span class="line"><span class="string">[]：方括号。</span></span><br><span class="line"><span class="string">()：括弧。</span></span><br><span class="line"><span class="comment">#：井字号。</span></span><br><span class="line"><span class="string">+：加号。</span></span><br><span class="line"><span class="bullet">-</span><span class="string">：减号。</span></span><br><span class="line"><span class="string">.：英文句点。</span></span><br><span class="line"><span class="string">!：惊叹号。</span></span><br></pre></td></tr></table></figure><ul><li>如果想在行首出现 <code>数字.空格</code> ，而不生成列表样式，可以在句点前面加上反斜杠。</li></ul><p><img src="16.jpg" alt="Alt text"><br><img src="17.jpg" alt="Alt text"></p><hr><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>我的个人博客：<a href="http:messi1002.top" target="_blank" rel="noopener">messi1002.top</a></li><li>如有错误或疑惑之处 请联系 <a href="mailto:&#119;&#106;&#x79;&#109;&#x65;&#x73;&#115;&#105;&#x40;&#x31;&#54;&#x33;&#46;&#99;&#x6f;&#x6d;" target="_blank" rel="noopener">&#119;&#106;&#x79;&#109;&#x65;&#x73;&#115;&#105;&#x40;&#x31;&#54;&#x33;&#46;&#99;&#x6f;&#x6d;</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-认识Markdown&quot;&gt;&lt;a href=&quot;#1-认识Markdown&quot; class=&quot;headerlink&quot; title=&quot;1.认识Markdown&quot;&gt;&lt;/a&gt;1.认识Markdown&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Markdown 是一种轻量级标记
      
    
    </summary>
    
    
      <category term="博客相关" scheme="http://messi1002.top/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Markdown" scheme="http://messi1002.top/tags/Markdown/"/>
    
  </entry>
  
</feed>
